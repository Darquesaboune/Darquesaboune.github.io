"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{2212:function(e,t,n){let i,r,a,s,o;n.r(t),n.d(t,{ACESFilmicToneMapping:function(){return eo},AddEquation:function(){return C},AddOperation:function(){return en},AdditiveAnimationBlendMode:function(){return tG},AdditiveBlending:function(){return E},AlphaFormat:function(){return eG},AlwaysDepth:function(){return X},AlwaysStencilFunc:function(){return nl},AmbientLight:function(){return uG},AmbientLightProbe:function(){return u7},AnimationClip:function(){return uu},AnimationLoader:function(){return ug},AnimationMixer:function(){return hR},AnimationObjectGroup:function(){return hA},AnimationUtils:function(){return l6},ArcCurve:function(){return o6},ArrayCamera:function(){return sk},ArrowHelper:function(){return cs},Audio:function(){return hl},AudioAnalyser:function(){return hf},AudioContext:function(){return u4},AudioListener:function(){return ho},AudioLoader:function(){return u5},AxesHelper:function(){return co},AxisHelper:function(){return c2},BackSide:function(){return _},BasicDepthPacking:function(){return t$},BasicShadowMap:function(){return m},BinaryTextureLoader:function(){return c8},Bone:function(){return og},BooleanKeyframeTrack:function(){return un},BoundingBoxHelper:function(){return c4},Box2:function(){return hH},Box3:function(){return nY},Box3Helper:function(){return ci},BoxBufferGeometry:function(){return rU},BoxGeometry:function(){return rU},BoxHelper:function(){return cn},BufferAttribute:function(){return i9},BufferGeometry:function(){return r_},BufferGeometryLoader:function(){return uJ},ByteType:function(){return eC},Cache:function(){return uh},Camera:function(){return rj},CameraHelper:function(){return h9},CanvasRenderer:function(){return de},CanvasTexture:function(){return oq},CatmullRomCurve3:function(){return ln},CineonToneMapping:function(){return es},CircleBufferGeometry:function(){return oY},CircleGeometry:function(){return oY},ClampToEdgeWrapping:function(){return ev},Clock:function(){return ht},Color:function(){return i5},ColorKeyframeTrack:function(){return ui},CompressedTexture:function(){return oj},CompressedTextureLoader:function(){return uv},ConeBufferGeometry:function(){return oZ},ConeGeometry:function(){return oZ},CubeCamera:function(){return rX},CubeReflectionMapping:function(){return eh},CubeRefractionMapping:function(){return ec},CubeTexture:function(){return rY},CubeTextureLoader:function(){return ux},CubeUVReflectionMapping:function(){return ef},CubeUVRefractionMapping:function(){return em},CubicBezierCurve:function(){return ls},CubicBezierCurve3:function(){return lo},CubicInterpolant:function(){return l8},CullFaceBack:function(){return d},CullFaceFront:function(){return p},CullFaceFrontBack:function(){return f},CullFaceNone:function(){return c},Curve:function(){return o4},CurvePath:function(){return uM},CustomBlending:function(){return R},CustomToneMapping:function(){return el},CylinderBufferGeometry:function(){return oJ},CylinderGeometry:function(){return oJ},Cylindrical:function(){return hF},DataTexture:function(){return ov},DataTexture2DArray:function(){return ap},DataTexture3D:function(){return af},DataTextureLoader:function(){return u_},DataUtils:function(){return ch},DecrementStencilOp:function(){return t7},DecrementWrapStencilOp:function(){return t9},DefaultLoadingManager:function(){return ud},DepthFormat:function(){return eX},DepthStencilFormat:function(){return eY},DepthTexture:function(){return oX},DirectionalLight:function(){return uU},DirectionalLightHelper:function(){return h6},DiscreteInterpolant:function(){return ue},DodecahedronBufferGeometry:function(){return oK},DodecahedronGeometry:function(){return oK},DoubleSide:function(){return b},DstAlphaFactor:function(){return G},DstColorFactor:function(){return V},DynamicBufferAttribute:function(){return cX},DynamicCopyUsage:function(){return ng},DynamicDrawUsage:function(){return nh},DynamicReadUsage:function(){return np},EdgesGeometry:function(){return o2},EdgesHelper:function(){return c5},EllipseCurve:function(){return o5},EqualDepth:function(){return Z},EqualStencilFunc:function(){return ni},EquirectangularReflectionMapping:function(){return ed},EquirectangularRefractionMapping:function(){return ep},Euler:function(){return iS},EventDispatcher:function(){return n_},ExtrudeBufferGeometry:function(){return lI},ExtrudeGeometry:function(){return lI},FaceColors:function(){return cz},FileLoader:function(){return um},FlatShading:function(){return M},Float16BufferAttribute:function(){return ro},Float32Attribute:function(){return c1},Float32BufferAttribute:function(){return rl},Float64Attribute:function(){return c3},Float64BufferAttribute:function(){return ru},FloatType:function(){return eB},Fog:function(){return sQ},FogExp2:function(){return sZ},Font:function(){return u3},FontLoader:function(){return u2},FrontSide:function(){return x},Frustum:function(){return r3},GLBufferAttribute:function(){return hD},GLSL1:function(){return ny},GLSL3:function(){return nx},GammaEncoding:function(){return tX},GreaterDepth:function(){return K},GreaterEqualDepth:function(){return Q},GreaterEqualStencilFunc:function(){return no},GreaterStencilFunc:function(){return na},GridHelper:function(){return h1},Group:function(){return sV},HalfFloatType:function(){return ez},HemisphereLight:function(){return uE},HemisphereLightHelper:function(){return h0},HemisphereLightProbe:function(){return u6},IcosahedronBufferGeometry:function(){return lB},IcosahedronGeometry:function(){return lB},ImageBitmapLoader:function(){return u0},ImageLoader:function(){return uy},ImageUtils:function(){return nz},ImmediateRenderObject:function(){return hV},IncrementStencilOp:function(){return t6},IncrementWrapStencilOp:function(){return t8},InstancedBufferAttribute:function(){return uY},InstancedBufferGeometry:function(){return uX},InstancedInterleavedBuffer:function(){return hP},InstancedMesh:function(){return oT},Int16Attribute:function(){return cQ},Int16BufferAttribute:function(){return ri},Int32Attribute:function(){return c$},Int32BufferAttribute:function(){return ra},Int8Attribute:function(){return cY},Int8BufferAttribute:function(){return re},IntType:function(){return eI},InterleavedBuffer:function(){return s$},InterleavedBufferAttribute:function(){return s1},Interpolant:function(){return l7},InterpolateDiscrete:function(){return tN},InterpolateLinear:function(){return tB},InterpolateSmooth:function(){return tz},InvertStencilOp:function(){return ne},JSONLoader:function(){return dt},KeepStencilOp:function(){return t4},KeyframeTrack:function(){return ut},LOD:function(){return ou},LatheBufferGeometry:function(){return lz},LatheGeometry:function(){return lz},Layers:function(){return iT},LensFlare:function(){return di},LessDepth:function(){return Y},LessEqualDepth:function(){return J},LessEqualStencilFunc:function(){return nr},LessStencilFunc:function(){return nn},Light:function(){return uT},LightProbe:function(){return uW},Line:function(){return oD},Line3:function(){return hk},LineBasicMaterial:function(){return oE},LineCurve:function(){return ll},LineCurve3:function(){return lu},LineDashedMaterial:function(){return l4},LineLoop:function(){return oz},LinePieces:function(){return cN},LineSegments:function(){return oB},LineStrip:function(){return cI},LinearEncoding:function(){return tj},LinearFilter:function(){return eS},LinearInterpolant:function(){return l9},LinearMipMapLinearFilter:function(){return eL},LinearMipMapNearestFilter:function(){return eE},LinearMipmapLinearFilter:function(){return eA},LinearMipmapNearestFilter:function(){return eT},LinearToneMapping:function(){return er},Loader:function(){return up},LoaderUtils:function(){return uq},LoadingManager:function(){return uc},LogLuvEncoding:function(){return tJ},LoopOnce:function(){return tP},LoopPingPong:function(){return tI},LoopRepeat:function(){return tD},LuminanceAlphaFormat:function(){return ej},LuminanceFormat:function(){return eW},MOUSE:function(){return u},Material:function(){return iK},MaterialLoader:function(){return uj},Math:function(){return nI},MathUtils:function(){return nI},Matrix3:function(){return nB},Matrix4:function(){return ip},MaxEquation:function(){return N},Mesh:function(){return rO},MeshBasicMaterial:function(){return i6},MeshDepthMaterial:function(){return sz},MeshDistanceMaterial:function(){return sF},MeshFaceMaterial:function(){return cO},MeshLambertMaterial:function(){return l3},MeshMatcapMaterial:function(){return l2},MeshNormalMaterial:function(){return l1},MeshPhongMaterial:function(){return l$},MeshPhysicalMaterial:function(){return lK},MeshStandardMaterial:function(){return lQ},MeshToonMaterial:function(){return l0},MinEquation:function(){return I},MirroredRepeatWrapping:function(){return ey},MixOperation:function(){return et},MultiMaterial:function(){return cH},MultiplyBlending:function(){return L},MultiplyOperation:function(){return ee},NearestFilter:function(){return ex},NearestMipMapLinearFilter:function(){return ew},NearestMipMapNearestFilter:function(){return eb},NearestMipmapLinearFilter:function(){return eM},NearestMipmapNearestFilter:function(){return e_},NeverDepth:function(){return q},NeverStencilFunc:function(){return nt},NoBlending:function(){return S},NoColors:function(){return cB},NoToneMapping:function(){return ei},NormalAnimationBlendMode:function(){return tU},NormalBlending:function(){return T},NotEqualDepth:function(){return $},NotEqualStencilFunc:function(){return ns},NumberKeyframeTrack:function(){return ur},Object3D:function(){return iH},ObjectLoader:function(){return uZ},ObjectSpaceNormalMap:function(){return t3},OctahedronBufferGeometry:function(){return lF},OctahedronGeometry:function(){return lF},OneFactor:function(){return z},OneMinusDstAlphaFactor:function(){return k},OneMinusDstColorFactor:function(){return W},OneMinusSrcAlphaFactor:function(){return U},OneMinusSrcColorFactor:function(){return O},OrthographicCamera:function(){return uO},PCFShadowMap:function(){return g},PCFSoftShadowMap:function(){return v},PMREMGenerator:function(){return cE},ParametricBufferGeometry:function(){return lO},ParametricGeometry:function(){return lO},Particle:function(){return cG},ParticleBasicMaterial:function(){return cW},ParticleSystem:function(){return ck},ParticleSystemMaterial:function(){return cj},Path:function(){return uw},PerspectiveCamera:function(){return rq},Plane:function(){return r$},PlaneBufferGeometry:function(){return r5},PlaneGeometry:function(){return r5},PlaneHelper:function(){return cr},PointCloud:function(){return cU},PointCloudMaterial:function(){return cV},PointLight:function(){return uF},PointLightHelper:function(){return hZ},Points:function(){return ok},PointsMaterial:function(){return oF},PolarGridHelper:function(){return h3},PolyhedronBufferGeometry:function(){return oQ},PolyhedronGeometry:function(){return oQ},PositionalAudio:function(){return hp},PropertyBinding:function(){return hE},PropertyMixer:function(){return hm},QuadraticBezierCurve:function(){return lh},QuadraticBezierCurve3:function(){return lc},Quaternion:function(){return nW},QuaternionKeyframeTrack:function(){return us},QuaternionLinearInterpolant:function(){return ua},REVISION:function(){return l},RGBADepthPacking:function(){return t0},RGBAFormat:function(){return eV},RGBAIntegerFormat:function(){return e0},RGBA_ASTC_10x10_Format:function(){return tp},RGBA_ASTC_10x5_Format:function(){return th},RGBA_ASTC_10x6_Format:function(){return tc},RGBA_ASTC_10x8_Format:function(){return td},RGBA_ASTC_12x10_Format:function(){return tf},RGBA_ASTC_12x12_Format:function(){return tm},RGBA_ASTC_4x4_Format:function(){return tn},RGBA_ASTC_5x4_Format:function(){return ti},RGBA_ASTC_5x5_Format:function(){return tr},RGBA_ASTC_6x5_Format:function(){return ta},RGBA_ASTC_6x6_Format:function(){return ts},RGBA_ASTC_8x5_Format:function(){return to},RGBA_ASTC_8x6_Format:function(){return tl},RGBA_ASTC_8x8_Format:function(){return tu},RGBA_BPTC_Format:function(){return tg},RGBA_ETC2_EAC_Format:function(){return tt},RGBA_PVRTC_2BPPV1_Format:function(){return e8},RGBA_PVRTC_4BPPV1_Format:function(){return e7},RGBA_S3TC_DXT1_Format:function(){return e3},RGBA_S3TC_DXT3_Format:function(){return e2},RGBA_S3TC_DXT5_Format:function(){return e4},RGBDEncoding:function(){return tK},RGBEEncoding:function(){return tY},RGBEFormat:function(){return eq},RGBFormat:function(){return ek},RGBIntegerFormat:function(){return e$},RGBM16Encoding:function(){return tQ},RGBM7Encoding:function(){return tZ},RGB_ETC1_Format:function(){return e9},RGB_ETC2_Format:function(){return te},RGB_PVRTC_2BPPV1_Format:function(){return e6},RGB_PVRTC_4BPPV1_Format:function(){return e5},RGB_S3TC_DXT1_Format:function(){return e1},RGFormat:function(){return eQ},RGIntegerFormat:function(){return eK},RawShaderMaterial:function(){return lZ},Ray:function(){return id},Raycaster:function(){return hI},RectAreaLight:function(){return uk},RedFormat:function(){return eJ},RedIntegerFormat:function(){return eZ},ReinhardToneMapping:function(){return ea},RepeatWrapping:function(){return eg},ReplaceStencilOp:function(){return t5},ReverseSubtractEquation:function(){return D},RingBufferGeometry:function(){return lH},RingGeometry:function(){return lH},SRGB8_ALPHA8_ASTC_10x10_Format:function(){return tL},SRGB8_ALPHA8_ASTC_10x5_Format:function(){return tT},SRGB8_ALPHA8_ASTC_10x6_Format:function(){return tE},SRGB8_ALPHA8_ASTC_10x8_Format:function(){return tA},SRGB8_ALPHA8_ASTC_12x10_Format:function(){return tR},SRGB8_ALPHA8_ASTC_12x12_Format:function(){return tC},SRGB8_ALPHA8_ASTC_4x4_Format:function(){return tv},SRGB8_ALPHA8_ASTC_5x4_Format:function(){return ty},SRGB8_ALPHA8_ASTC_5x5_Format:function(){return tx},SRGB8_ALPHA8_ASTC_6x5_Format:function(){return t_},SRGB8_ALPHA8_ASTC_6x6_Format:function(){return tb},SRGB8_ALPHA8_ASTC_8x5_Format:function(){return tM},SRGB8_ALPHA8_ASTC_8x6_Format:function(){return tw},SRGB8_ALPHA8_ASTC_8x8_Format:function(){return tS},Scene:function(){return sK},SceneUtils:function(){return dn},ShaderChunk:function(){return r6},ShaderLib:function(){return r8},ShaderMaterial:function(){return rW},ShadowMaterial:function(){return lJ},Shape:function(){return uS},ShapeBufferGeometry:function(){return lU},ShapeGeometry:function(){return lU},ShapePath:function(){return u1},ShapeUtils:function(){return lC},ShortType:function(){return eP},Skeleton:function(){return o_},SkeletonHelper:function(){return hJ},SkinnedMesh:function(){return om},SmoothShading:function(){return w},Sphere:function(){return ir},SphereBufferGeometry:function(){return lG},SphereGeometry:function(){return lG},Spherical:function(){return hz},SphericalHarmonics3:function(){return uV},SplineCurve:function(){return ld},SpotLight:function(){return uD},SpotLightHelper:function(){return hj},Sprite:function(){return oa},SpriteMaterial:function(){return s3},SrcAlphaFactor:function(){return H},SrcAlphaSaturateFactor:function(){return j},SrcColorFactor:function(){return F},StaticCopyUsage:function(){return nm},StaticDrawUsage:function(){return nu},StaticReadUsage:function(){return nd},StereoCamera:function(){return he},StreamCopyUsage:function(){return nv},StreamDrawUsage:function(){return nc},StreamReadUsage:function(){return nf},StringKeyframeTrack:function(){return uo},SubtractEquation:function(){return P},SubtractiveBlending:function(){return A},TOUCH:function(){return h},TangentSpaceNormalMap:function(){return t1},TetrahedronBufferGeometry:function(){return lk},TetrahedronGeometry:function(){return lk},TextBufferGeometry:function(){return lV},TextGeometry:function(){return lV},Texture:function(){return nO},TextureLoader:function(){return ub},TorusBufferGeometry:function(){return lW},TorusGeometry:function(){return lW},TorusKnotBufferGeometry:function(){return lj},TorusKnotGeometry:function(){return lj},Triangle:function(){return iZ},TriangleFanDrawMode:function(){return tW},TriangleStripDrawMode:function(){return tV},TrianglesDrawMode:function(){return tk},TubeBufferGeometry:function(){return lq},TubeGeometry:function(){return lq},UVMapping:function(){return eu},Uint16Attribute:function(){return cK},Uint16BufferAttribute:function(){return rr},Uint32Attribute:function(){return c0},Uint32BufferAttribute:function(){return rs},Uint8Attribute:function(){return cJ},Uint8BufferAttribute:function(){return rt},Uint8ClampedAttribute:function(){return cZ},Uint8ClampedBufferAttribute:function(){return rn},Uniform:function(){return hC},UniformsLib:function(){return r7},UniformsUtils:function(){return rV},UnsignedByteType:function(){return eR},UnsignedInt248Type:function(){return eU},UnsignedIntType:function(){return eN},UnsignedShort4444Type:function(){return eF},UnsignedShort5551Type:function(){return eO},UnsignedShort565Type:function(){return eH},UnsignedShortType:function(){return eD},VSMShadowMap:function(){return y},Vector2:function(){return nN},Vector3:function(){return nj},Vector4:function(){return nU},VectorKeyframeTrack:function(){return ul},Vertex:function(){return cq},VertexColors:function(){return cF},VideoTexture:function(){return oW},WebGL1Renderer:function(){return sJ},WebGLCubeRenderTarget:function(){return rJ},WebGLMultipleRenderTargets:function(){return nk},WebGLMultisampleRenderTarget:function(){return nV},WebGLRenderTarget:function(){return nG},WebGLRenderTargetCube:function(){return c9},WebGLRenderer:function(){return sY},WebGLUtils:function(){return sG},WireframeGeometry:function(){return lX},WireframeHelper:function(){return c6},WrapAroundEnding:function(){return tH},XHRLoader:function(){return c7},ZeroCurvatureEnding:function(){return tF},ZeroFactor:function(){return B},ZeroSlopeEnding:function(){return tO},ZeroStencilOp:function(){return t2},sRGBEncoding:function(){return tq}});/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ let l="130",u={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},h={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},c=0,d=1,p=2,f=3,m=0,g=1,v=2,y=3,x=0,_=1,b=2,M=1,w=2,S=0,T=1,E=2,A=3,L=4,R=5,C=100,P=101,D=102,I=103,N=104,B=200,z=201,F=202,O=203,H=204,U=205,G=206,k=207,V=208,W=209,j=210,q=0,X=1,Y=2,J=3,Z=4,Q=5,K=6,$=7,ee=0,et=1,en=2,ei=0,er=1,ea=2,es=3,eo=4,el=5,eu=300,eh=301,ec=302,ed=303,ep=304,ef=306,em=307,eg=1e3,ev=1001,ey=1002,ex=1003,e_=1004,eb=1004,eM=1005,ew=1005,eS=1006,eT=1007,eE=1007,eA=1008,eL=1008,eR=1009,eC=1010,eP=1011,eD=1012,eI=1013,eN=1014,eB=1015,ez=1016,eF=1017,eO=1018,eH=1019,eU=1020,eG=1021,ek=1022,eV=1023,eW=1024,ej=1025,eq=eV,eX=1026,eY=1027,eJ=1028,eZ=1029,eQ=1030,eK=1031,e$=1032,e0=1033,e1=33776,e3=33777,e2=33778,e4=33779,e5=35840,e6=35841,e7=35842,e8=35843,e9=36196,te=37492,tt=37496,tn=37808,ti=37809,tr=37810,ta=37811,ts=37812,to=37813,tl=37814,tu=37815,th=37816,tc=37817,td=37818,tp=37819,tf=37820,tm=37821,tg=36492,tv=37840,ty=37841,tx=37842,t_=37843,tb=37844,tM=37845,tw=37846,tS=37847,tT=37848,tE=37849,tA=37850,tL=37851,tR=37852,tC=37853,tP=2200,tD=2201,tI=2202,tN=2300,tB=2301,tz=2302,tF=2400,tO=2401,tH=2402,tU=2500,tG=2501,tk=0,tV=1,tW=2,tj=3e3,tq=3001,tX=3007,tY=3002,tJ=3003,tZ=3004,tQ=3005,tK=3006,t$=3200,t0=3201,t1=0,t3=1,t2=0,t4=7680,t5=7681,t6=7682,t7=7683,t8=34055,t9=34056,ne=5386,nt=512,nn=513,ni=514,nr=515,na=516,ns=517,no=518,nl=519,nu=35044,nh=35048,nc=35040,nd=35045,np=35049,nf=35041,nm=35046,ng=35050,nv=35042,ny="100",nx="300 es";class n_{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let n=this._listeners,i=n[e];if(void 0!==i){let r=i.indexOf(t);-1!==r&&i.splice(r,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,n=t[e.type];if(void 0!==n){e.target=this;let i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}let nb=[];for(let nM=0;nM<256;nM++)nb[nM]=(nM<16?"0":"")+nM.toString(16);let nw=1234567,nS=Math.PI/180,nT=180/Math.PI;function nE(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=nb[255&e]+nb[e>>8&255]+nb[e>>16&255]+nb[e>>24&255]+"-"+nb[255&t]+nb[t>>8&255]+"-"+nb[t>>16&15|64]+nb[t>>24&255]+"-"+nb[63&n|128]+nb[n>>8&255]+"-"+nb[n>>16&255]+nb[n>>24&255]+nb[255&i]+nb[i>>8&255]+nb[i>>16&255]+nb[i>>24&255];return r.toUpperCase()}function nA(e,t,n){return Math.max(t,Math.min(n,e))}function nL(e,t){return(e%t+t)%t}function nR(e,t,n){return(1-n)*e+n*t}function nC(e){return(e&e-1)==0&&0!==e}function nP(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function nD(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var nI=Object.freeze({__proto__:null,DEG2RAD:nS,RAD2DEG:nT,generateUUID:nE,clamp:nA,euclideanModulo:nL,mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:nR,damp:function(e,t,n,i){return nR(e,t,1-Math.exp(-n*i))},pingpong:function(e,t=1){return t-Math.abs(nL(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(nw=e%2147483647),((nw=16807*nw%2147483647)-1)/2147483646},degToRad:function(e){return e*nS},radToDeg:function(e){return e*nT},isPowerOfTwo:nC,ceilPowerOfTwo:nP,floorPowerOfTwo:nD,setQuaternionFromProperEuler:function(e,t,n,i,r){let a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),u=a((t+i)/2),h=s((t+i)/2),c=a((t-i)/2),d=s((t-i)/2),p=a((i-t)/2),f=s((i-t)/2);switch(r){case"XYX":e.set(o*h,l*c,l*d,o*u);break;case"YZY":e.set(l*d,o*h,l*c,o*u);break;case"ZXZ":e.set(l*c,l*d,o*h,o*u);break;case"XZX":e.set(o*h,l*f,l*p,o*u);break;case"YXY":e.set(l*p,o*h,l*f,o*u);break;case"ZYZ":e.set(l*f,l*p,o*h,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}});class nN{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}nN.prototype.isVector2=!0;class nB{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,s,o,l){let u=this.elements;return u[0]=e,u[1]=i,u[2]=s,u[3]=t,u[4]=r,u[5]=o,u[6]=n,u[7]=a,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],u=n[4],h=n[7],c=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],b=i[5],M=i[8];return r[0]=a*f+s*v+o*_,r[3]=a*m+s*y+o*b,r[6]=a*g+s*x+o*M,r[1]=l*f+u*v+h*_,r[4]=l*m+u*y+h*b,r[7]=l*g+u*x+h*M,r[2]=c*f+d*v+p*_,r[5]=c*m+d*y+p*b,r[8]=c*g+d*x+p*M,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8];return t*a*u-t*s*l-n*r*u+n*s*o+i*r*l-i*a*o}invert(){let e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8],h=u*a-s*l,c=s*o-u*r,d=l*r-a*o,p=t*h+n*c+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=h*f,e[1]=(i*l-u*n)*f,e[2]=(s*n-i*a)*f,e[3]=c*f,e[4]=(u*t-i*o)*f,e[5]=(i*r-s*t)*f,e[6]=d*f,e[7]=(n*o-l*t)*f,e[8]=(a*t-n*r)*f,this}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,s){let o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*a+l*s)+a+e,-i*l,i*o,-i*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){let n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){let t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],a=i[3],s=i[6],o=i[1],l=i[4],u=i[7];return i[0]=t*r+n*o,i[3]=t*a+n*l,i[6]=t*s+n*u,i[1]=-n*r+t*o,i[4]=-n*a+t*l,i[7]=-n*s+t*u,this}translate(e,t){let n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){let t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}nB.prototype.isMatrix3=!0;class nz{static getDataURL(e){let t;if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)t=e;else{void 0===i&&(i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),i.width=e.width,i.height=e.height;let n=i.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=i}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let nF=0;class nO extends n_{constructor(e=nO.DEFAULT_IMAGE,t=nO.DEFAULT_MAPPING,n=ev,i=ev,r=eS,a=eA,s=eV,o=eR,l=1,u=tj){super(),Object.defineProperty(this,"id",{value:nF++}),this.uuid=nE(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new nN(0,0),this.repeat=new nN(1,1),this.center=new nN(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new nB,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){let i=this.image;if(void 0===i.uuid&&(i.uuid=nE()),!t&&void 0===e.images[i.uuid]){let r;if(Array.isArray(i)){r=[];for(let a=0,s=i.length;a<s;a++)i[a].isDataTexture?r.push(nH(i[a].image)):r.push(nH(i[a]))}else r=nH(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==eu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case eg:e.x=e.x-Math.floor(e.x);break;case ev:e.x=e.x<0?0:1;break;case ey:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case eg:e.y=e.y-Math.floor(e.y);break;case ev:e.y=e.y<0?0:1;break;case ey:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function nH(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?nz.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}nO.DEFAULT_IMAGE=void 0,nO.DEFAULT_MAPPING=eu,nO.prototype.isTexture=!0;class nU{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i;let r=e.elements,a=r[0],s=r[4],o=r[8],l=r[1],u=r[5],h=r[9],c=r[2],d=r[6],p=r[10];if(.01>Math.abs(s-l)&&.01>Math.abs(o-c)&&.01>Math.abs(h-d)){if(.1>Math.abs(s+l)&&.1>Math.abs(o+c)&&.1>Math.abs(h+d)&&.1>Math.abs(a+u+p-3))return this.set(1,0,0,0),this;let f=(a+1)/2,m=(u+1)/2,g=(p+1)/2,v=(s+l)/4,y=(o+c)/4,x=(h+d)/4;return f>m&&f>g?f<.01?(t=0,n=.707106781,i=.707106781):(n=v/(t=Math.sqrt(f)),i=y/t):m>g?m<.01?(t=.707106781,n=0,i=.707106781):(t=v/(n=Math.sqrt(m)),i=x/n):g<.01?(t=.707106781,n=.707106781,i=0):(t=y/(i=Math.sqrt(g)),n=x/i),this.set(t,n,i,Math.PI),this}let _=Math.sqrt((d-h)*(d-h)+(o-c)*(o-c)+(l-s)*(l-s));return .001>Math.abs(_)&&(_=1),this.x=(d-h)/_,this.y=(o-c)/_,this.z=(l-s)/_,this.w=Math.acos((a+u+p-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}nU.prototype.isVector4=!0;class nG extends n_{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new nU(0,0,e,t),this.scissorTest=!1,this.viewport=new nU(0,0,e,t),this.texture=new nO(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:eS,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}nG.prototype.isWebGLRenderTarget=!0;class nk extends nG{constructor(e,t,n){super(e,t);let i=this.texture;this.texture=[];for(let r=0;r<n;r++)this.texture[r]=i.clone()}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}nk.prototype.isWebGLMultipleRenderTargets=!0;class nV extends nG{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}nV.prototype.isWebGLMultisampleRenderTarget=!0;class nW{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,a,s){let o=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3],c=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(1===s){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(h!==f||o!==c||l!==d||u!==p){let m=1-s,g=o*c+l*d+u*p+h*f,v=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){let x=Math.sqrt(y),_=Math.atan2(x,g*v);m=Math.sin(m*_)/x,s=Math.sin(s*_)/x}let b=s*v;if(o=o*m+c*b,l=l*m+d*b,u=u*m+p*b,h=h*m+f*b,m===1-s){let M=1/Math.sqrt(o*o+l*l+u*u+h*h);o*=M,l*=M,u*=M,h*=M}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,a){let s=n[i],o=n[i+1],l=n[i+2],u=n[i+3],h=r[a],c=r[a+1],d=r[a+2],p=r[a+3];return e[t]=s*p+u*h+o*d-l*c,e[t+1]=o*p+u*c+l*h-s*d,e[t+2]=l*p+u*d+s*c-o*h,e[t+3]=u*p-s*h-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let n=e._x,i=e._y,r=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(n/2),u=s(i/2),h=s(r/2),c=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"YXZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"ZXY":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"ZYX":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"YZX":this._x=c*u*h+l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h-c*d*p;break;case"XZY":this._x=c*u*h-l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],s=t[5],o=t[9],l=t[2],u=t[6],h=t[10],c=n+s+h;if(c>0){let d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(u-o)*d,this._y=(r-l)*d,this._z=(a-i)*d}else if(n>s&&n>h){let p=2*Math.sqrt(1+n-s-h);this._w=(u-o)/p,this._x=.25*p,this._y=(i+a)/p,this._z=(r+l)/p}else if(s>h){let f=2*Math.sqrt(1+s-n-h);this._w=(r-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(o+u)/f}else{let m=2*Math.sqrt(1+h-n-s);this._w=(a-i)/m,this._x=(r+l)/m,this._y=(o+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(nA(this.dot(e),-1,1)))}rotateTowards(e,t){let n=this.angleTo(e);return 0===n||this.slerp(e,Math.min(1,t/n)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let n=e._x,i=e._y,r=e._z,a=e._w,s=t._x,o=t._y,l=t._z,u=t._w;return this._x=n*u+a*s+i*l-r*o,this._y=i*u+a*o+r*s-n*l,this._z=r*u+a*l+n*o-i*s,this._w=a*u-n*s-i*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let n=this._x,i=this._y,r=this._z,a=this._w,s=a*e._w+n*e._x+i*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;let o=1-s*s;if(o<=Number.EPSILON){let l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*i+t*this._y,this._z=l*r+t*this._z,this.normalize(),this._onChangeCallback(),this}let u=Math.sqrt(o),h=Math.atan2(u,s),c=Math.sin((1-t)*h)/u,d=Math.sin(t*h)/u;return this._w=a*c+this._w*d,this._x=n*c+this._x*d,this._y=i*c+this._y*d,this._z=r*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}nW.prototype.isQuaternion=!0;class nj{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(nX.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(nX.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){let t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*i-s*n,u=o*n+s*t-r*i,h=o*i+r*n-a*t,c=-r*t-a*n-s*i;return this.x=l*o+-(c*r)+-(u*s)- -(h*a),this.y=u*o+-(c*a)+-(h*r)- -(l*s),this.z=h*o+-(c*s)+-(l*a)- -(u*r),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){let n=e.x,i=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return nq.copy(this).projectOnVector(e),this.sub(nq)}reflect(e){return this.sub(nq.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let n=this.dot(e)/t;return Math.acos(nA(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){let i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}nj.prototype.isVector3=!0;let nq=new nj,nX=new nW;class nY{constructor(e=new nj(Infinity,Infinity,Infinity),t=new nj(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,n=Infinity,i=Infinity,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.length;o<l;o+=3){let u=e[o],h=e[o+1],c=e[o+2];u<t&&(t=u),h<n&&(n=h),c<i&&(i=c),u>r&&(r=u),h>a&&(a=h),c>s&&(s=c)}return this.min.set(t,n,i),this.max.set(r,a,s),this}setFromBufferAttribute(e){let t=Infinity,n=Infinity,i=Infinity,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.count;o<l;o++){let u=e.getX(o),h=e.getY(o),c=e.getZ(o);u<t&&(t=u),h<n&&(n=h),c<i&&(i=c),u>r&&(r=u),h>a&&(a=h),c>s&&(s=c)}return this.min.set(t,n,i),this.max.set(r,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=nZ.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);let t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),nQ.copy(t.boundingBox),nQ.applyMatrix4(e.matrixWorld),this.union(nQ));let n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i]);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,nZ),nZ.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(n4),n5.subVectors(this.max,n4),nK.subVectors(e.a,n4),n$.subVectors(e.b,n4),n0.subVectors(e.c,n4),n1.subVectors(n$,nK),n3.subVectors(n0,n$),n2.subVectors(nK,n0);let t=[0,-n1.z,n1.y,0,-n3.z,n3.y,0,-n2.z,n2.y,n1.z,0,-n1.x,n3.z,0,-n3.x,n2.z,0,-n2.x,-n1.y,n1.x,0,-n3.y,n3.x,0,-n2.y,n2.x,0];return!!(n8(t,nK,n$,n0,n5)&&n8(t=[1,0,0,0,1,0,0,0,1],nK,n$,n0,n5))&&(n6.crossVectors(n1,n3),n8(t=[n6.x,n6.y,n6.z],nK,n$,n0,n5))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=nZ.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(nZ).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(nJ[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),nJ[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),nJ[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),nJ[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),nJ[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),nJ[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),nJ[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),nJ[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(nJ)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}nY.prototype.isBox3=!0;let nJ=[new nj,new nj,new nj,new nj,new nj,new nj,new nj,new nj],nZ=new nj,nQ=new nY,nK=new nj,n$=new nj,n0=new nj,n1=new nj,n3=new nj,n2=new nj,n4=new nj,n5=new nj,n6=new nj,n7=new nj;function n8(e,t,n,i,r){for(let a=0,s=e.length-3;a<=s;a+=3){n7.fromArray(e,a);let o=r.x*Math.abs(n7.x)+r.y*Math.abs(n7.y)+r.z*Math.abs(n7.z),l=t.dot(n7),u=n.dot(n7),h=i.dot(n7);if(Math.max(-Math.max(l,u,h),Math.min(l,u,h))>o)return!1}return!0}let n9=new nY,ie=new nj,it=new nj,ii=new nj;class ir{constructor(e=new nj,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let n=this.center;void 0!==t?n.copy(t):n9.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){ii.subVectors(e,this.center);let t=ii.lengthSq();if(t>this.radius*this.radius){let n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(ii.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return it.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(ie.copy(e.center).add(it)),this.expandByPoint(ie.copy(e.center).sub(it)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let ia=new nj,is=new nj,io=new nj,il=new nj,iu=new nj,ih=new nj,ic=new nj;class id{constructor(e=new nj,t=new nj(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ia)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=ia.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ia.copy(this.direction).multiplyScalar(t).add(this.origin),ia.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){let r,a,s,o;is.copy(e).add(t).multiplyScalar(.5),io.copy(t).sub(e).normalize(),il.copy(this.origin).sub(is);let l=.5*e.distanceTo(t),u=-this.direction.dot(io),h=il.dot(this.direction),c=-il.dot(io),d=il.lengthSq(),p=Math.abs(1-u*u);if(p>0){if(r=u*c-h,a=u*h-c,o=l*p,r>=0){if(a>=-o){if(a<=o){let f=1/p;r*=f,a*=f,s=r*(r+u*a+2*h)+a*(u*r+a+2*c)+d}else s=-(r=Math.max(0,-(u*(a=l)+h)))*r+a*(a+2*c)+d}else s=-(r=Math.max(0,-(u*(a=-l)+h)))*r+a*(a+2*c)+d}else a<=-o?(a=(r=Math.max(0,-(-u*l+h)))>0?-l:Math.min(Math.max(-l,-c),l),s=-r*r+a*(a+2*c)+d):a<=o?(r=0,s=(a=Math.min(Math.max(-l,-c),l))*(a+2*c)+d):(a=(r=Math.max(0,-(u*l+h)))>0?l:Math.min(Math.max(-l,-c),l),s=-r*r+a*(a+2*c)+d)}else a=u>0?-l:l,s=-(r=Math.max(0,-(u*a+h)))*r+a*(a+2*c)+d;return n&&n.copy(this.direction).multiplyScalar(r).add(this.origin),i&&i.copy(io).multiplyScalar(a).add(is),s}intersectSphere(e,t){ia.subVectors(e.center,this.origin);let n=ia.dot(this.direction),i=ia.dot(ia)-n*n,r=e.radius*e.radius;if(i>r)return null;let a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){let n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);if(0===t)return!0;let n=e.normal.dot(this.direction);return n*t<0}intersectBox(e,t){let n,i,r,a,s,o;let l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,c=this.origin;return(l>=0?(n=(e.min.x-c.x)*l,i=(e.max.x-c.x)*l):(n=(e.max.x-c.x)*l,i=(e.min.x-c.x)*l),u>=0?(r=(e.min.y-c.y)*u,a=(e.max.y-c.y)*u):(r=(e.max.y-c.y)*u,a=(e.min.y-c.y)*u),n>a||r>i)?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),h>=0?(s=(e.min.z-c.z)*h,o=(e.max.z-c.z)*h):(s=(e.max.z-c.z)*h,o=(e.min.z-c.z)*h),n>o||s>i)?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return null!==this.intersectBox(e,ia)}intersectTriangle(e,t,n,i,r){let a;iu.subVectors(t,e),ih.subVectors(n,e),ic.crossVectors(iu,ih);let s=this.direction.dot(ic);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}il.subVectors(this.origin,e);let o=a*this.direction.dot(ih.crossVectors(il,ih));if(o<0)return null;let l=a*this.direction.dot(iu.cross(il));if(l<0||o+l>s)return null;let u=-a*il.dot(ic);return u<0?null:this.at(u/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ip{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,s,o,l,u,h,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=u,g[10]=h,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ip().fromArray(this.elements)}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){let t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,n=e.elements,i=1/im.setFromMatrixColumn(e,0).length(),r=1/im.setFromMatrixColumn(e,1).length(),a=1/im.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if("XYZ"===e.order){let c=a*u,d=a*h,p=s*u,f=s*h;t[0]=o*u,t[4]=-o*h,t[8]=l,t[1]=d+p*l,t[5]=c-f*l,t[9]=-s*o,t[2]=f-c*l,t[6]=p+d*l,t[10]=a*o}else if("YXZ"===e.order){let m=o*u,g=o*h,v=l*u,y=l*h;t[0]=m+y*s,t[4]=v*s-g,t[8]=a*l,t[1]=a*h,t[5]=a*u,t[9]=-s,t[2]=g*s-v,t[6]=y+m*s,t[10]=a*o}else if("ZXY"===e.order){let x=o*u,_=o*h,b=l*u,M=l*h;t[0]=x-M*s,t[4]=-a*h,t[8]=b+_*s,t[1]=_+b*s,t[5]=a*u,t[9]=M-x*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let w=a*u,S=a*h,T=s*u,E=s*h;t[0]=o*u,t[4]=T*l-S,t[8]=w*l+E,t[1]=o*h,t[5]=E*l+w,t[9]=S*l-T,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let A=a*o,L=a*l,R=s*o,C=s*l;t[0]=o*u,t[4]=C-A*h,t[8]=R*h+L,t[1]=h,t[5]=a*u,t[9]=-s*u,t[2]=-l*u,t[6]=L*h+R,t[10]=A-C*h}else if("XZY"===e.order){let P=a*o,D=a*l,I=s*o,N=s*l;t[0]=o*u,t[4]=-h,t[8]=l*u,t[1]=P*h+N,t[5]=a*u,t[9]=D*h-I,t[2]=I*h-D,t[6]=s*u,t[10]=N*h+P}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(iv,e,iy)}lookAt(e,t,n){let i=this.elements;return ib.subVectors(e,t),0===ib.lengthSq()&&(ib.z=1),ib.normalize(),ix.crossVectors(n,ib),0===ix.lengthSq()&&(1===Math.abs(n.z)?ib.x+=1e-4:ib.z+=1e-4,ib.normalize(),ix.crossVectors(n,ib)),ix.normalize(),i_.crossVectors(ib,ix),i[0]=ix.x,i[4]=i_.x,i[8]=ib.x,i[1]=ix.y,i[5]=i_.y,i[9]=ib.y,i[2]=ix.z,i[6]=i_.z,i[10]=ib.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],u=n[1],h=n[5],c=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=i[0],M=i[4],w=i[8],S=i[12],T=i[1],E=i[5],A=i[9],L=i[13],R=i[2],C=i[6],P=i[10],D=i[14],I=i[3],N=i[7],B=i[11],z=i[15];return r[0]=a*b+s*T+o*R+l*I,r[4]=a*M+s*E+o*C+l*N,r[8]=a*w+s*A+o*P+l*B,r[12]=a*S+s*L+o*D+l*z,r[1]=u*b+h*T+c*R+d*I,r[5]=u*M+h*E+c*C+d*N,r[9]=u*w+h*A+c*P+d*B,r[13]=u*S+h*L+c*D+d*z,r[2]=p*b+f*T+m*R+g*I,r[6]=p*M+f*E+m*C+g*N,r[10]=p*w+f*A+m*P+g*B,r[14]=p*S+f*L+m*D+g*z,r[3]=v*b+y*T+x*R+_*I,r[7]=v*M+y*E+x*C+_*N,r[11]=v*w+y*A+x*P+_*B,r[15]=v*S+y*L+x*D+_*z,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],s=e[5],o=e[9],l=e[13],u=e[2],h=e[6],c=e[10],d=e[14],p=e[3],f=e[7],m=e[11],g=e[15];return p*(+r*o*h-i*l*h-r*s*c+n*l*c+i*s*d-n*o*d)+f*(+t*o*d-t*l*c+r*a*c-i*a*d+i*l*u-r*o*u)+m*(+t*l*h-t*s*d-r*a*h+n*a*d+r*s*u-n*l*u)+g*(-i*s*u-t*o*h+t*s*c+i*a*h-n*a*c+n*o*u)}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,n){let i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){let e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],u=e[8],h=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=h*m*l-f*c*l+f*o*d-s*m*d-h*o*g+s*c*g,y=p*c*l-u*m*l-p*o*d+a*m*d+u*o*g-a*c*g,x=u*f*l-p*h*l+p*s*d-a*f*d-u*s*g+a*h*g,_=p*h*o-u*f*o-p*s*c+a*f*c+u*s*m-a*h*m,b=t*v+n*y+i*x+r*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let M=1/b;return e[0]=v*M,e[1]=(f*c*r-h*m*r-f*i*d+n*m*d+h*i*g-n*c*g)*M,e[2]=(s*m*r-f*o*r+f*i*l-n*m*l-s*i*g+n*o*g)*M,e[3]=(h*o*r-s*c*r-h*i*l+n*c*l+s*i*d-n*o*d)*M,e[4]=y*M,e[5]=(u*m*r-p*c*r+p*i*d-t*m*d-u*i*g+t*c*g)*M,e[6]=(p*o*r-a*m*r-p*i*l+t*m*l+a*i*g-t*o*g)*M,e[7]=(a*c*r-u*o*r+u*i*l-t*c*l-a*i*d+t*o*d)*M,e[8]=x*M,e[9]=(p*h*r-u*f*r-p*n*d+t*f*d+u*n*g-t*h*g)*M,e[10]=(a*f*r-p*s*r+p*n*l-t*f*l-a*n*g+t*s*g)*M,e[11]=(u*s*r-a*h*r-u*n*l+t*h*l+a*n*d-t*s*d)*M,e[12]=_*M,e[13]=(u*f*i-p*h*i+p*n*c-t*f*c-u*n*m+t*h*m)*M,e[14]=(p*s*i-a*f*i-p*n*o+t*f*o+a*n*m-t*s*m)*M,e[15]=(a*h*i-u*s*i+u*n*o-t*h*o-a*n*c+t*s*c)*M,this}scale(e){let t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,s=e.y,o=e.z,l=r*a,u=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,u*s+n,u*o-i*a,0,l*o-i*s,u*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){let i=this.elements,r=t._x,a=t._y,s=t._z,o=t._w,l=r+r,u=a+a,h=s+s,c=r*l,d=r*u,p=r*h,f=a*u,m=a*h,g=s*h,v=o*l,y=o*u,x=o*h,_=n.x,b=n.y,M=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*b,i[5]=(1-(c+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(p+y)*M,i[9]=(m-v)*M,i[10]=(1-(c+f))*M,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){let i=this.elements,r=im.set(i[0],i[1],i[2]).length(),a=im.set(i[4],i[5],i[6]).length(),s=im.set(i[8],i[9],i[10]).length(),o=this.determinant();o<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],ig.copy(this);let l=1/r,u=1/a,h=1/s;return ig.elements[0]*=l,ig.elements[1]*=l,ig.elements[2]*=l,ig.elements[4]*=u,ig.elements[5]*=u,ig.elements[6]*=u,ig.elements[8]*=h,ig.elements[9]*=h,ig.elements[10]*=h,t.setFromRotationMatrix(ig),n.x=r,n.y=a,n.z=s,this}makePerspective(e,t,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let s=this.elements;return s[0]=2*r/(t-e),s[4]=0,s[8]=(t+e)/(t-e),s[12]=0,s[1]=0,s[5]=2*r/(n-i),s[9]=(n+i)/(n-i),s[13]=0,s[2]=0,s[6]=0,s[10]=-(a+r)/(a-r),s[14]=-2*a*r/(a-r),s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,i,r,a){let s=this.elements,o=1/(t-e),l=1/(n-i),u=1/(a-r);return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-((t+e)*o),s[1]=0,s[5]=2*l,s[9]=0,s[13]=-((n+i)*l),s[2]=0,s[6]=0,s[10]=-2*u,s[14]=-((a+r)*u),s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){let t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}ip.prototype.isMatrix4=!0;let im=new nj,ig=new ip,iv=new nj(0,0,0),iy=new nj(1,1,1),ix=new nj,i_=new nj,ib=new nj,iM=new ip,iw=new nW;class iS{constructor(e=0,t=0,n=0,i=iS.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){let i=e.elements,r=i[0],a=i[4],s=i[8],o=i[1],l=i[5],u=i[9],h=i[2],c=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(nA(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-nA(u,-1,1)),.9999999>Math.abs(u)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(nA(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-nA(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(nA(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-nA(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return iM.makeRotationFromQuaternion(e),this.setFromRotationMatrix(iM,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return iw.setFromEuler(this),this.setFromQuaternion(iw,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new nj(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}iS.prototype.isEuler=!0,iS.DefaultOrder="XYZ",iS.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class iT{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}}let iE=0,iA=new nj,iL=new nW,iR=new ip,iC=new nj,iP=new nj,iD=new nj,iI=new nW,iN=new nj(1,0,0),iB=new nj(0,1,0),iz=new nj(0,0,1),iF={type:"added"},iO={type:"removed"};class iH extends n_{constructor(){super(),Object.defineProperty(this,"id",{value:iE++}),this.uuid=nE(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=iH.DefaultUp.clone();let e=new nj,t=new iS,n=new nW,i=new nj(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ip},normalMatrix:{value:new nB}}),this.matrix=new ip,this.matrixWorld=new ip,this.matrixAutoUpdate=iH.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new iT,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return iL.setFromAxisAngle(e,t),this.quaternion.multiply(iL),this}rotateOnWorldAxis(e,t){return iL.setFromAxisAngle(e,t),this.quaternion.premultiply(iL),this}rotateX(e){return this.rotateOnAxis(iN,e)}rotateY(e){return this.rotateOnAxis(iB,e)}rotateZ(e){return this.rotateOnAxis(iz,e)}translateOnAxis(e,t){return iA.copy(e).applyQuaternion(this.quaternion),this.position.add(iA.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(iN,e)}translateY(e){return this.translateOnAxis(iB,e)}translateZ(e){return this.translateOnAxis(iz,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(iR.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?iC.copy(e):iC.set(e,t,n);let i=this.parent;this.updateWorldMatrix(!0,!1),iP.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?iR.lookAt(iP,iC,this.up):iR.lookAt(iC,iP,this.up),this.quaternion.setFromRotationMatrix(iR),i&&(iR.extractRotation(i.matrixWorld),iL.setFromRotationMatrix(iR),this.quaternion.premultiply(iL.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(iF)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let n=this.children.indexOf(e);return -1!==n&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(iO)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(iO)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),iR.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),iR.multiply(e.parent.matrixWorld)),e.applyMatrix4(iR),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){let r=this.children[n],a=r.getObjectByProperty(e,t);if(void 0!==a)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(iP,e,iD),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(iP,iI,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){let n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);let a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){let s=a.shapes;if(Array.isArray(s))for(let o=0,l=s.length;o<l;o++){let u=s[o];r(e.shapes,u)}else r(e.shapes,s)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let h=[];for(let c=0,d=this.material.length;c<d;c++)h.push(r(e.materials,this.material[c]));i.material=h}else i.material=r(e.materials,this.material)}if(this.children.length>0){i.children=[];for(let p=0;p<this.children.length;p++)i.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let f=0;f<this.animations.length;f++){let m=this.animations[f];i.animations.push(r(e.animations,m))}}if(t){let g=w(e.geometries),v=w(e.materials),y=w(e.textures),x=w(e.images),_=w(e.shapes),b=w(e.skeletons),M=w(e.animations);g.length>0&&(n.geometries=g),v.length>0&&(n.materials=v),y.length>0&&(n.textures=y),x.length>0&&(n.images=x),_.length>0&&(n.shapes=_),b.length>0&&(n.skeletons=b),M.length>0&&(n.animations=M)}return n.object=i,n;function w(e){let t=[];for(let n in e){let i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++){let i=e.children[n];this.add(i.clone())}return this}}iH.DefaultUp=new nj(0,1,0),iH.DefaultMatrixAutoUpdate=!0,iH.prototype.isObject3D=!0;let iU=new nj,iG=new nj,ik=new nj,iV=new nj,iW=new nj,ij=new nj,iq=new nj,iX=new nj,iY=new nj,iJ=new nj;class iZ{constructor(e=new nj,t=new nj,n=new nj){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),iU.subVectors(e,t),i.cross(iU);let r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){iU.subVectors(i,t),iG.subVectors(n,t),ik.subVectors(e,t);let a=iU.dot(iU),s=iU.dot(iG),o=iU.dot(ik),l=iG.dot(iG),u=iG.dot(ik),h=a*l-s*s;if(0===h)return r.set(-2,-1,-1);let c=1/h,d=(l*o-s*u)*c,p=(a*u-s*o)*c;return r.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,iV),iV.x>=0&&iV.y>=0&&iV.x+iV.y<=1}static getUV(e,t,n,i,r,a,s,o){return this.getBarycoord(e,t,n,i,iV),o.set(0,0),o.addScaledVector(r,iV.x),o.addScaledVector(a,iV.y),o.addScaledVector(s,iV.z),o}static isFrontFacing(e,t,n,i){return iU.subVectors(n,t),iG.subVectors(e,t),0>iU.cross(iG).dot(i)}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return iU.subVectors(this.c,this.b),iG.subVectors(this.a,this.b),.5*iU.cross(iG).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return iZ.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return iZ.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return iZ.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return iZ.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return iZ.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let n,i;let r=this.a,a=this.b,s=this.c;iW.subVectors(a,r),ij.subVectors(s,r),iX.subVectors(e,r);let o=iW.dot(iX),l=ij.dot(iX);if(o<=0&&l<=0)return t.copy(r);iY.subVectors(e,a);let u=iW.dot(iY),h=ij.dot(iY);if(u>=0&&h<=u)return t.copy(a);let c=o*h-u*l;if(c<=0&&o>=0&&u<=0)return n=o/(o-u),t.copy(r).addScaledVector(iW,n);iJ.subVectors(e,s);let d=iW.dot(iJ),p=ij.dot(iJ);if(p>=0&&d<=p)return t.copy(s);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return i=l/(l-p),t.copy(r).addScaledVector(ij,i);let m=u*p-d*h;if(m<=0&&h-u>=0&&d-p>=0)return iq.subVectors(s,a),i=(h-u)/(h-u+(d-p)),t.copy(a).addScaledVector(iq,i);let g=1/(m+f+c);return n=f*g,i=c*g,t.copy(r).addScaledVector(iW,n).addScaledVector(ij,i)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let iQ=0;class iK extends n_{constructor(){super(),Object.defineProperty(this,"id",{value:iQ++}),this.uuid=nE(),this.name="",this.type="Material",this.fog=!0,this.blending=T,this.side=x,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=H,this.blendDst=U,this.blendEquation=C,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=J,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=nl,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=t4,this.stencilZFail=t4,this.stencilZPass=t4,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===M;continue}let i=this[t];if(void 0===i){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){let t=[];for(let n in e){let i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==T&&(n.blending=this.blending),this.side!==x&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){let r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,n=null;if(null!==t){let i=t.length;n=Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}iK.prototype.isMaterial=!0;let i$={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},i0={h:0,s:0,l:0},i1={h:0,s:0,l:0};function i3(e,t,n){return(n<0&&(n+=1),n>1&&(n-=1),n<1/6)?e+(t-e)*6*n:n<.5?t:n<2/3?e+(t-e)*6*(2/3-n):e}function i2(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function i4(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class i5{constructor(e,t,n){if(void 0===t&&void 0===n)return this.set(e);return this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=nL(e,1),t=nA(t,0,1),n=nA(n,0,1),0===t)this.r=this.g=this.b=n;else{let i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=i3(r,i,e+1/3),this.g=i3(r,i,e),this.b=i3(r,i,e-1/3)}return this}setStyle(e){let t;function n(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(t=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let i;let r=t[1],a=t[2];switch(r){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,n(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,n(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){let s=parseFloat(i[1])/360,o=parseInt(i[2],10)/100,l=parseInt(i[3],10)/100;return n(i[4]),this.setHSL(s,o,l)}}}else if(t=/^\#([A-Fa-f\d]+)$/.exec(e)){let u=t[1],h=u.length;if(3===h)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(6===h)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){let t=i$[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){let n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=i2(e.r),this.g=i2(e.g),this.b=i2(e.b),this}copyLinearToSRGB(e){return this.r=i4(e.r),this.g=i4(e.g),this.b=i4(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){let t,n;let i=this.r,r=this.g,a=this.b,s=Math.max(i,r,a),o=Math.min(i,r,a),l=(o+s)/2;if(o===s)t=0,n=0;else{let u=s-o;switch(n=l<=.5?u/(s+o):u/(2-s-o),s){case i:t=(r-a)/u+(r<a?6:0);break;case r:t=(a-i)/u+2;break;case a:t=(i-r)/u+4}t/=6}return e.h=t,e.s=n,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(i0),i0.h+=e,i0.s+=t,i0.l+=n,this.setHSL(i0.h,i0.s,i0.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(i0),e.getHSL(i1);let n=nR(i0.h,i1.h,t),i=nR(i0.s,i1.s,t),r=nR(i0.l,i1.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}i5.NAMES=i$,i5.prototype.isColor=!0,i5.prototype.r=1,i5.prototype.g=1,i5.prototype.b=1;class i6 extends iK{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new i5(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ee,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this}}i6.prototype.isMeshBasicMaterial=!0;let i7=new nj,i8=new nN;class i9{constructor(e,t,n){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=nu,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){let t=this.array,n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new i5),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this}copyVector2sArray(e){let t=this.array,n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new nN),t[n++]=a.x,t[n++]=a.y}return this}copyVector3sArray(e){let t=this.array,n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new nj),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this}copyVector4sArray(e){let t=this.array,n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new nU),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)i8.fromBufferAttribute(this,t),i8.applyMatrix3(e),this.setXY(t,i8.x,i8.y);else if(3===this.itemSize)for(let i=0,r=this.count;i<r;i++)i7.fromBufferAttribute(this,i),i7.applyMatrix3(e),this.setXYZ(i,i7.x,i7.y,i7.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)i7.x=this.getX(t),i7.y=this.getY(t),i7.z=this.getZ(t),i7.applyMatrix4(e),this.setXYZ(t,i7.x,i7.y,i7.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)i7.x=this.getX(t),i7.y=this.getY(t),i7.z=this.getZ(t),i7.applyNormalMatrix(e),this.setXYZ(t,i7.x,i7.y,i7.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)i7.x=this.getX(t),i7.y=this.getY(t),i7.z=this.getZ(t),i7.transformDirection(e),this.setXYZ(t,i7.x,i7.y,i7.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==nu&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}i9.prototype.isBufferAttribute=!0;class re extends i9{constructor(e,t,n){super(new Int8Array(e),t,n)}}class rt extends i9{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class rn extends i9{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class ri extends i9{constructor(e,t,n){super(new Int16Array(e),t,n)}}class rr extends i9{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class ra extends i9{constructor(e,t,n){super(new Int32Array(e),t,n)}}class rs extends i9{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class ro extends i9{constructor(e,t,n){super(new Uint16Array(e),t,n)}}ro.prototype.isFloat16BufferAttribute=!0;class rl extends i9{constructor(e,t,n){super(new Float32Array(e),t,n)}}class ru extends i9{constructor(e,t,n){super(new Float64Array(e),t,n)}}function rh(e){if(0===e.length)return-1/0;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}let rc={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function rd(e,t){return new rc[e](t)}let rp=0,rf=new ip,rm=new iH,rg=new nj,rv=new nY,ry=new nY,rx=new nj;class r_ extends n_{constructor(){super(),Object.defineProperty(this,"id",{value:rp++}),this.uuid=nE(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(rh(e)>65535?rs:rr)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let n=this.attributes.normal;if(void 0!==n){let i=new nB().getNormalMatrix(e);n.applyNormalMatrix(i),n.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return rf.makeRotationFromQuaternion(e),this.applyMatrix4(rf),this}rotateX(e){return rf.makeRotationX(e),this.applyMatrix4(rf),this}rotateY(e){return rf.makeRotationY(e),this.applyMatrix4(rf),this}rotateZ(e){return rf.makeRotationZ(e),this.applyMatrix4(rf),this}translate(e,t,n){return rf.makeTranslation(e,t,n),this.applyMatrix4(rf),this}scale(e,t,n){return rf.makeScale(e,t,n),this.applyMatrix4(rf),this}lookAt(e){return rm.lookAt(e),rm.updateMatrix(),this.applyMatrix4(rm.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(rg).negate(),this.translate(rg.x,rg.y,rg.z),this}setFromPoints(e){let t=[];for(let n=0,i=e.length;n<i;n++){let r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new rl(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new nY);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new nj(-1/0,-1/0,-1/0),new nj(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){let r=t[n];rv.setFromBufferAttribute(r),this.morphTargetsRelative?(rx.addVectors(this.boundingBox.min,rv.min),this.boundingBox.expandByPoint(rx),rx.addVectors(this.boundingBox.max,rv.max),this.boundingBox.expandByPoint(rx)):(this.boundingBox.expandByPoint(rv.min),this.boundingBox.expandByPoint(rv.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ir);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new nj,1/0);return}if(e){let n=this.boundingSphere.center;if(rv.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){let a=t[i];ry.setFromBufferAttribute(a),this.morphTargetsRelative?(rx.addVectors(rv.min,ry.min),rv.expandByPoint(rx),rx.addVectors(rv.max,ry.max),rv.expandByPoint(rx)):(rv.expandByPoint(ry.min),rv.expandByPoint(ry.max))}rv.getCenter(n);let s=0;for(let o=0,l=e.count;o<l;o++)rx.fromBufferAttribute(e,o),s=Math.max(s,n.distanceToSquared(rx));if(t)for(let u=0,h=t.length;u<h;u++){let c=t[u],d=this.morphTargetsRelative;for(let p=0,f=c.count;p<f;p++)rx.fromBufferAttribute(c,p),d&&(rg.fromBufferAttribute(e,p),rx.add(rg)),s=Math.max(s,n.distanceToSquared(rx))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,s=i.length/3;void 0===t.tangent&&this.setAttribute("tangent",new i9(new Float32Array(4*s),4));let o=t.tangent.array,l=[],u=[];for(let h=0;h<s;h++)l[h]=new nj,u[h]=new nj;let c=new nj,d=new nj,p=new nj,f=new nN,m=new nN,g=new nN,v=new nj,y=new nj,x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let _=0,b=x.length;_<b;++_){let M=x[_],w=M.start,S=M.count;for(let T=w,E=w+S;T<E;T+=3)!function(e,t,n){c.fromArray(i,3*e),d.fromArray(i,3*t),p.fromArray(i,3*n),f.fromArray(a,2*e),m.fromArray(a,2*t),g.fromArray(a,2*n),d.sub(c),p.sub(c),m.sub(f),g.sub(f);let r=1/(m.x*g.y-g.x*m.y);isFinite(r)&&(v.copy(d).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(r),y.copy(p).multiplyScalar(m.x).addScaledVector(d,-g.x).multiplyScalar(r),l[e].add(v),l[t].add(v),l[n].add(v),u[e].add(y),u[t].add(y),u[n].add(y))}(n[T+0],n[T+1],n[T+2])}let A=new nj,L=new nj,R=new nj,C=new nj;function P(e){R.fromArray(r,3*e),C.copy(R);let t=l[e];A.copy(t),A.sub(R.multiplyScalar(R.dot(t))).normalize(),L.crossVectors(C,t);let n=L.dot(u[e]);o[4*e]=A.x,o[4*e+1]=A.y,o[4*e+2]=A.z,o[4*e+3]=n<0?-1:1}for(let D=0,I=x.length;D<I;++D){let N=x[D],B=N.start,z=N.count;for(let F=B,O=B+z;F<O;F+=3)P(n[F+0]),P(n[F+1]),P(n[F+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new i9(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let i=0,r=n.count;i<r;i++)n.setXYZ(i,0,0,0);let a=new nj,s=new nj,o=new nj,l=new nj,u=new nj,h=new nj,c=new nj,d=new nj;if(e)for(let p=0,f=e.count;p<f;p+=3){let m=e.getX(p+0),g=e.getX(p+1),v=e.getX(p+2);a.fromBufferAttribute(t,m),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,v),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),l.fromBufferAttribute(n,m),u.fromBufferAttribute(n,g),h.fromBufferAttribute(n,v),l.add(c),u.add(c),h.add(c),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(g,u.x,u.y,u.z),n.setXYZ(v,h.x,h.y,h.z)}else for(let y=0,x=t.count;y<x;y+=3)a.fromBufferAttribute(t,y+0),s.fromBufferAttribute(t,y+1),o.fromBufferAttribute(t,y+2),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),n.setXYZ(y+0,c.x,c.y,c.z),n.setXYZ(y+1,c.x,c.y,c.z),n.setXYZ(y+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let n=this.attributes;for(let i in n){if(void 0===e.attributes[i])continue;let r=n[i],a=r.array,s=e.attributes[i],o=s.array,l=s.itemSize*t,u=Math.min(o.length,a.length-l);for(let h=0,c=l;h<u;h++,c++)a[c]=o[h]}return this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)rx.fromBufferAttribute(e,t),rx.normalize(),e.setXYZ(t,rx.x,rx.y,rx.z)}toNonIndexed(){function e(e,t){let n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i),s=0,o=0;for(let l=0,u=t.length;l<u;l++){s=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*i;for(let h=0;h<i;h++)a[o++]=n[s++]}return new i9(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new r_,n=this.index.array,i=this.attributes;for(let r in i){let a=i[r],s=e(a,n);t.setAttribute(r,s)}let o=this.morphAttributes;for(let l in o){let u=[],h=o[l];for(let c=0,d=h.length;c<d;c++){let p=h[c],f=e(p,n);u.push(f)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;let m=this.groups;for(let g=0,v=m.length;g<v;g++){let y=m[g];t.addGroup(y.start,y.count,y.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};let i=this.index;null!==i&&(e.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});let r=this.attributes;for(let a in r){let s=r[a];e.data.attributes[a]=s.toJSON(e.data)}let o={},l=!1;for(let u in this.morphAttributes){let h=this.morphAttributes[u],c=[];for(let d=0,p=h.length;d<p;d++){let f=h[d];c.push(f.toJSON(e.data))}c.length>0&&(o[u]=c,l=!0)}l&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);let m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));let g=this.boundingSphere;return null!==g&&(e.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),e}clone(){return new r_().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let n=e.index;null!==n&&this.setIndex(n.clone(t));let i=e.attributes;for(let r in i){let a=i[r];this.setAttribute(r,a.clone(t))}let s=e.morphAttributes;for(let o in s){let l=[],u=s[o];for(let h=0,c=u.length;h<c;h++)l.push(u[h].clone(t));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;let d=e.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p];this.addGroup(m.start,m.count,m.materialIndex)}let g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());let v=e.boundingSphere;return null!==v&&(this.boundingSphere=v.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}r_.prototype.isBufferGeometry=!0;let rb=new ip,rM=new id,rw=new ir,rS=new nj,rT=new nj,rE=new nj,rA=new nj,rL=new nj,rR=new nj,rC=new nj,rP=new nj,rD=new nj,rI=new nN,rN=new nN,rB=new nN,rz=new nj,rF=new nj;class rO extends iH{constructor(e=new r_,t=new i6){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){let s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){let n;let i=this.geometry,r=this.material,a=this.matrixWorld;if(void 0!==r&&(null===i.boundingSphere&&i.computeBoundingSphere(),rw.copy(i.boundingSphere),rw.applyMatrix4(a),!1!==e.ray.intersectsSphere(rw))){if(rb.copy(a).invert(),rM.copy(e.ray).applyMatrix4(rb),null!==i.boundingBox&&!1===rM.intersectsBox(i.boundingBox))return;if(i.isBufferGeometry){let s=i.index,o=i.attributes.position,l=i.morphAttributes.position,u=i.morphTargetsRelative,h=i.attributes.uv,c=i.attributes.uv2,d=i.groups,p=i.drawRange;if(null!==s){if(Array.isArray(r))for(let f=0,m=d.length;f<m;f++){let g=d[f],v=r[g.materialIndex],y=Math.max(g.start,p.start),x=Math.min(g.start+g.count,p.start+p.count);for(let _=y;_<x;_+=3){let b=s.getX(_),M=s.getX(_+1),w=s.getX(_+2);(n=rH(this,v,e,rM,o,l,u,h,c,b,M,w))&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{let S=Math.max(0,p.start),T=Math.min(s.count,p.start+p.count);for(let E=S;E<T;E+=3){let A=s.getX(E),L=s.getX(E+1),R=s.getX(E+2);(n=rH(this,r,e,rM,o,l,u,h,c,A,L,R))&&(n.faceIndex=Math.floor(E/3),t.push(n))}}}else if(void 0!==o){if(Array.isArray(r))for(let C=0,P=d.length;C<P;C++){let D=d[C],I=r[D.materialIndex],N=Math.max(D.start,p.start),B=Math.min(D.start+D.count,p.start+p.count);for(let z=N;z<B;z+=3){let F=z,O=z+1,H=z+2;(n=rH(this,I,e,rM,o,l,u,h,c,F,O,H))&&(n.faceIndex=Math.floor(z/3),n.face.materialIndex=D.materialIndex,t.push(n))}}else{let U=Math.max(0,p.start),G=Math.min(o.count,p.start+p.count);for(let k=U;k<G;k+=3){let V=k,W=k+1,j=k+2;(n=rH(this,r,e,rM,o,l,u,h,c,V,W,j))&&(n.faceIndex=Math.floor(k/3),t.push(n))}}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function rH(e,t,n,i,r,a,s,o,l,u,h,c){rS.fromBufferAttribute(r,u),rT.fromBufferAttribute(r,h),rE.fromBufferAttribute(r,c);let d=e.morphTargetInfluences;if(t.morphTargets&&a&&d){rC.set(0,0,0),rP.set(0,0,0),rD.set(0,0,0);for(let p=0,f=a.length;p<f;p++){let m=d[p],g=a[p];0!==m&&(rA.fromBufferAttribute(g,u),rL.fromBufferAttribute(g,h),rR.fromBufferAttribute(g,c),s?(rC.addScaledVector(rA,m),rP.addScaledVector(rL,m),rD.addScaledVector(rR,m)):(rC.addScaledVector(rA.sub(rS),m),rP.addScaledVector(rL.sub(rT),m),rD.addScaledVector(rR.sub(rE),m)))}rS.add(rC),rT.add(rP),rE.add(rD)}e.isSkinnedMesh&&(e.boneTransform(u,rS),e.boneTransform(h,rT),e.boneTransform(c,rE));let v=function(e,t,n,i,r,a,s,o){if(null===(t.side===_?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,t.side!==b,o)))return null;rF.copy(o),rF.applyMatrix4(e.matrixWorld);let l=n.ray.origin.distanceTo(rF);return l<n.near||l>n.far?null:{distance:l,point:rF.clone(),object:e}}(e,t,n,i,rS,rT,rE,rz);if(v){o&&(rI.fromBufferAttribute(o,u),rN.fromBufferAttribute(o,h),rB.fromBufferAttribute(o,c),v.uv=iZ.getUV(rz,rS,rT,rE,rI,rN,rB,new nN)),l&&(rI.fromBufferAttribute(l,u),rN.fromBufferAttribute(l,h),rB.fromBufferAttribute(l,c),v.uv2=iZ.getUV(rz,rS,rT,rE,rI,rN,rB,new nN));let y={a:u,b:h,c:c,normal:new nj,materialIndex:0};iZ.getNormal(rS,rT,rE,y.normal),v.face=y}return v}rO.prototype.isMesh=!0;class rU extends r_{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};let s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);let o=[],l=[],u=[],h=[],c=0,d=0;function p(e,t,n,i,r,a,p,f,m,g,v){let y=a/m,x=p/g,_=a/2,b=p/2,M=f/2,w=m+1,S=g+1,T=0,E=0,A=new nj;for(let L=0;L<S;L++){let R=L*x-b;for(let C=0;C<w;C++){let P=C*y-_;A[e]=P*i,A[t]=R*r,A[n]=M,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[n]=f>0?1:-1,u.push(A.x,A.y,A.z),h.push(C/m),h.push(1-L/g),T+=1}}for(let D=0;D<g;D++)for(let I=0;I<m;I++){let N=c+I+w*D,B=c+I+w*(D+1),z=c+(I+1)+w*(D+1),F=c+(I+1)+w*D;o.push(N,B,F),o.push(B,z,F),E+=6}s.addGroup(d,E,v),d+=E,c+=T}p("z","y","x",-1,-1,n,t,e,a,r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new rl(l,3)),this.setAttribute("normal",new rl(u,3)),this.setAttribute("uv",new rl(h,2))}static fromJSON(e){return new rU(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function rG(e){let t={};for(let n in e)for(let i in t[n]={},e[n]){let r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}return t}function rk(e){let t={};for(let n=0;n<e.length;n++){let i=rG(e[n]);for(let r in i)t[r]=i[r]}return t}let rV={clone:rG,merge:rk};class rW extends iK{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=rG(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let n in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let i=this.uniforms[n],r=i.value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let a={};for(let s in this.extensions)!0===this.extensions[s]&&(a[s]=!0);return Object.keys(a).length>0&&(t.extensions=a),t}}rW.prototype.isShaderMaterial=!0;class rj extends iH{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ip,this.projectionMatrix=new ip,this.projectionMatrixInverse=new ip}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}rj.prototype.isCamera=!0;class rq extends rj{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*nT*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*nS*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*nT*Math.atan(Math.tan(.5*nS*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*nS*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i,a=this.view;if(null!==this.view&&this.view.enabled){let s=a.fullWidth,o=a.fullHeight;r+=a.offsetX*i/s,t-=a.offsetY*n/o,i*=a.width/s,n*=a.height/o}let l=this.filmOffset;0!==l&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}rq.prototype.isPerspectiveCamera=!0;class rX extends iH{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;let i=new rq(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new nj(1,0,0)),this.add(i);let r=new rq(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new nj(-1,0,0)),this.add(r);let a=new rq(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new nj(0,1,0)),this.add(a);let s=new rq(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new nj(0,-1,0)),this.add(s);let o=new rq(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new nj(0,0,1)),this.add(o);let l=new rq(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new nj(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();let n=this.renderTarget,[i,r,a,s,o,l]=this.children,u=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;let c=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=c,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=u}}class rY extends nO{constructor(e,t,n,i,r,a,s,o,l,u){super(e=void 0!==e?e:[],t=void 0!==t?t:eh,n,i,r,a,s=void 0!==s?s:ek,o,l,u),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}rY.prototype.isCubeTexture=!0;class rJ extends nG{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new rY(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:eS,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=eV,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new rU(5,5,5),r=new rW({name:"CubemapFromEquirect",uniforms:rG(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:_,blending:S});r.uniforms.tEquirect.value=t;let a=new rO(i,r),s=t.minFilter;t.minFilter===eA&&(t.minFilter=eS);let o=new rX(1,10,this);return o.update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){let r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}rJ.prototype.isWebGLCubeRenderTarget=!0;let rZ=new nj,rQ=new nj,rK=new nB;class r${constructor(e=new nj(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){let i=rZ.subVectors(n,t).cross(rQ.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let n=e.delta(rZ),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let n=t||rK.getNormalMatrix(e),i=this.coplanarPoint(rZ).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}r$.prototype.isPlane=!0;let r0=new ir,r1=new nj;class r3{constructor(e=new r$,t=new r$,n=new r$,i=new r$,r=new r$,a=new r$){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(e){let t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){let t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],u=n[6],h=n[7],c=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return t[0].setComponents(s-i,h-o,f-c,y-m).normalize(),t[1].setComponents(s+i,h+o,f+c,y+m).normalize(),t[2].setComponents(s+r,h+l,f+d,y+g).normalize(),t[3].setComponents(s-r,h-l,f-d,y-g).normalize(),t[4].setComponents(s-a,h-u,f-p,y-v).normalize(),t[5].setComponents(s+a,h+u,f+p,y+v).normalize(),this}intersectsObject(e){let t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),r0.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(r0)}intersectsSprite(e){return r0.center.set(0,0,0),r0.radius=.7071067811865476,r0.applyMatrix4(e.matrixWorld),this.intersectsSphere(r0)}intersectsSphere(e){let t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++){let a=t[r].distanceToPoint(n);if(a<i)return!1}return!0}intersectsBox(e){let t=this.planes;for(let n=0;n<6;n++){let i=t[n];if(r1.x=i.normal.x>0?e.max.x:e.min.x,r1.y=i.normal.y>0?e.max.y:e.min.y,r1.z=i.normal.z>0?e.max.z:e.min.z,0>i.distanceToPoint(r1))return!1}return!0}containsPoint(e){let t=this.planes;for(let n=0;n<6;n++)if(0>t[n].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function r2(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function r4(e,t){let n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){let a=i.get(t);(!a||a.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let s=i.get(t);void 0===s?i.set(t,function(t,i){let r=t.array,a=t.usage,s=e.createBuffer();e.bindBuffer(i,s),e.bufferData(i,r,a),t.onUploadCallback();let o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?t.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:r instanceof Uint8Array?o=5121:r instanceof Uint8ClampedArray&&(o=5121),{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):s.version<t.version&&(!function(t,i,r){let a=i.array,s=i.updateRange;e.bindBuffer(r,t),-1===s.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(s.buffer,t,r),s.version=t.version)}}}class r5 extends r_{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};let r=e/2,a=t/2,s=Math.floor(n),o=Math.floor(i),l=s+1,u=o+1,h=e/s,c=t/o,d=[],p=[],f=[],m=[];for(let g=0;g<u;g++){let v=g*c-a;for(let y=0;y<l;y++){let x=y*h-r;p.push(x,-v,0),f.push(0,0,1),m.push(y/s),m.push(1-g/o)}}for(let _=0;_<o;_++)for(let b=0;b<s;b++){let M=b+l*_,w=b+l*(_+1),S=b+1+l*(_+1),T=b+1+l*_;d.push(M,w,T),d.push(w,S,T)}this.setIndex(d),this.setAttribute("position",new rl(p,3)),this.setAttribute("normal",new rl(f,3)),this.setAttribute("uv",new rl(m,2))}static fromJSON(e){return new r5(e.width,e.height,e.widthSegments,e.heightSegments)}}let r6={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	return vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n#else\n	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n	}\n	return 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotVH ) {\n	float fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n	return Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + viewDir );\n	float dotNL = saturate( dot( normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	return specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	vec3 FssEss = F * brdf.x + brdf.y;\n	float Ess = brdf.x + brdf.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n	float invAlpha = 1.0 / roughness;\n	float cos2h = NoH * NoH;\n	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n	vec3 N = geometry.normal;\n	vec3 V = geometry.viewDir;\n	vec3 H = normalize( V + L );\n	float dotNH = saturate( dot( N, H ) );\n	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_maxMipLevel 8.0\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_maxTileSize 256.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n		vec2 f = fract( uv );\n		uv += 0.5 - f;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		if ( mipInt < cubeUV_maxMipLevel ) {\n			uv.y += 2.0 * cubeUV_maxTileSize;\n		}\n		uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n		uv *= texelSize;\n		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x += texelSize;\n		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.y += texelSize;\n		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x -= texelSize;\n		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		vec3 tm = mix( tl, tr, f.x );\n		vec3 bm = mix( bl, br, f.x );\n		return mix( tm, bm, f.y );\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifndef ENVMAP_TYPE_CUBE_UV\n		envColor = envMapTexelToLinear( envColor );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float sigma = PI * roughness * roughness / ( 1.0 + roughness );\n		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n		#else\n			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	fogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float fogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return texture2D( gradientMap, coord ).rgb;\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		directLight.color = pointLight.color;\n		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n		directLight.visible = ( directLight.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( angleCos > spotLight.coneCos ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float specularRoughness;\n	vec3 specularColor;\n#ifdef CLEARCOAT\n	float clearcoat;\n	float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	vec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.specularRoughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifdef CLEARCOAT\n		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = ccDotNL * directLight.color;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			ccIrradiance *= PI;\n		#endif\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n			material.specularRoughness,\n			directLight.direction,\n			geometry,\n			material.sheenColor\n		);\n	#else\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n	#endif\n	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef CLEARCOAT\n		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n		float ccDotNL = ccDotNV;\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	float clearcoatInv = 1.0 - clearcoatDHR;\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n	#ifdef CLEARCOAT\n		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifndef USE_MORPHNORMALS\n		uniform float morphTargetInfluences[ 8 ];\n	#else\n		uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n	transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n	transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n	transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n		transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n		transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n		transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n		transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSNMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition.xyz / vWorldPosition.w;\n	vec3 v = normalize( cameraPosition - pos );\n	float ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\n	vec3 transmission = transmissionFactor * getIBLVolumeRefraction(\n		normal, v, roughnessFactor, material.diffuseColor, totalSpecular,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec4 vWorldPosition;\n	vec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\n		vec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\n		vec3 modelScale;\n		modelScale.x = length(vec3(modelMatrix[0].xyz));\n		modelScale.y = length(vec3(modelMatrix[1].xyz));\n		modelScale.z = length(vec3(modelMatrix[2].xyz));\n		return normalize(refractionVector) * thickness * modelScale;\n	}\n	float applyIorToRoughness(float roughness, float ior) {\n		return roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\n	}\n	vec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\n		float framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\n		return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\n	}\n	vec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\n		if (attenuationDistance == 0.0) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\n			vec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);			return transmittance * radiance;\n		}\n	}\n	vec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\n		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n		vec3 attenuationColor, float attenuationDistance) {\n		vec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\n		vec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\n		return (1.0 - specularColor) * attenuatedColor * baseColor;\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n	\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#ifndef FLAT_SHADED\n		vNormal = normalize( transformedNormal );\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define REFLECTIVITY\n	#define CLEARCOAT\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform vec3 attenuationColor;\n	uniform float attenuationDistance;\n#endif\n#ifdef REFLECTIVITY\n	uniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#ifdef USE_TRANSMISSION\n	varying vec4 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition;\n#endif\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}"},r7={common:{diffuse:{value:new i5(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new nB},uv2Transform:{value:new nB},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new nN(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new i5(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new i5(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new nB}},sprite:{diffuse:{value:new i5(16777215)},opacity:{value:1},center:{value:new nN(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new nB}}},r8={basic:{uniforms:rk([r7.common,r7.specularmap,r7.envmap,r7.aomap,r7.lightmap,r7.fog]),vertexShader:r6.meshbasic_vert,fragmentShader:r6.meshbasic_frag},lambert:{uniforms:rk([r7.common,r7.specularmap,r7.envmap,r7.aomap,r7.lightmap,r7.emissivemap,r7.fog,r7.lights,{emissive:{value:new i5(0)}}]),vertexShader:r6.meshlambert_vert,fragmentShader:r6.meshlambert_frag},phong:{uniforms:rk([r7.common,r7.specularmap,r7.envmap,r7.aomap,r7.lightmap,r7.emissivemap,r7.bumpmap,r7.normalmap,r7.displacementmap,r7.fog,r7.lights,{emissive:{value:new i5(0)},specular:{value:new i5(1118481)},shininess:{value:30}}]),vertexShader:r6.meshphong_vert,fragmentShader:r6.meshphong_frag},standard:{uniforms:rk([r7.common,r7.envmap,r7.aomap,r7.lightmap,r7.emissivemap,r7.bumpmap,r7.normalmap,r7.displacementmap,r7.roughnessmap,r7.metalnessmap,r7.fog,r7.lights,{emissive:{value:new i5(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:r6.meshphysical_vert,fragmentShader:r6.meshphysical_frag},toon:{uniforms:rk([r7.common,r7.aomap,r7.lightmap,r7.emissivemap,r7.bumpmap,r7.normalmap,r7.displacementmap,r7.gradientmap,r7.fog,r7.lights,{emissive:{value:new i5(0)}}]),vertexShader:r6.meshtoon_vert,fragmentShader:r6.meshtoon_frag},matcap:{uniforms:rk([r7.common,r7.bumpmap,r7.normalmap,r7.displacementmap,r7.fog,{matcap:{value:null}}]),vertexShader:r6.meshmatcap_vert,fragmentShader:r6.meshmatcap_frag},points:{uniforms:rk([r7.points,r7.fog]),vertexShader:r6.points_vert,fragmentShader:r6.points_frag},dashed:{uniforms:rk([r7.common,r7.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:r6.linedashed_vert,fragmentShader:r6.linedashed_frag},depth:{uniforms:rk([r7.common,r7.displacementmap]),vertexShader:r6.depth_vert,fragmentShader:r6.depth_frag},normal:{uniforms:rk([r7.common,r7.bumpmap,r7.normalmap,r7.displacementmap,{opacity:{value:1}}]),vertexShader:r6.normal_vert,fragmentShader:r6.normal_frag},sprite:{uniforms:rk([r7.sprite,r7.fog]),vertexShader:r6.sprite_vert,fragmentShader:r6.sprite_frag},background:{uniforms:{uvTransform:{value:new nB},t2D:{value:null}},vertexShader:r6.background_vert,fragmentShader:r6.background_frag},cube:{uniforms:rk([r7.envmap,{opacity:{value:1}}]),vertexShader:r6.cube_vert,fragmentShader:r6.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:r6.equirect_vert,fragmentShader:r6.equirect_frag},distanceRGBA:{uniforms:rk([r7.common,r7.displacementmap,{referencePosition:{value:new nj},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:r6.distanceRGBA_vert,fragmentShader:r6.distanceRGBA_frag},shadow:{uniforms:rk([r7.lights,r7.fog,{color:{value:new i5(0)},opacity:{value:1}}]),vertexShader:r6.shadow_vert,fragmentShader:r6.shadow_frag}};function r9(e,t,n,i,r){let a,s;let o=new i5(0),l=0,u=null,h=0,c=null;function d(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),d(o,l=t)},getClearAlpha:function(){return l},setClearAlpha:function(e){d(o,l=e)},render:function(n,r){let p=!1,f=!0===r.isScene?r.background:null;f&&f.isTexture&&(f=t.get(f));let m=e.xr,g=m.getSession&&m.getSession();g&&"additive"===g.environmentBlendMode&&(f=null),null===f?d(o,l):f&&f.isColor&&(d(f,1),p=!0),(e.autoClear||p)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),f&&(f.isCubeTexture||f.mapping===ef)?(void 0===s&&((s=new rO(new rU(1,1,1),new rW({name:"BackgroundCubeMaterial",uniforms:rG(r8.cube.uniforms),vertexShader:r8.cube.vertexShader,fragmentShader:r8.cube.fragmentShader,side:_,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(s)),s.material.uniforms.envMap.value=f,s.material.uniforms.flipEnvMap.value=f.isCubeTexture&&f._needsFlipEnvMap?-1:1,(u!==f||h!==f.version||c!==e.toneMapping)&&(s.material.needsUpdate=!0,u=f,h=f.version,c=e.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null)):f&&f.isTexture&&(void 0===a&&((a=new rO(new r5(2,2),new rW({name:"BackgroundMaterial",uniforms:rG(r8.background.uniforms),vertexShader:r8.background.vertexShader,fragmentShader:r8.background.fragmentShader,side:x,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),a.material.uniforms.uvTransform.value.copy(f.matrix),(u!==f||h!==f.version||c!==e.toneMapping)&&(a.material.needsUpdate=!0,u=f,h=f.version,c=e.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null))}}}function ae(e,t,n,i){let r=e.getParameter(34921),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},l=d(null),u=l;function h(t){return i.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function c(t){return i.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function d(e){let t=[],n=[],i=[];for(let a=0;a<r;a++)t[a]=0,n[a]=0,i[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function p(){let e=u.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){m(e,0)}function m(n,r){let a=u.newAttributes,s=u.enabledAttributes,o=u.attributeDivisors;if(a[n]=1,0===s[n]&&(e.enableVertexAttribArray(n),s[n]=1),o[n]!==r){let l=i.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r}}function g(){let t=u.newAttributes,n=u.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function v(t,n,r,a,s,o){!0===i.isWebGL2&&(5124===r||5125===r)?e.vertexAttribIPointer(t,n,r,s,o):e.vertexAttribPointer(t,n,r,a,s,o)}function y(){x(),u!==l&&h((u=l).object)}function x(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,c,y,x){let _=!1;if(s){let b=function(t,n,r){let s=!0===r.wireframe,l=o[t.id];void 0===l&&(l={},o[t.id]=l);let u=l[n.id];void 0===u&&(u={},l[n.id]=u);let h=u[s];return void 0===h&&(h=d(i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),u[s]=h),h}(y,c,l);u!==b&&h((u=b).object),(_=function(e,t){let n=u.attributes,i=e.attributes,r=0;for(let a in i){let s=n[a],o=i[a];if(void 0===s||s.attribute!==o||s.data!==o.data)return!0;r++}return u.attributesNum!==r||u.index!==t}(y,x))&&function(e,t){let n={},i=e.attributes,r=0;for(let a in i){let s=i[a],o={};o.attribute=s,s.data&&(o.data=s.data),n[a]=o,r++}u.attributes=n,u.attributesNum=r,u.index=t}(y,x)}else{let M=!0===l.wireframe;(u.geometry!==y.id||u.program!==c.id||u.wireframe!==M)&&(u.geometry=y.id,u.program=c.id,u.wireframe=M,_=!0)}!0===r.isInstancedMesh&&(_=!0),null!==x&&n.update(x,34963),_&&(function(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();let l=o.attributes,u=s.getAttributes(),h=a.defaultAttributeValues;for(let c in u){let d=u[c];if(d>=0){let y=l[c];if(void 0!==y){let x=y.normalized,_=y.itemSize,b=n.get(y);if(void 0===b)continue;let M=b.buffer,w=b.type,S=b.bytesPerElement;if(y.isInterleavedBufferAttribute){let T=y.data,E=T.stride,A=y.offset;T&&T.isInstancedInterleavedBuffer?(m(d,T.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=T.meshPerAttribute*T.count)):f(d),e.bindBuffer(34962,M),v(d,_,w,x,E*S,A*S)}else y.isInstancedBufferAttribute?(m(d,y.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=y.meshPerAttribute*y.count)):f(d),e.bindBuffer(34962,M),v(d,_,w,x,0,0)}else if("instanceMatrix"===c){let L=n.get(r.instanceMatrix);if(void 0===L)continue;let R=L.buffer,C=L.type;m(d+0,1),m(d+1,1),m(d+2,1),m(d+3,1),e.bindBuffer(34962,R),e.vertexAttribPointer(d+0,4,C,!1,64,0),e.vertexAttribPointer(d+1,4,C,!1,64,16),e.vertexAttribPointer(d+2,4,C,!1,64,32),e.vertexAttribPointer(d+3,4,C,!1,64,48)}else if("instanceColor"===c){let P=n.get(r.instanceColor);if(void 0===P)continue;let D=P.buffer,I=P.type;m(d,1),e.bindBuffer(34962,D),e.vertexAttribPointer(d,3,I,!1,12,0)}else if(void 0!==h){let N=h[c];if(void 0!==N)switch(N.length){case 2:e.vertexAttrib2fv(d,N);break;case 3:e.vertexAttrib3fv(d,N);break;case 4:e.vertexAttrib4fv(d,N);break;default:e.vertexAttrib1fv(d,N)}}}}g()}(r,l,c,y),null!==x&&e.bindBuffer(34963,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){for(let e in y(),o){let t=o[e];for(let n in t){let i=t[n];for(let r in i)c(i[r].object),delete i[r];delete t[n]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;let t=o[e.id];for(let n in t){let i=t[n];for(let r in i)c(i[r].object),delete i[r];delete t[n]}delete o[e.id]},releaseStatesOfProgram:function(e){for(let t in o){let n=o[t];if(void 0===n[e.id])continue;let i=n[e.id];for(let r in i)c(i[r].object),delete i[r];delete n[e.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function at(e,t,n,i){let r;let a=i.isWebGL2;this.setMode=function(e){r=e},this.render=function(t,i){e.drawArrays(r,t,i),n.update(i,r,1)},this.renderInstances=function(i,s,o){let l,u;if(0!==o){if(a)l=e,u="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[u](r,i,s,o),n.update(s,r,o)}}}function an(e,t,n){let i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,s=void 0!==n.precision?n.precision:"highp",o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=a||t.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,h=e.getParameter(34930),c=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),v=e.getParameter(36349),y=c>0,x=a||t.has("OES_texture_float"),_=a?e.getParameter(36183):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){let n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:_}}function ai(e){let t=this,n=null,i=0,r=!1,a=!1,s=new r$,o=new nB,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(e,n,i,r){let a=null!==e?e.length:0,u=null;if(0!==a){if(u=l.value,!0!==r||null===u){let h=i+4*a,c=n.matrixWorldInverse;o.getNormalMatrix(c),(null===u||u.length<h)&&(u=new Float32Array(h));for(let d=0,p=i;d!==a;++d,p+=4)s.copy(e[d]).applyMatrix4(c,o),s.normal.toArray(u,p),u[p+3]=s.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){let s=0!==e.length||t||0!==i||r;return r=t,n=h(e,a,0),i=e.length,s},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,u()},this.setState=function(t,s,o){let c=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(r&&null!==c&&0!==c.length&&(!a||p)){let m=a?0:i,g=4*m,v=f.clippingState||null;l.value=v,v=h(c,s,g,o);for(let y=0;y!==g;++y)v[y]=n[y];f.clippingState=v,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=m}else a?h(null):u()}}function ar(e){let t=new WeakMap;function n(e,t){return t===ed?e.mapping=eh:t===ep&&(e.mapping=ec),e}function i(e){let n=e.target;n.removeEventListener("dispose",i);let r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){let a=r.mapping;if(a===ed||a===ep){if(t.has(r)){let s=t.get(r).texture;return n(s,r.mapping)}{let o=r.image;if(!o||!(o.height>0))return null;{let l=e.getRenderTarget(),u=new rJ(o.height/2);return u.fromEquirectangularTexture(e,r),t.set(r,u),e.setRenderTarget(l),r.addEventListener("dispose",i),n(u.texture,r.mapping)}}}}return r},dispose:function(){t=new WeakMap}}}function aa(e){let t={};function n(n){let i;if(void 0!==t[n])return t[n];switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(e){let t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function as(e,t,n,i){let r={},a=new WeakMap;function s(e){let o=e.target;for(let l in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[l]);o.removeEventListener("dispose",s),delete r[o.id];let u=a.get(o);u&&(t.remove(u),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){let n=[],i=e.index,r=e.attributes.position,s=0;if(null!==i){let o=i.array;s=i.version;for(let l=0,u=o.length;l<u;l+=3){let h=o[l+0],c=o[l+1],d=o[l+2];n.push(h,c,c,d,d,h)}}else{let p=r.array;s=r.version;for(let f=0,m=p.length/3-1;f<m;f+=3){let g=f+0,v=f+1,y=f+2;n.push(g,v,v,y,y,g)}}let x=new(rh(n)>65535?rs:rr)(n,1);x.version=s;let _=a.get(e);_&&t.remove(_),a.set(e,x)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",s),r[t.id]=!0,n.memory.geometries++),t},update:function(e){let n=e.attributes;for(let i in n)t.update(n[i],34962);let r=e.morphAttributes;for(let a in r){let s=r[a];for(let o=0,l=s.length;o<l;o++)t.update(s[o],34962)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function ao(e,t,n,i){let r,a,s;let o=i.isWebGL2;this.setMode=function(e){r=e},this.setIndex=function(e){a=e.type,s=e.bytesPerElement},this.render=function(t,i){e.drawElements(r,i,a,t*s),n.update(i,r,1)},this.renderInstances=function(i,l,u){let h,c;if(0!==u){if(o)h=e,c="drawElementsInstanced";else if(h=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===h){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[c](r,l,a,i*s,u),n.update(l,r,u)}}}function al(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case 4:t.triangles+=i*(e/3);break;case 1:t.lines+=i*(e/2);break;case 3:t.lines+=i*(e-1);break;case 2:t.lines+=i*e;break;case 0:t.points+=i*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function au(e,t){return e[0]-t[0]}function ah(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ac(e){let t={},n=new Float32Array(8),i=[];for(let r=0;r<8;r++)i[r]=[r,0];return{update:function(r,a,s,o){let l=r.morphTargetInfluences,u=void 0===l?0:l.length,h=t[a.id];if(void 0===h||h.length!==u){h=[];for(let c=0;c<u;c++)h[c]=[c,0];t[a.id]=h}for(let d=0;d<u;d++){let p=h[d];p[0]=d,p[1]=l[d]}h.sort(ah);for(let f=0;f<8;f++)f<u&&h[f][1]?(i[f][0]=h[f][0],i[f][1]=h[f][1]):(i[f][0]=Number.MAX_SAFE_INTEGER,i[f][1]=0);i.sort(au);let m=s.morphTargets&&a.morphAttributes.position,g=s.morphNormals&&a.morphAttributes.normal,v=0;for(let y=0;y<8;y++){let x=i[y],_=x[0],b=x[1];_!==Number.MAX_SAFE_INTEGER&&b?(m&&a.getAttribute("morphTarget"+y)!==m[_]&&a.setAttribute("morphTarget"+y,m[_]),g&&a.getAttribute("morphNormal"+y)!==g[_]&&a.setAttribute("morphNormal"+y,g[_]),n[y]=b,v+=b):(m&&!0===a.hasAttribute("morphTarget"+y)&&a.deleteAttribute("morphTarget"+y),g&&!0===a.hasAttribute("morphNormal"+y)&&a.deleteAttribute("morphNormal"+y),n[y]=0)}let M=a.morphTargetsRelative?1:1-v;o.getUniforms().setValue(e,"morphTargetBaseInfluence",M),o.getUniforms().setValue(e,"morphTargetInfluences",n)}}}function ad(e,t,n,i){let r=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){let s=i.render.frame,o=e.geometry,l=t.get(e,o);return r.get(l)!==s&&(t.update(l),r.set(l,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}r8.physical={uniforms:rk([r8.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new nN(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new i5(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new nN},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new i5(0)}}]),vertexShader:r6.meshphysical_vert,fragmentShader:r6.meshphysical_frag};class ap extends nO{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=ex,this.minFilter=ex,this.wrapR=ev,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ap.prototype.isDataTexture2DArray=!0;class af extends nO{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=ex,this.minFilter=ex,this.wrapR=ev,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}af.prototype.isDataTexture3D=!0;let am=new nO,ag=new ap,av=new af,ay=new rY,ax=[],a_=[],ab=new Float32Array(16),aM=new Float32Array(9),aw=new Float32Array(4);function aS(e,t,n){let i=e[0];if(i<=0||i>0)return e;let r=t*n,a=ax[r];if(void 0===a&&(a=new Float32Array(r),ax[r]=a),0!==t){i.toArray(a,0);for(let s=1,o=0;s!==t;++s)o+=n,e[s].toArray(a,o)}return a}function aT(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function aE(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function aA(e,t){let n=a_[t];void 0===n&&(n=new Int32Array(t),a_[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function aL(e,t){let n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function aR(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(aT(n,t))return;e.uniform2fv(this.addr,t),aE(n,t)}}function aC(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(aT(n,t))return;e.uniform3fv(this.addr,t),aE(n,t)}}function aP(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(aT(n,t))return;e.uniform4fv(this.addr,t),aE(n,t)}}function aD(e,t){let n=this.cache,i=t.elements;if(void 0===i){if(aT(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),aE(n,t)}else{if(aT(n,i))return;aw.set(i),e.uniformMatrix2fv(this.addr,!1,aw),aE(n,i)}}function aI(e,t){let n=this.cache,i=t.elements;if(void 0===i){if(aT(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),aE(n,t)}else{if(aT(n,i))return;aM.set(i),e.uniformMatrix3fv(this.addr,!1,aM),aE(n,i)}}function aN(e,t){let n=this.cache,i=t.elements;if(void 0===i){if(aT(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),aE(n,t)}else{if(aT(n,i))return;ab.set(i),e.uniformMatrix4fv(this.addr,!1,ab),aE(n,i)}}function aB(e,t){let n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function az(e,t){let n=this.cache;aT(n,t)||(e.uniform2iv(this.addr,t),aE(n,t))}function aF(e,t){let n=this.cache;aT(n,t)||(e.uniform3iv(this.addr,t),aE(n,t))}function aO(e,t){let n=this.cache;aT(n,t)||(e.uniform4iv(this.addr,t),aE(n,t))}function aH(e,t){let n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function aU(e,t){let n=this.cache;aT(n,t)||(e.uniform2uiv(this.addr,t),aE(n,t))}function aG(e,t){let n=this.cache;aT(n,t)||(e.uniform3uiv(this.addr,t),aE(n,t))}function ak(e,t){let n=this.cache;aT(n,t)||(e.uniform4uiv(this.addr,t),aE(n,t))}function aV(e,t,n){let i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||am,r)}function aW(e,t,n){let i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||av,r)}function aj(e,t,n){let i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||ay,r)}function aq(e,t,n){let i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||ag,r)}function aX(e,t){e.uniform1fv(this.addr,t)}function aY(e,t){let n=aS(t,this.size,2);e.uniform2fv(this.addr,n)}function aJ(e,t){let n=aS(t,this.size,3);e.uniform3fv(this.addr,n)}function aZ(e,t){let n=aS(t,this.size,4);e.uniform4fv(this.addr,n)}function aQ(e,t){let n=aS(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function aK(e,t){let n=aS(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function a$(e,t){let n=aS(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function a0(e,t){e.uniform1iv(this.addr,t)}function a1(e,t){e.uniform2iv(this.addr,t)}function a3(e,t){e.uniform3iv(this.addr,t)}function a2(e,t){e.uniform4iv(this.addr,t)}function a4(e,t){e.uniform1uiv(this.addr,t)}function a5(e,t){e.uniform2uiv(this.addr,t)}function a6(e,t){e.uniform3uiv(this.addr,t)}function a7(e,t){e.uniform4uiv(this.addr,t)}function a8(e,t,n){let i=t.length,r=aA(n,i);e.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)n.safeSetTexture2D(t[a]||am,r[a])}function a9(e,t,n){let i=t.length,r=aA(n,i);e.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)n.safeSetTextureCube(t[a]||ay,r[a])}function se(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return aL;case 35664:return aR;case 35665:return aC;case 35666:return aP;case 35674:return aD;case 35675:return aI;case 35676:return aN;case 5124:case 35670:return aB;case 35667:case 35671:return az;case 35668:case 35672:return aF;case 35669:case 35673:return aO;case 5125:return aH;case 36294:return aU;case 36295:return aG;case 36296:return ak;case 35678:case 36198:case 36298:case 36306:case 35682:return aV;case 35679:case 36299:case 36307:return aW;case 35680:case 36300:case 36308:case 36293:return aj;case 36289:case 36303:case 36311:case 36292:return aq}}(t.type)}function st(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return aX;case 35664:return aY;case 35665:return aJ;case 35666:return aZ;case 35674:return aQ;case 35675:return aK;case 35676:return a$;case 5124:case 35670:return a0;case 35667:case 35671:return a1;case 35668:case 35672:return a3;case 35669:case 35673:return a2;case 5125:return a4;case 36294:return a5;case 36295:return a6;case 36296:return a7;case 35678:case 36198:case 36298:case 36306:case 35682:return a8;case 35680:case 36300:case 36308:case 36293:return a9}}(t.type)}function sn(e){this.id=e,this.seq=[],this.map={}}st.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),aE(t,e)},sn.prototype.setValue=function(e,t,n){let i=this.seq;for(let r=0,a=i.length;r!==a;++r){let s=i[r];s.setValue(e,t[s.id],n)}};let si=/(\w+)(\])?(\[|\.)?/g;function sr(e,t){e.seq.push(t),e.map[t.id]=t}function sa(e,t){this.seq=[],this.map={};let n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){let r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);!function(e,t,n){let i=e.name,r=i.length;for(si.lastIndex=0;;){let a=si.exec(i),s=si.lastIndex,o=a[1],l="]"===a[2],u=a[3];if(l&&(o|=0),void 0===u||"["===u&&s+2===r){sr(n,void 0===u?new se(o,e,t):new st(o,e,t));break}{let h=n.map,c=h[o];void 0===c&&sr(n,c=new sn(o)),n=c}}}(r,a,this)}}function ss(e,t,n){let i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}sa.prototype.setValue=function(e,t,n,i){let r=this.map[t];void 0!==r&&r.setValue(e,n,i)},sa.prototype.setOptional=function(e,t,n){let i=t[n];void 0!==i&&this.setValue(e,n,i)},sa.upload=function(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){let s=t[r],o=n[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,i)}},sa.seqWithValue=function(e,t){let n=[];for(let i=0,r=e.length;i!==r;++i){let a=e[i];a.id in t&&n.push(a)}return n};let so=0;function sl(e){switch(e){case tj:return["Linear","( value )"];case tq:return["sRGB","( value )"];case tY:return["RGBE","( value )"];case tZ:return["RGBM","( value, 7.0 )"];case tQ:return["RGBM","( value, 16.0 )"];case tK:return["RGBD","( value, 256.0 )"];case tX:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case tJ:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function su(e,t,n){let i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";let a=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(e){let t=e.split("\n");for(let n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}(a)}function sh(e,t){let n=sl(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function sc(e){return""!==e}function sd(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function sp(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let sf=/^[ \t]*#include +<([\w\d./]+)>/gm;function sm(e){return e.replace(sf,sg)}function sg(e,t){let n=r6[t];if(void 0===n)throw Error("Can not resolve #include <"+t+">");return sm(n)}let sv=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,sy=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sx(e){return e.replace(sy,sb).replace(sv,s_)}function s_(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sb(e,t,n,i)}function sb(e,t,n,i){let r="";for(let a=parseInt(t);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function sM(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function sw(e,t,n,i){let r,a,s,o,l;let u=e.getContext(),h=n.defines,c=n.vertexShader,d=n.fragmentShader,p=(l="SHADOWMAP_TYPE_BASIC",n.shadowMapType===g?l="SHADOWMAP_TYPE_PCF":n.shadowMapType===v?l="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===y&&(l="SHADOWMAP_TYPE_VSM"),l),f=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case eh:case ec:t="ENVMAP_TYPE_CUBE";break;case ef:case em:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),m=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case ec:case em:t="ENVMAP_MODE_REFRACTION"}return t}(n),x=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case ee:t="ENVMAP_BLENDING_MULTIPLY";break;case et:t="ENVMAP_BLENDING_MIX";break;case en:t="ENVMAP_BLENDING_ADD"}return t}(n),_=e.gammaFactor>0?e.gammaFactor:1,b=n.isWebGL2?"":function(e){let t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission>0)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(sc).join("\n")}(n),M=function(e){let t=[];for(let n in e){let i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(h),w=u.createProgram(),S=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((r=[M].filter(sc).join("\n")).length>0&&(r+="\n"),(a=[b,M].filter(sc).join("\n")).length>0&&(a+="\n")):(r=[sM(n),"#define SHADER_NAME "+n.shaderName,M,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+_,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(sc).join("\n"),a=[b,sM(n),"#define SHADER_NAME "+n.shaderName,M,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+_,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+f:"",n.envMap?"#define "+m:"",n.envMap?"#define "+x:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ei?"#define TONE_MAPPING":"",n.toneMapping!==ei?r6.tonemapping_pars_fragment:"",n.toneMapping!==ei?function(e,t){let n;switch(t){case er:n="Linear";break;case ea:n="Reinhard";break;case es:n="OptimizedCineon";break;case eo:n="ACESFilmic";break;case el:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",r6.encodings_pars_fragment,n.map?sh("mapTexelToLinear",n.mapEncoding):"",n.matcap?sh("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?sh("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?sh("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?sh("lightMapTexelToLinear",n.lightMapEncoding):"",function(e,t){let n=sl(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(sc).join("\n")),c=sp(c=sd(c=sm(c),n),n),d=sp(d=sd(d=sm(d),n),n),c=sx(c),d=sx(d),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(S="#version 300 es\n",r="#define attribute in\n#define varying out\n#define texture2D texture\n"+r,a=["#define varying in",n.glslVersion===nx?"":"out highp vec4 pc_fragColor;",n.glslVersion===nx?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);let T=S+r+c,E=S+a+d,A=ss(u,35633,T),L=ss(u,35632,E);if(u.attachShader(w,A),u.attachShader(w,L),void 0!==n.index0AttributeName?u.bindAttribLocation(w,0,n.index0AttributeName):!0===n.morphTargets&&u.bindAttribLocation(w,0,"position"),u.linkProgram(w),e.debug.checkShaderErrors){let R=u.getProgramInfoLog(w).trim(),C=u.getShaderInfoLog(A).trim(),P=u.getShaderInfoLog(L).trim(),D=!0,I=!0;if(!1===u.getProgramParameter(w,35714)){D=!1;let N=su(u,A,"vertex"),B=su(u,L,"fragment");console.error("THREE.WebGLProgram: shader error: ",u.getError(),"35715",u.getProgramParameter(w,35715),"gl.getProgramInfoLog",R,N,B)}else""!==R?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",R):(""===C||""===P)&&(I=!1);I&&(this.diagnostics={runnable:D,programLog:R,vertexShader:{log:C,prefix:r},fragmentShader:{log:P,prefix:a}})}return u.deleteShader(A),u.deleteShader(L),this.getUniforms=function(){return void 0===s&&(s=new sa(u,w)),s},this.getAttributes=function(){return void 0===o&&(o=function(e,t){let n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){let a=e.getActiveAttrib(t,r),s=a.name;n[s]=e.getAttribLocation(t,s)}return n}(u,w)),o},this.destroy=function(){i.releaseStatesOfProgram(this),u.deleteProgram(w),this.program=void 0},this.name=n.shaderName,this.id=so++,this.cacheKey=t,this.usedTimes=1,this.program=w,this.vertexShader=A,this.fragmentShader=L,this}function sS(e,t,n,i,r,a){let s=[],o=i.isWebGL2,l=i.logarithmicDepthBuffer,u=i.floatVertexTextures,h=i.maxVertexUniforms,c=i.vertexTextures,d=i.precision,p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmission","transmissionMap","thicknessMap"];function m(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=tj,t}return{getParameters:function(r,s,f,g,v){let y,x;let M=g.fog,w=r.isMeshStandardMaterial?g.environment:null,S=t.get(r.envMap||w),T=p[r.type],E=v.isSkinnedMesh?function(e){let t=e.skeleton,n=t.bones;if(u)return 1024;{let i=Math.min(Math.floor((h-20)/4),n.length);return i<n.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+n.length+" bones. This GPU supports "+i+"."),0):i}}(v):0;if(null!==r.precision&&(d=i.getMaxPrecision(r.precision))!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead."),T){let A=r8[T];y=A.vertexShader,x=A.fragmentShader}else y=r.vertexShader,x=r.fragmentShader;let L=e.getRenderTarget(),R={isWebGL2:o,shaderID:T,shaderName:r.type,vertexShader:y,fragmentShader:x,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:c,outputEncoding:null!==L?m(L.texture):e.outputEncoding,map:!!r.map,mapEncoding:m(r.map),matcap:!!r.matcap,matcapEncoding:m(r.matcap),envMap:!!S,envMapMode:S&&S.mapping,envMapEncoding:m(S),envMapCubeUV:!!S&&(S.mapping===ef||S.mapping===em),lightMap:!!r.lightMap,lightMapEncoding:m(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:m(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:r.normalMapType===t3,tangentSpaceNormalMap:r.normalMapType===t1,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmission:!!r.transmission,transmissionMap:!!r.transmissionMap,thicknessMap:!!r.thicknessMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&v.geometry&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!r.map||!!r.bumpMap||!!r.normalMap||!!r.specularMap||!!r.alphaMap||!!r.emissiveMap||!!r.roughnessMap||!!r.metalnessMap||!!r.clearcoatMap||!!r.clearcoatRoughnessMap||!!r.clearcoatNormalMap||!!r.displacementMap||!!r.transmissionMap||!!r.thicknessMap,uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmission||r.transmissionMap||r.thicknessMap)&&!!r.displacementMap,fog:!!M,useFog:r.fog,fogExp2:M&&M.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:l,skinning:!0===v.isSkinnedMesh&&E>0,maxBones:E,useVertexTexture:u,morphTargets:r.morphTargets,morphNormals:r.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:e.shadowMap.enabled&&f.length>0,shadowMapType:e.shadowMap.type,toneMapping:r.toneMapped?e.toneMapping:ei,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===b,flipSided:r.side===_,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()};return R},getProgramCacheKey:function(t){let n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(let i in t.defines)n.push(i),n.push(t.defines[i]);if(!1===t.isRawShaderMaterial){for(let r=0;r<f.length;r++)n.push(t[f[r]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){let t;let n=p[e.type];if(n){let i=r8[n];t=rV.clone(i.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,n){let i;for(let a=0,o=s.length;a<o;a++){let l=s[a];if(l.cacheKey===n){i=l,++i.usedTimes;break}}return void 0===i&&(i=new sw(e,n,t,r),s.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){let t=s.indexOf(e);s[t]=s[s.length-1],s.pop(),e.destroy()}},programs:s}}function sT(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function sE(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function sA(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function sL(e){let t=[],n=0,i=[],r=[],a=[],s={id:-1};function o(i,r,a,o,l,u){let h=t[n],c=e.get(a);return void 0===h?(h={id:i.id,object:i,geometry:r,material:a,program:c.program||s,groupOrder:o,renderOrder:i.renderOrder,z:l,group:u},t[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=a,h.program=c.program||s,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=l,h.group=u),n++,h}return{opaque:i,transmissive:r,transparent:a,init:function(){n=0,i.length=0,r.length=0,a.length=0},push:function(e,t,n,s,l,u){let h=o(e,t,n,s,l,u);n.transmission>0?r.push(h):!0===n.transparent?a.push(h):i.push(h)},unshift:function(e,t,n,s,l,u){let h=o(e,t,n,s,l,u);n.transmission>0?r.unshift(h):!0===n.transparent?a.unshift(h):i.unshift(h)},finish:function(){for(let e=n,i=t.length;e<i;e++){let r=t[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.program=null,r.group=null}},sort:function(e,t){i.length>1&&i.sort(e||sE),r.length>1&&r.sort(t||sA),a.length>1&&a.sort(t||sA)}}}function sR(e){let t=new WeakMap;return{get:function(n,i){let r;return!1===t.has(n)?(r=new sL(e),t.set(n,[r])):i>=t.get(n).length?(r=new sL(e),t.get(n).push(r)):r=t.get(n)[i],r},dispose:function(){t=new WeakMap}}}function sC(){let e={};return{get:function(t){let n;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":n={direction:new nj,color:new i5};break;case"SpotLight":n={position:new nj,direction:new nj,color:new i5,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new nj,color:new i5,distance:0,decay:0};break;case"HemisphereLight":n={direction:new nj,skyColor:new i5,groundColor:new i5};break;case"RectAreaLight":n={color:new i5,position:new nj,halfWidth:new nj,halfHeight:new nj}}return e[t.id]=n,n}}}let sP=0;function sD(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function sI(e,t){let n=new sC,i=function(){let e={};return{get:function(t){let n;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new nN};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new nN,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)r.probe.push(new nj);let s=new nj,o=new ip,l=new ip;return{setup:function(a){let s=0,o=0,l=0;for(let u=0;u<9;u++)r.probe[u].set(0,0,0);let h=0,c=0,d=0,p=0,f=0,m=0,g=0,v=0;a.sort(sD);for(let y=0,x=a.length;y<x;y++){let _=a[y],b=_.color,M=_.intensity,w=_.distance,S=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)s+=b.r*M,o+=b.g*M,l+=b.b*M;else if(_.isLightProbe)for(let T=0;T<9;T++)r.probe[T].addScaledVector(_.sh.coefficients[T],M);else if(_.isDirectionalLight){let E=n.get(_);if(E.color.copy(_.color).multiplyScalar(_.intensity),_.castShadow){let A=_.shadow,L=i.get(_);L.shadowBias=A.bias,L.shadowNormalBias=A.normalBias,L.shadowRadius=A.radius,L.shadowMapSize=A.mapSize,r.directionalShadow[h]=L,r.directionalShadowMap[h]=S,r.directionalShadowMatrix[h]=_.shadow.matrix,m++}r.directional[h]=E,h++}else if(_.isSpotLight){let R=n.get(_);if(R.position.setFromMatrixPosition(_.matrixWorld),R.color.copy(b).multiplyScalar(M),R.distance=w,R.coneCos=Math.cos(_.angle),R.penumbraCos=Math.cos(_.angle*(1-_.penumbra)),R.decay=_.decay,_.castShadow){let C=_.shadow,P=i.get(_);P.shadowBias=C.bias,P.shadowNormalBias=C.normalBias,P.shadowRadius=C.radius,P.shadowMapSize=C.mapSize,r.spotShadow[d]=P,r.spotShadowMap[d]=S,r.spotShadowMatrix[d]=_.shadow.matrix,v++}r.spot[d]=R,d++}else if(_.isRectAreaLight){let D=n.get(_);D.color.copy(b).multiplyScalar(M),D.halfWidth.set(.5*_.width,0,0),D.halfHeight.set(0,.5*_.height,0),r.rectArea[p]=D,p++}else if(_.isPointLight){let I=n.get(_);if(I.color.copy(_.color).multiplyScalar(_.intensity),I.distance=_.distance,I.decay=_.decay,_.castShadow){let N=_.shadow,B=i.get(_);B.shadowBias=N.bias,B.shadowNormalBias=N.normalBias,B.shadowRadius=N.radius,B.shadowMapSize=N.mapSize,B.shadowCameraNear=N.camera.near,B.shadowCameraFar=N.camera.far,r.pointShadow[c]=B,r.pointShadowMap[c]=S,r.pointShadowMatrix[c]=_.shadow.matrix,g++}r.point[c]=I,c++}else if(_.isHemisphereLight){let z=n.get(_);z.skyColor.copy(_.color).multiplyScalar(M),z.groundColor.copy(_.groundColor).multiplyScalar(M),r.hemi[f]=z,f++}}p>0&&(t.isWebGL2?(r.rectAreaLTC1=r7.LTC_FLOAT_1,r.rectAreaLTC2=r7.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=r7.LTC_FLOAT_1,r.rectAreaLTC2=r7.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=r7.LTC_HALF_1,r.rectAreaLTC2=r7.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=s,r.ambient[1]=o,r.ambient[2]=l;let F=r.hash;(F.directionalLength!==h||F.pointLength!==c||F.spotLength!==d||F.rectAreaLength!==p||F.hemiLength!==f||F.numDirectionalShadows!==m||F.numPointShadows!==g||F.numSpotShadows!==v)&&(r.directional.length=h,r.spot.length=d,r.rectArea.length=p,r.point.length=c,r.hemi.length=f,r.directionalShadow.length=m,r.directionalShadowMap.length=m,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=v,r.spotShadowMap.length=v,r.directionalShadowMatrix.length=m,r.pointShadowMatrix.length=g,r.spotShadowMatrix.length=v,F.directionalLength=h,F.pointLength=c,F.spotLength=d,F.rectAreaLength=p,F.hemiLength=f,F.numDirectionalShadows=m,F.numPointShadows=g,F.numSpotShadows=v,r.version=sP++)},setupView:function(e,t){let n=0,i=0,a=0,u=0,h=0,c=t.matrixWorldInverse;for(let d=0,p=e.length;d<p;d++){let f=e[d];if(f.isDirectionalLight){let m=r.directional[n];m.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),m.direction.sub(s),m.direction.transformDirection(c),n++}else if(f.isSpotLight){let g=r.spot[a];g.position.setFromMatrixPosition(f.matrixWorld),g.position.applyMatrix4(c),g.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),g.direction.sub(s),g.direction.transformDirection(c),a++}else if(f.isRectAreaLight){let v=r.rectArea[u];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(c),l.identity(),o.copy(f.matrixWorld),o.premultiply(c),l.extractRotation(o),v.halfWidth.set(.5*f.width,0,0),v.halfHeight.set(0,.5*f.height,0),v.halfWidth.applyMatrix4(l),v.halfHeight.applyMatrix4(l),u++}else if(f.isPointLight){let y=r.point[i];y.position.setFromMatrixPosition(f.matrixWorld),y.position.applyMatrix4(c),i++}else if(f.isHemisphereLight){let x=r.hemi[h];x.direction.setFromMatrixPosition(f.matrixWorld),x.direction.transformDirection(c),x.direction.normalize(),h++}}},state:r}}function sN(e,t){let n=new sI(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function sB(e,t){let n=new WeakMap;return{get:function(i,r=0){let a;return!1===n.has(i)?(a=new sN(e,t),n.set(i,[a])):r>=n.get(i).length?(a=new sN(e,t),n.get(i).push(a)):a=n.get(i)[r],a},dispose:function(){n=new WeakMap}}}class sz extends iK{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=t$,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}sz.prototype.isMeshDepthMaterial=!0;class sF extends iK{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new nj,this.nearDistance=1,this.farDistance=1e3,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function sO(e,t,n){let i=new r3,r=new nN,a=new nN,s=new nU,o=[],l=[],u={},h=n.maxTextureSize,c={0:_,1:x,2:b},d=new rW({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:.125},uniforms:{shadow_pass:{value:null},resolution:{value:new nN},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean * HALF_SAMPLE_RATE;\n	squared_mean = squared_mean * HALF_SAMPLE_RATE;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;let f=new r_;f.setAttribute("position",new i9(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let m=new rO(f,d),v=this;function M(e){let t=e<<0,n=o[t];return void 0===n&&(n=new sz({depthPacking:t0,morphTargets:e}),o[t]=n),n}function w(e){let t=e<<0,n=l[t];return void 0===n&&(n=new sF({morphTargets:e}),l[t]=n),n}function T(t,n,i,r,a,s,o){let l=null,h=M,d=t.customDepthMaterial;if(!0===r.isPointLight&&(h=w,d=t.customDistanceMaterial),void 0===d){let p=!1;!0===i.morphTargets&&(p=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0),l=h(p)}else l=d;if(e.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){let f=l.uuid,m=i.uuid,g=u[f];void 0===g&&(g={},u[f]=g);let v=g[m];void 0===v&&(v=l.clone(),g[m]=v),l=v}return l.visible=i.visible,l.wireframe=i.wireframe,o===y?l.side=null!==i.shadowSide?i.shadowSide:i.side:l.side=null!==i.shadowSide?i.shadowSide:c[i.side],l.clipShadows=i.clipShadows,l.clippingPlanes=i.clippingPlanes,l.clipIntersection=i.clipIntersection,l.wireframeLinewidth=i.wireframeLinewidth,l.linewidth=i.linewidth,!0===r.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(r.matrixWorld),l.nearDistance=a,l.farDistance=s),l}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=g,this.render=function(n,o,l){if(!1===v.enabled||!1===v.autoUpdate&&!1===v.needsUpdate||0===n.length)return;let u=e.getRenderTarget(),c=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),g=e.state;g.setBlending(S),g.buffers.color.setClear(1,1,1,1),g.buffers.depth.setTest(!0),g.setScissorTest(!1);for(let x=0,_=n.length;x<_;x++){let b=n[x],M=b.shadow;if(void 0===M){console.warn("THREE.WebGLShadowMap:",b,"has no shadow.");continue}if(!1===M.autoUpdate&&!1===M.needsUpdate)continue;r.copy(M.mapSize);let w=M.getFrameExtents();if(r.multiply(w),a.copy(M.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/w.x),r.x=a.x*w.x,M.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/w.y),r.y=a.y*w.y,M.mapSize.y=a.y)),null===M.map&&!M.isPointLightShadow&&this.type===y){let E={minFilter:eS,magFilter:eS,format:eV};M.map=new nG(r.x,r.y,E),M.map.texture.name=b.name+".shadowMap",M.mapPass=new nG(r.x,r.y,E),M.camera.updateProjectionMatrix()}if(null===M.map){let A={minFilter:ex,magFilter:ex,format:eV};M.map=new nG(r.x,r.y,A),M.map.texture.name=b.name+".shadowMap",M.camera.updateProjectionMatrix()}e.setRenderTarget(M.map),e.clear();let L=M.getViewportCount();for(let R=0;R<L;R++){let C=M.getViewport(R);s.set(a.x*C.x,a.y*C.y,a.x*C.z,a.y*C.w),g.viewport(s),M.updateMatrices(b,R),i=M.getFrustum(),function n(r,a,s,o,l){if(!1===r.visible)return;let u=r.layers.test(a.layers);if(u&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&l===y)&&(!r.frustumCulled||i.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,r.matrixWorld);let h=t.update(r),c=r.material;if(Array.isArray(c)){let d=h.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p],g=c[m.materialIndex];if(g&&g.visible){let v=T(r,h,g,o,s.near,s.far,l);e.renderBufferDirect(s,null,h,v,r,m)}}}else if(c.visible){let x=T(r,h,c,o,s.near,s.far,l);e.renderBufferDirect(s,null,h,x,r,null)}}let _=r.children;for(let b=0,M=_.length;b<M;b++)n(_[b],a,s,o,l)}(o,l,M.camera,b,this.type)}M.isPointLightShadow||this.type!==y||function(n,i){let r=t.update(m);d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,r,d,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,r,p,m,null)}(M,l),M.needsUpdate=!1}v.needsUpdate=!1,e.setRenderTarget(u,c,f)}}function sH(e,t,n){let i=n.isWebGL2,r=new function(){let t=!1,n=new nU,i=null,r=new nU(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,s,o){!0===o&&(t*=s,i*=s,a*=s),n.set(t,i,a,s),!1===r.equals(n)&&(e.clearColor(t,i,a,s),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(e){e?ev(2929):ey(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case q:e.depthFunc(512);break;case X:e.depthFunc(519);break;case Y:e.depthFunc(513);break;case J:e.depthFunc(515);break;case Z:e.depthFunc(514);break;case Q:e.depthFunc(518);break;case K:e.depthFunc(516);break;case $:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},s=new function(){let t=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,u=null;return{setTest:function(e){t||(e?ev(2960):ey(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){(i!==t||r!==n||a!==s)&&(e.stencilFunc(t,n,s),i=t,r=n,a=s)},setOp:function(t,n,i){(s!==t||o!==n||l!==i)&&(e.stencilOp(t,n,i),s=t,o=n,l=i)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,u=null}}},o={},l=null,u={},h=null,f=!1,m=null,g=null,v=null,y=null,x=null,M=null,w=null,ee=!1,et=null,en=null,ei=null,er=null,ea=null,es=e.getParameter(35661),eo=!1,el=e.getParameter(7938);-1!==el.indexOf("WebGL")?eo=parseFloat(/^WebGL (\d)/.exec(el)[1])>=1:-1!==el.indexOf("OpenGL ES")&&(eo=parseFloat(/^OpenGL ES (\d)/.exec(el)[1])>=2);let eu=null,eh={},ec=e.getParameter(3088),ed=e.getParameter(2978),ep=new nU().fromArray(ec),ef=new nU().fromArray(ed);function em(t,n,i){let r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let s=0;s<i;s++)e.texImage2D(n+s,0,6408,1,1,0,6408,5121,r);return a}let eg={};function ev(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function ey(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}eg[3553]=em(3553,3553,1),eg[34067]=em(34067,34069,6),r.setClear(0,0,0,1),a.setClear(1),s.setClear(0),ev(2929),a.setFunc(J),ew(!1),eS(d),ev(2884),eM(S);let ex={[C]:32774,[P]:32778,[D]:32779};if(i)ex[I]=32775,ex[N]=32776;else{let e_=t.get("EXT_blend_minmax");null!==e_&&(ex[I]=e_.MIN_EXT,ex[N]=e_.MAX_EXT)}let eb={[B]:0,[z]:1,[F]:768,[H]:770,[j]:776,[V]:774,[G]:772,[O]:769,[U]:771,[W]:775,[k]:773};function eM(t,n,i,r,a,s,o,l){if(t===S){!0===f&&(ey(3042),f=!1);return}if(!1===f&&(ev(3042),f=!0),t!==R){if(t!==m||l!==ee){if((g!==C||x!==C)&&(e.blendEquation(32774),g=C,x=C),l)switch(t){case T:e.blendFuncSeparate(1,771,1,771);break;case E:e.blendFunc(1,1);break;case A:e.blendFuncSeparate(0,0,769,771);break;case L:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case T:e.blendFuncSeparate(770,771,1,771);break;case E:e.blendFunc(770,1);break;case A:e.blendFunc(0,769);break;case L:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}v=null,y=null,M=null,w=null,m=t,ee=l}return}a=a||n,s=s||i,o=o||r,(n!==g||a!==x)&&(e.blendEquationSeparate(ex[n],ex[a]),g=n,x=a),(i!==v||r!==y||s!==M||o!==w)&&(e.blendFuncSeparate(eb[i],eb[r],eb[s],eb[o]),v=i,y=r,M=s,w=o),m=t,ee=null}function ew(t){et!==t&&(t?e.frontFace(2304):e.frontFace(2305),et=t)}function eS(t){t!==c?(ev(2884),t!==en&&(t===d?e.cullFace(1029):t===p?e.cullFace(1028):e.cullFace(1032))):ey(2884),en=t}function eT(t,n,i){t?(ev(32823),(er!==n||ea!==i)&&(e.polygonOffset(n,i),er=n,ea=i)):ey(32823)}function eE(t){void 0===t&&(t=33984+es-1),eu!==t&&(e.activeTexture(t),eu=t)}return{buffers:{color:r,depth:a,stencil:s},enable:ev,disable:ey,bindFramebuffer:function(t,n){return null===n&&null!==l&&(n=l),u[t]!==n&&(e.bindFramebuffer(t,n),u[t]=n,i&&(36009===t&&(u[36160]=n),36160===t&&(u[36009]=n)),!0)},bindXRFramebuffer:function(t){t!==l&&(e.bindFramebuffer(36160,t),l=t)},useProgram:function(t){return h!==t&&(e.useProgram(t),h=t,!0)},setBlending:eM,setMaterial:function(e,t){e.side===b?ey(2884):ev(2884);let n=e.side===_;t&&(n=!n),ew(n),e.blending===T&&!1===e.transparent?eM(S):eM(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);let i=e.stencilWrite;s.setTest(i),i&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),eT(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?ev(32926):ey(32926)},setFlipSided:ew,setCullFace:eS,setLineWidth:function(t){t!==ei&&(eo&&e.lineWidth(t),ei=t)},setPolygonOffset:eT,setScissorTest:function(e){e?ev(3089):ey(3089)},activeTexture:eE,bindTexture:function(t,n){null===eu&&eE();let i=eh[eu];void 0===i&&(i={type:void 0,texture:void 0},eh[eu]=i),(i.type!==t||i.texture!==n)&&(e.bindTexture(t,n||eg[t]),i.type=t,i.texture=n)},unbindTexture:function(){let t=eh[eu];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===ep.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ep.copy(t))},viewport:function(t){!1===ef.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ef.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===i&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},eu=null,eh={},l=null,u={},h=null,f=!1,m=null,g=null,v=null,y=null,x=null,M=null,w=null,ee=!1,et=null,en=null,ei=null,er=null,ea=null,ep.set(0,0,e.canvas.width,e.canvas.height),ef.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),s.reset()}}}function sU(e,t,n,i,r,a,s){let o;let l=r.isWebGL2,u=r.maxTextures,h=r.maxCubemapSize,c=r.maxTextureSize,d=r.maxSamples,p=new WeakMap,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(m){}function g(e,t){return f?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(e,t,n,i){let r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let a=t?nD:Math.floor,s=a(r*e.width),l=a(r*e.height);void 0===o&&(o=g(s,l));let u=n?g(s,l):o;u.width=s,u.height=l;let h=u.getContext("2d");return h.drawImage(e,0,0,s,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+l+")."),u}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function y(e){return nC(e.width)&&nC(e.height)}function x(e,t){return e.generateMipmaps&&t&&e.minFilter!==ex&&e.minFilter!==eS}function _(t,n,r,a,s=1){e.generateMipmap(t);let o=i.get(n);o.__maxMipLevel=Math.log2(Math.max(r,a,s))}function b(n,i,r){if(!1===l)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let a=i;return 6403===i&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),6407===i&&(5126===r&&(a=34837),5131===r&&(a=34843),5121===r&&(a=32849)),6408===i&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=32856)),(33325===a||33326===a||34842===a||34836===a)&&t.get("EXT_color_buffer_float"),a}function M(e){return e===ex||e===e_||e===eM?9728:9729}function w(t){let n=t.target;n.removeEventListener("dispose",w),function(t){let n=i.get(t);void 0!==n.__webglInit&&(e.deleteTexture(n.__webglTexture),i.remove(t))}(n),n.isVideoTexture&&p.delete(n),s.memory.textures--}function S(t){let n=t.target;n.removeEventListener("dispose",S),function(t){let n=t.texture,r=i.get(t),a=i.get(n);if(t){if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),s.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let o=0;o<6;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let l=0,u=n.length;l<u;l++){let h=i.get(n[l]);h.__webglTexture&&(e.deleteTexture(h.__webglTexture),s.memory.textures--),i.remove(n[l])}i.remove(n),i.remove(t)}}(n)}let T=0;function E(e,t){let r=i.get(e);if(e.isVideoTexture&&function(e){let t=s.render.frame;p.get(e)!==t&&(p.set(e,t),e.update())}(e),e.version>0&&r.__version!==e.version){let a=e.image;if(void 0===a)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===a.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{D(r,e,t);return}}n.activeTexture(33984+t),n.bindTexture(3553,r.__webglTexture)}function A(t,r){let s=i.get(t);if(t.version>0&&s.__version!==t.version){!function(t,i,r){let s;if(6!==i.image.length)return;P(t,i),n.activeTexture(33984+r),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);let o=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),u=i.image[0]&&i.image[0].isDataTexture,c=[];for(let d=0;d<6;d++)o||u?c[d]=u?i.image[d].image:i.image[d]:c[d]=v(i.image[d],!1,!0,h);let p=c[0],f=y(p)||l,m=a.convert(i.format),g=a.convert(i.type),M=b(i.internalFormat,m,g);if(C(34067,i,f),o){for(let w=0;w<6;w++){s=c[w].mipmaps;for(let S=0;S<s.length;S++){let T=s[S];i.format!==eV&&i.format!==ek?null!==m?n.compressedTexImage2D(34069+w,S,M,T.width,T.height,0,T.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+w,S,M,T.width,T.height,0,m,g,T.data)}}t.__maxMipLevel=s.length-1}else{s=i.mipmaps;for(let E=0;E<6;E++)if(u){n.texImage2D(34069+E,0,M,c[E].width,c[E].height,0,m,g,c[E].data);for(let A=0;A<s.length;A++){let L=s[A],R=L.image[E].image;n.texImage2D(34069+E,A+1,M,R.width,R.height,0,m,g,R.data)}}else{n.texImage2D(34069+E,0,M,m,g,c[E]);for(let D=0;D<s.length;D++){let I=s[D];n.texImage2D(34069+E,D+1,M,m,g,I.image[E])}}t.__maxMipLevel=s.length}x(i,f)&&_(34067,i,p.width,p.height),t.__version=i.version,i.onUpdate&&i.onUpdate(i)}(s,t,r);return}n.activeTexture(33984+r),n.bindTexture(34067,s.__webglTexture)}let L={[eg]:10497,[ev]:33071,[ey]:33648},R={[ex]:9728,[e_]:9984,[eM]:9986,[eS]:9729,[eT]:9985,[eA]:9987};function C(n,a,s){if(s?(e.texParameteri(n,10242,L[a.wrapS]),e.texParameteri(n,10243,L[a.wrapT]),(32879===n||35866===n)&&e.texParameteri(n,32882,L[a.wrapR]),e.texParameteri(n,10240,R[a.magFilter]),e.texParameteri(n,10241,R[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),(32879===n||35866===n)&&e.texParameteri(n,32882,33071),(a.wrapS!==ev||a.wrapT!==ev)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,M(a.magFilter)),e.texParameteri(n,10241,M(a.minFilter)),a.minFilter!==ex&&a.minFilter!==eS&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){let o=t.get("EXT_texture_filter_anisotropic");(a.type!==eB||!1!==t.has("OES_texture_float_linear"))&&(!1!==l||a.type!==ez||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function P(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",w),t.__webglTexture=e.createTexture(),s.memory.textures++)}function D(t,i,r){let s,o=3553;i.isDataTexture2DArray&&(o=35866),i.isDataTexture3D&&(o=32879),P(t,i),n.activeTexture(33984+r),n.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);let u=!l&&(i.wrapS!==ev||i.wrapT!==ev||i.minFilter!==ex&&i.minFilter!==eS)&&!1===y(i.image),h=v(i.image,u,!1,c),d=y(h)||l,p=a.convert(i.format),f=a.convert(i.type),m=b(i.internalFormat,p,f);C(o,i,d);let g=i.mipmaps;if(i.isDepthTexture)m=6402,l?m=i.type===eB?36012:i.type===eN?33190:i.type===eU?35056:33189:i.type===eB&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===eX&&6402===m&&i.type!==eD&&i.type!==eN&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=eD,f=a.convert(i.type)),i.format===eY&&6402===m&&(m=34041,i.type!==eU&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=eU,f=a.convert(i.type))),n.texImage2D(3553,0,m,h.width,h.height,0,p,f,null);else if(i.isDataTexture){if(g.length>0&&d){for(let M=0,w=g.length;M<w;M++)s=g[M],n.texImage2D(3553,M,m,s.width,s.height,0,p,f,s.data);i.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else n.texImage2D(3553,0,m,h.width,h.height,0,p,f,h.data),t.__maxMipLevel=0}else if(i.isCompressedTexture){for(let S=0,T=g.length;S<T;S++)s=g[S],i.format!==eV&&i.format!==ek?null!==p?n.compressedTexImage2D(3553,S,m,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,S,m,s.width,s.height,0,p,f,s.data);t.__maxMipLevel=g.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,m,h.width,h.height,h.depth,0,p,f,h.data),t.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,m,h.width,h.height,h.depth,0,p,f,h.data),t.__maxMipLevel=0;else if(g.length>0&&d){for(let E=0,A=g.length;E<A;E++)s=g[E],n.texImage2D(3553,E,m,p,f,s);i.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else n.texImage2D(3553,0,m,p,f,h),t.__maxMipLevel=0;x(i,d)&&_(o,i,h.width,h.height),t.__version=i.version,i.onUpdate&&i.onUpdate(i)}function I(t,r,s,o,l){let u=a.convert(s.format),h=a.convert(s.type),c=b(s.internalFormat,u,h);32879===l||35866===l?n.texImage3D(l,0,c,r.width,r.height,r.depth,0,u,h,null):n.texImage2D(l,0,c,r.width,r.height,0,u,h,null),n.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,l,i.get(s).__webglTexture,0),n.bindFramebuffer(36160,null)}function N(t,n,i){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){let s=n.depthTexture;s&&s.isDepthTexture&&(s.type===eB?r=36012:s.type===eN&&(r=33190));let o=B(n);e.renderbufferStorageMultisample(36161,o,r,n.width,n.height)}else e.renderbufferStorage(36161,r,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(i){let l=B(n);e.renderbufferStorageMultisample(36161,l,35056,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{let u=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,h=a.convert(u.format),c=a.convert(u.type),d=b(u.internalFormat,h,c);if(i){let p=B(n);e.renderbufferStorageMultisample(36161,p,d,n.width,n.height)}else e.renderbufferStorage(36161,d,n.width,n.height)}e.bindRenderbuffer(36161,null)}function B(e){return l&&e.isWebGLMultisampleRenderTarget?Math.min(d,e.samples):0}let z=!1,F=!1;this.allocateTextureUnit=function(){let e=T;return e>=u&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+u),T+=1,e},this.resetTextureUnits=function(){T=0},this.setTexture2D=E,this.setTexture2DArray=function(e,t){let r=i.get(e);if(e.version>0&&r.__version!==e.version){D(r,e,t);return}n.activeTexture(33984+t),n.bindTexture(35866,r.__webglTexture)},this.setTexture3D=function(e,t){let r=i.get(e);if(e.version>0&&r.__version!==e.version){D(r,e,t);return}n.activeTexture(33984+t),n.bindTexture(32879,r.__webglTexture)},this.setTextureCube=A,this.setupRenderTarget=function(t){let o=t.texture,u=i.get(t),h=i.get(o);t.addEventListener("dispose",S),!0!==t.isWebGLMultipleRenderTargets&&(h.__webglTexture=e.createTexture(),h.__version=o.version,s.memory.textures++);let c=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=!0===t.isWebGLMultisampleRenderTarget,f=o.isDataTexture3D||o.isDataTexture2DArray,m=y(t)||l;if(l&&o.format===ek&&(o.type===eB||o.type===ez)&&(o.format=eV,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){u.__webglFramebuffer=[];for(let g=0;g<6;g++)u.__webglFramebuffer[g]=e.createFramebuffer()}else if(u.__webglFramebuffer=e.createFramebuffer(),d){if(r.drawBuffers){let v=t.texture;for(let M=0,w=v.length;M<w;M++){let T=i.get(v[M]);void 0===T.__webglTexture&&(T.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}else if(p){if(l){u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,u.__webglColorRenderbuffer);let A=a.convert(o.format),L=a.convert(o.type),R=b(o.internalFormat,A,L),P=B(t);e.renderbufferStorageMultisample(36161,P,R,t.width,t.height),n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,u.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),N(u.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}if(c){n.bindTexture(34067,h.__webglTexture),C(34067,o,m);for(let D=0;D<6;D++)I(u.__webglFramebuffer[D],t,o,36064,34069+D);x(o,m)&&_(34067,o,t.width,t.height),n.bindTexture(34067,null)}else if(d){let z=t.texture;for(let F=0,O=z.length;F<O;F++){let H=z[F],U=i.get(H);n.bindTexture(3553,U.__webglTexture),C(3553,H,m),I(u.__webglFramebuffer,t,H,36064+F,3553),x(H,m)&&_(3553,H,t.width,t.height)}n.bindTexture(3553,null)}else{let G=3553;if(f){if(l){let k=o.isDataTexture3D;G=k?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")}n.bindTexture(G,h.__webglTexture),C(G,o,m),I(u.__webglFramebuffer,t,o,36064,G),x(o,m)&&_(G,o,t.width,t.height,t.depth),n.bindTexture(G,null)}t.depthBuffer&&function(t){let r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,r){let a=r&&r.isWebGLCubeRenderTarget;if(a)throw Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),E(r.depthTexture,0);let s=i.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===eX)e.framebufferTexture2D(36160,36096,3553,s,0);else if(r.depthTexture.format===eY)e.framebufferTexture2D(36160,33306,3553,s,0);else throw Error("Unknown depthTexture format")}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let s=0;s<6;s++)n.bindFramebuffer(36160,r.__webglFramebuffer[s]),r.__webglDepthbuffer[s]=e.createRenderbuffer(),N(r.__webglDepthbuffer[s],t,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),N(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}(t)},this.updateRenderTargetMipmap=function(e){let t=y(e)||l,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,s=r.length;a<s;a++){let o=r[a];if(x(o,t)){let u=e.isWebGLCubeRenderTarget?34067:3553,h=i.get(o).__webglTexture;n.bindTexture(u,h),_(u,o,e.width,e.height),n.bindTexture(u,null)}}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget){if(l){let r=t.width,a=t.height,s=16384;t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024);let o=i.get(t);n.bindFramebuffer(36008,o.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,o.__webglFramebuffer),e.blitFramebuffer(0,0,r,a,0,0,r,a,s,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,o.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),z=!0),e=e.texture),E(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),e=e.texture),A(e,t)}}function sG(e,t,n){let i=n.isWebGL2;return{convert:function(e){let n;if(e===eR)return 5121;if(e===eF)return 32819;if(e===eO)return 32820;if(e===eH)return 33635;if(e===eC)return 5120;if(e===eP)return 5122;if(e===eD)return 5123;if(e===eI)return 5124;if(e===eN)return 5125;if(e===eB)return 5126;if(e===ez)return i?5131:null!==(n=t.get("OES_texture_half_float"))?n.HALF_FLOAT_OES:null;if(e===eG)return 6406;if(e===ek)return 6407;if(e===eV)return 6408;if(e===eW)return 6409;if(e===ej)return 6410;if(e===eX)return 6402;if(e===eY)return 34041;if(e===eJ)return 6403;if(e===eZ)return 36244;if(e===eQ)return 33319;if(e===eK)return 33320;if(e===e$)return 36248;if(e===e0)return 36249;if(e===e1||e===e3||e===e2||e===e4){if(null===(n=t.get("WEBGL_compressed_texture_s3tc")))return null;if(e===e1)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===e3)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===e2)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===e4)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===e5||e===e6||e===e7||e===e8){if(null===(n=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===e5)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===e6)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===e7)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===e8)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===e9)return null!==(n=t.get("WEBGL_compressed_texture_etc1"))?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===te||e===tt)&&null!==(n=t.get("WEBGL_compressed_texture_etc"))){if(e===te)return n.COMPRESSED_RGB8_ETC2;if(e===tt)return n.COMPRESSED_RGBA8_ETC2_EAC}return e===tn||e===ti||e===tr||e===ta||e===ts||e===to||e===tl||e===tu||e===th||e===tc||e===td||e===tp||e===tf||e===tm||e===tv||e===ty||e===tx||e===t_||e===tb||e===tM||e===tw||e===tS||e===tT||e===tE||e===tA||e===tL||e===tR||e===tC?null!==(n=t.get("WEBGL_compressed_texture_astc"))?e:null:e===tg?null!==(n=t.get("EXT_texture_compression_bptc"))?e:null:e===eU?i?34042:null!==(n=t.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}sF.prototype.isMeshDistanceMaterial=!0;class sk extends rq{constructor(e=[]){super(),this.cameras=e}}sk.prototype.isArrayCamera=!0;class sV extends iH{constructor(){super(),this.type="Group"}}sV.prototype.isGroup=!0;let sW={type:"move"};class sj{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new sV,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new sV,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new nj,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new nj),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new sV,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new nj,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new nj),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(null!==s&&null!==(i=t.getPose(e.targetRaySpace,n))&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(sW)),l&&e.hand){for(let u of(a=!0,e.hand.values())){let h=t.getJointPose(u,n);if(void 0===l.joints[u.jointName]){let c=new sV;c.matrixAutoUpdate=!1,c.visible=!1,l.joints[u.jointName]=c,l.add(c)}let d=l.joints[u.jointName];null!==h&&(d.matrix.fromArray(h.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=h.radius),d.visible=null!==h}let p=l.joints["index-finger-tip"],f=l.joints["thumb-tip"],m=p.position.distanceTo(f.position);l.inputState.pinching&&m>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&m<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,n))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1)}return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}}class sq extends n_{constructor(e,t){super();let n=this,i=e.state,r=null,a=1,s=null,o="local-floor",l=null,u=null,h=null,c=null,d=[],p=new Map,f=new rq;f.layers.enable(1),f.viewport=new nU;let m=new rq;m.layers.enable(2),m.viewport=new nU;let g=[f,m],v=new sk;v.layers.enable(1),v.layers.enable(2);let y=null,x=null;function _(e){let t=p.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function b(){p.forEach(function(e,t){e.disconnect(t)}),p.clear(),y=null,x=null,i.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),A.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function M(e){let t=r.inputSources;for(let n=0;n<d.length;n++)p.set(t[n],d[n]);for(let i=0;i<e.removed.length;i++){let a=e.removed[i],s=p.get(a);s&&(s.dispatchEvent({type:"disconnected",data:a}),p.delete(a))}for(let o=0;o<e.added.length;o++){let l=e.added[o],u=p.get(l);u&&u.dispatchEvent({type:"connected",data:l})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=d[e];return void 0===t&&(t=new sj,d[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=d[e];return void 0===t&&(t=new sj,d[e]=t),t.getGripSpace()},this.getHand=function(e){let t=d[e];return void 0===t&&(t=new sj,d[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return r},this.setSession=async function(e){if(null!==(r=e)){r.addEventListener("select",_),r.addEventListener("selectstart",_),r.addEventListener("selectend",_),r.addEventListener("squeeze",_),r.addEventListener("squeezestart",_),r.addEventListener("squeezeend",_),r.addEventListener("end",b),r.addEventListener("inputsourceschange",M);let i=t.getContextAttributes();if(!0!==i.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers){let l={antialias:i.antialias,alpha:i.alpha,depth:i.depth,stencil:i.stencil,framebufferScaleFactor:a},d=new XRWebGLLayer(r,t,l);r.updateRenderState({baseLayer:d})}else{let p=0;i.depth&&(p=i.stencil?34041:6402);let f={colorFormat:i.alpha?6408:6407,depthFormat:p,scaleFactor:a};c=(u=new XRWebGLBinding(r,t)).createProjectionLayer(f),h=t.createFramebuffer(),r.updateRenderState({layers:[c]})}s=await r.requestReferenceSpace(o),A.setContext(r),A.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};let w=new nj,S=new nj;function T(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;v.near=m.near=f.near=e.near,v.far=m.far=f.far=e.far,(y!==v.near||x!==v.far)&&(r.updateRenderState({depthNear:v.near,depthFar:v.far}),y=v.near,x=v.far);let t=e.parent,n=v.cameras;T(v,t);for(let i=0;i<n.length;i++)T(n[i],t);v.matrixWorld.decompose(v.position,v.quaternion,v.scale),e.position.copy(v.position),e.quaternion.copy(v.quaternion),e.scale.copy(v.scale),e.matrix.copy(v.matrix),e.matrixWorld.copy(v.matrixWorld);let a=e.children;for(let s=0,o=a.length;s<o;s++)a[s].updateMatrixWorld(!0);2===n.length?function(e,t,n){w.setFromMatrixPosition(t.matrixWorld),S.setFromMatrixPosition(n.matrixWorld);let i=w.distanceTo(S),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],u=(r[9]-1)/r[5],h=(r[8]-1)/r[0],c=(a[8]+1)/a[0],d=i/(-h+c),p=-(d*h);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=s+d,m=o+d;e.projectionMatrix.makePerspective(s*h-p,s*c+(i-p),l*o/m*f,u*o/m*f,f,m)}(v,f,m):v.projectionMatrix.copy(f.projectionMatrix)},this.getCamera=function(){return v};let E=null,A=new r2;A.setAnimationLoop(function(e,n){if(null!==(l=n.getViewerPose(s))){let a=l.views,o=r.renderState.baseLayer;void 0===r.renderState.layers&&i.bindXRFramebuffer(o.framebuffer);let p=!1;a.length!==v.cameras.length&&(v.cameras.length=0,p=!0);for(let f=0;f<a.length;f++){let m=a[f],y=null;if(void 0===r.renderState.layers)y=o.getViewport(m);else{let x=u.getViewSubImage(c,m);i.bindXRFramebuffer(h),t.framebufferTexture2D(36160,36064,3553,x.colorTexture,0),void 0!==x.depthStencilTexture&&t.framebufferTexture2D(36160,36096,3553,x.depthStencilTexture,0),y=x.viewport}let _=g[f];_.matrix.fromArray(m.transform.matrix),_.projectionMatrix.fromArray(m.projectionMatrix),_.viewport.set(y.x,y.y,y.width,y.height),0===f&&v.matrix.copy(_.matrix),!0===p&&v.cameras.push(_)}}let b=r.inputSources;for(let M=0;M<d.length;M++){let w=d[M],S=b[M];w.update(S,n,s)}E&&E(e,n)}),this.setAnimationLoop=function(e){E=e},this.dispose=function(){}}}function sX(e){function t(t,n){let i,r;t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap);let a=e.get(n).envMap;if(a){t.envMap.value=a,t.flipEnvMap.value=a.isCubeTexture&&a._needsFlipEnvMap?-1:1,t.reflectivity.value=n.reflectivity,t.refractionRatio.value=n.refractionRatio;let s=e.get(a).__maxMipLevel;void 0!==s&&(t.maxMipLevel.value=s)}n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(i=n.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix)),n.aoMap?r=n.aoMap:n.lightMap&&(r=n.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uv2Transform.value.copy(r.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,n.side===_&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),n.side===_&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias);let i=e.get(n).envMap;i&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,i,r,a,s){var o,l,u,h,c,d,p,f,m,g,v,y;let x,b;i.isMeshBasicMaterial?t(e,i):i.isMeshLambertMaterial?(t(e,i),o=e,i.emissiveMap&&(o.emissiveMap.value=i.emissiveMap)):i.isMeshToonMaterial?(t(e,i),l=e,i.gradientMap&&(l.gradientMap.value=i.gradientMap),i.emissiveMap&&(l.emissiveMap.value=i.emissiveMap),i.bumpMap&&(l.bumpMap.value=i.bumpMap,l.bumpScale.value=i.bumpScale,i.side===_&&(l.bumpScale.value*=-1)),i.normalMap&&(l.normalMap.value=i.normalMap,l.normalScale.value.copy(i.normalScale),i.side===_&&l.normalScale.value.negate()),i.displacementMap&&(l.displacementMap.value=i.displacementMap,l.displacementScale.value=i.displacementScale,l.displacementBias.value=i.displacementBias)):i.isMeshPhongMaterial?(t(e,i),(u=e).specular.value.copy(i.specular),u.shininess.value=Math.max(i.shininess,1e-4),i.emissiveMap&&(u.emissiveMap.value=i.emissiveMap),i.bumpMap&&(u.bumpMap.value=i.bumpMap,u.bumpScale.value=i.bumpScale,i.side===_&&(u.bumpScale.value*=-1)),i.normalMap&&(u.normalMap.value=i.normalMap,u.normalScale.value.copy(i.normalScale),i.side===_&&u.normalScale.value.negate()),i.displacementMap&&(u.displacementMap.value=i.displacementMap,u.displacementScale.value=i.displacementScale,u.displacementBias.value=i.displacementBias)):i.isMeshStandardMaterial?(t(e,i),i.isMeshPhysicalMaterial?(n(h=e,i),h.reflectivity.value=i.reflectivity,h.clearcoat.value=i.clearcoat,h.clearcoatRoughness.value=i.clearcoatRoughness,i.sheen&&h.sheen.value.copy(i.sheen),i.clearcoatMap&&(h.clearcoatMap.value=i.clearcoatMap),i.clearcoatRoughnessMap&&(h.clearcoatRoughnessMap.value=i.clearcoatRoughnessMap),i.clearcoatNormalMap&&(h.clearcoatNormalScale.value.copy(i.clearcoatNormalScale),h.clearcoatNormalMap.value=i.clearcoatNormalMap,i.side===_&&h.clearcoatNormalScale.value.negate()),h.transmission.value=i.transmission,i.transmissionMap&&(h.transmissionMap.value=i.transmissionMap),i.transmission>0&&(h.transmissionSamplerMap.value=s.texture,h.transmissionSamplerSize.value.set(s.width,s.height)),h.thickness.value=i.thickness,i.thicknessMap&&(h.thicknessMap.value=i.thicknessMap),h.attenuationDistance.value=i.attenuationDistance,h.attenuationColor.value.copy(i.attenuationColor)):n(e,i)):i.isMeshMatcapMaterial?(t(e,i),c=e,i.matcap&&(c.matcap.value=i.matcap),i.bumpMap&&(c.bumpMap.value=i.bumpMap,c.bumpScale.value=i.bumpScale,i.side===_&&(c.bumpScale.value*=-1)),i.normalMap&&(c.normalMap.value=i.normalMap,c.normalScale.value.copy(i.normalScale),i.side===_&&c.normalScale.value.negate()),i.displacementMap&&(c.displacementMap.value=i.displacementMap,c.displacementScale.value=i.displacementScale,c.displacementBias.value=i.displacementBias)):i.isMeshDepthMaterial?(t(e,i),d=e,i.displacementMap&&(d.displacementMap.value=i.displacementMap,d.displacementScale.value=i.displacementScale,d.displacementBias.value=i.displacementBias)):i.isMeshDistanceMaterial?(t(e,i),p=e,i.displacementMap&&(p.displacementMap.value=i.displacementMap,p.displacementScale.value=i.displacementScale,p.displacementBias.value=i.displacementBias),p.referencePosition.value.copy(i.referencePosition),p.nearDistance.value=i.nearDistance,p.farDistance.value=i.farDistance):i.isMeshNormalMaterial?(t(e,i),f=e,i.bumpMap&&(f.bumpMap.value=i.bumpMap,f.bumpScale.value=i.bumpScale,i.side===_&&(f.bumpScale.value*=-1)),i.normalMap&&(f.normalMap.value=i.normalMap,f.normalScale.value.copy(i.normalScale),i.side===_&&f.normalScale.value.negate()),i.displacementMap&&(f.displacementMap.value=i.displacementMap,f.displacementScale.value=i.displacementScale,f.displacementBias.value=i.displacementBias)):i.isLineBasicMaterial?((m=e).diffuse.value.copy(i.color),m.opacity.value=i.opacity,i.isLineDashedMaterial&&((g=e).dashSize.value=i.dashSize,g.totalSize.value=i.dashSize+i.gapSize,g.scale.value=i.scale)):i.isPointsMaterial?((v=e).diffuse.value.copy(i.color),v.opacity.value=i.opacity,v.size.value=i.size*r,v.scale.value=.5*a,i.map&&(v.map.value=i.map),i.alphaMap&&(v.alphaMap.value=i.alphaMap),i.map?x=i.map:i.alphaMap&&(x=i.alphaMap),void 0!==x&&(!0===x.matrixAutoUpdate&&x.updateMatrix(),v.uvTransform.value.copy(x.matrix))):i.isSpriteMaterial?((y=e).diffuse.value.copy(i.color),y.opacity.value=i.opacity,y.rotation.value=i.rotation,i.map&&(y.map.value=i.map),i.alphaMap&&(y.alphaMap.value=i.alphaMap),i.map?b=i.map:i.alphaMap&&(b=i.alphaMap),void 0!==b&&(!0===b.matrixAutoUpdate&&b.updateMatrix(),y.uvTransform.value.copy(b.matrix))):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function sY(e={}){let t,n,i,r,a,s,o,l,u,h,c,d,p,f,m,g,v,y,M,w,S,T;let E=void 0!==e.canvas?e.canvas:function(){let e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),A=void 0!==e.context?e.context:null,L=void 0!==e.alpha&&e.alpha,R=void 0===e.depth||e.depth,C=void 0===e.stencil||e.stencil,P=void 0!==e.antialias&&e.antialias,D=void 0===e.premultipliedAlpha||e.premultipliedAlpha,I=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,N=void 0!==e.powerPreference?e.powerPreference:"default",B=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,z=null,F=null,O=[],H=[];this.domElement=E,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=tj,this.physicallyCorrectLights=!1,this.toneMapping=ei,this.toneMappingExposure=1;let U=this,G=!1,k=0,V=0,W=null,j=-1,q=null,X=new nU,Y=new nU,J=null,Z=E.width,Q=E.height,K=1,$=null,ee=null,et=new nU(0,0,Z,Q),en=new nU(0,0,Z,Q),er=!1,ea=[],es=new r3,eo=!1,el=!1,eu=null,eh=new ip,ec=new nj,ed={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ep(){return null===W?K:1}let ef=A;function em(e,t){for(let n=0;n<e.length;n++){let i=e[n],r=E.getContext(i,t);if(null!==r)return r}return null}try{if(E.addEventListener("webglcontextlost",eM,!1),E.addEventListener("webglcontextrestored",ew,!1),null===ef){let eg=["webgl2","webgl","experimental-webgl"];if(!0===U.isWebGL1Renderer&&eg.shift(),ef=em(eg,{alpha:L,depth:R,stencil:C,antialias:P,premultipliedAlpha:D,preserveDrawingBuffer:I,powerPreference:N,failIfMajorPerformanceCaveat:B}),null===ef){if(em(eg))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===ef.getShaderPrecisionFormat&&(ef.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(ey){throw console.error("THREE.WebGLRenderer: "+ey.message),ey}function e_(){t=new aa(ef),n=new an(ef,t,e),t.init(n),S=new sG(ef,t,n),i=new sH(ef,t,n),ea[0]=1029,r=new al(ef),a=new sT,s=new sU(ef,t,i,a,n,S,r),o=new ar(U),l=new r4(ef,n),T=new ae(ef,t,l,n),u=new as(ef,l,r,T),h=new ad(ef,u,l,r),y=new ac(ef),m=new ai(a),c=new sS(U,o,t,n,T,m),d=new sX(a),p=new sR(a),f=new sB(t,n),v=new r9(U,o,i,h,D),g=new sO(U,h,n),M=new at(ef,t,r,n),w=new ao(ef,t,r,n),r.programs=c.programs,U.capabilities=n,U.extensions=t,U.properties=a,U.renderLists=p,U.shadowMap=g,U.state=i,U.info=r}e_();let eb=new sq(U,ef);function eM(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),G=!0}function ew(){console.log("THREE.WebGLRenderer: Context Restored."),G=!1;let e=r.autoReset,t=g.enabled,n=g.autoUpdate,i=g.needsUpdate,a=g.type;e_(),r.autoReset=e,g.enabled=t,g.autoUpdate=n,g.needsUpdate=i,g.type=a}function eS(e){let t=e.target;t.removeEventListener("dispose",eS),function(e){let t=a.get(e).programs;void 0!==t&&t.forEach(function(e){c.releaseProgram(e)})}(t),a.remove(t)}this.xr=eb,this.getContext=function(){return ef},this.getContextAttributes=function(){return ef.getContextAttributes()},this.forceContextLoss=function(){let e=t.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=t.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return K},this.setPixelRatio=function(e){void 0!==e&&(K=e,this.setSize(Z,Q,!1))},this.getSize=function(e){return e.set(Z,Q)},this.setSize=function(e,t,n){if(eb.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Z=e,Q=t,E.width=Math.floor(e*K),E.height=Math.floor(t*K),!1!==n&&(E.style.width=e+"px",E.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e.set(Z*K,Q*K).floor()},this.setDrawingBufferSize=function(e,t,n){Z=e,Q=t,K=n,E.width=Math.floor(e*n),E.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(X)},this.getViewport=function(e){return e.copy(et)},this.setViewport=function(e,t,n,r){e.isVector4?et.set(e.x,e.y,e.z,e.w):et.set(e,t,n,r),i.viewport(X.copy(et).multiplyScalar(K).floor())},this.getScissor=function(e){return e.copy(en)},this.setScissor=function(e,t,n,r){e.isVector4?en.set(e.x,e.y,e.z,e.w):en.set(e,t,n,r),i.scissor(Y.copy(en).multiplyScalar(K).floor())},this.getScissorTest=function(){return er},this.setScissorTest=function(e){i.setScissorTest(er=e)},this.setOpaqueSort=function(e){$=e},this.setTransparentSort=function(e){ee=e},this.getClearColor=function(e){return e.copy(v.getClearColor())},this.setClearColor=function(){v.setClearColor.apply(v,arguments)},this.getClearAlpha=function(){return v.getClearAlpha()},this.setClearAlpha=function(){v.setClearAlpha.apply(v,arguments)},this.clear=function(e,t,n){let i=0;(void 0===e||e)&&(i|=16384),(void 0===t||t)&&(i|=256),(void 0===n||n)&&(i|=1024),ef.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){E.removeEventListener("webglcontextlost",eM,!1),E.removeEventListener("webglcontextrestored",ew,!1),p.dispose(),f.dispose(),a.dispose(),o.dispose(),h.dispose(),T.dispose(),eb.dispose(),eb.removeEventListener("sessionstart",eE),eb.removeEventListener("sessionend",eL),eu&&(eu.dispose(),eu=null),eC.stop()},this.renderBufferImmediate=function(e,t){T.initAttributes();let n=a.get(e);e.hasPositions&&!n.position&&(n.position=ef.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=ef.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=ef.createBuffer()),e.hasColors&&!n.color&&(n.color=ef.createBuffer());let i=t.getAttributes();e.hasPositions&&(ef.bindBuffer(34962,n.position),ef.bufferData(34962,e.positionArray,35048),T.enableAttribute(i.position),ef.vertexAttribPointer(i.position,3,5126,!1,0,0)),e.hasNormals&&(ef.bindBuffer(34962,n.normal),ef.bufferData(34962,e.normalArray,35048),T.enableAttribute(i.normal),ef.vertexAttribPointer(i.normal,3,5126,!1,0,0)),e.hasUvs&&(ef.bindBuffer(34962,n.uv),ef.bufferData(34962,e.uvArray,35048),T.enableAttribute(i.uv),ef.vertexAttribPointer(i.uv,2,5126,!1,0,0)),e.hasColors&&(ef.bindBuffer(34962,n.color),ef.bufferData(34962,e.colorArray,35048),T.enableAttribute(i.color),ef.vertexAttribPointer(i.color,3,5126,!1,0,0)),T.disableUnusedAttributes(),ef.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,a,s){let o;null===t&&(t=ed);let h=a.isMesh&&0>a.matrixWorld.determinant(),c=eF(e,t,r,a);i.setMaterial(r,h);let d=n.index,p=n.attributes.position;if(null===d){if(void 0===p||0===p.count)return}else if(0===d.count)return;let f=1;!0===r.wireframe&&(d=u.getWireframeAttribute(n),f=2),(r.morphTargets||r.morphNormals)&&y.update(a,n,r,c),T.setup(a,r,c,n,d);let m=M;null!==d&&(o=l.get(d),(m=w).setIndex(o));let g=null!==d?d.count:p.count,v=n.drawRange.start*f,x=n.drawRange.count*f,_=null!==s?s.start*f:0,b=null!==s?s.count*f:1/0,S=Math.max(v,_),E=Math.max(0,Math.min(g,v+x,_+b)-1-S+1);if(0!==E){if(a.isMesh)!0===r.wireframe?(i.setLineWidth(r.wireframeLinewidth*ep()),m.setMode(1)):m.setMode(4);else if(a.isLine){let A=r.linewidth;void 0===A&&(A=1),i.setLineWidth(A*ep()),a.isLineSegments?m.setMode(1):a.isLineLoop?m.setMode(2):m.setMode(3)}else a.isPoints?m.setMode(0):a.isSprite&&m.setMode(4);if(a.isInstancedMesh)m.renderInstances(S,E,a.count);else if(n.isInstancedBufferGeometry){let L=Math.min(n.instanceCount,n._maxInstanceCount);m.renderInstances(S,E,L)}else m.render(S,E)}},this.compile=function(e,t){(F=f.get(e)).init(),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(F.pushLight(e),e.castShadow&&F.pushShadow(e))}),F.setupLights(),e.traverse(function(t){let n=t.material;if(n){if(Array.isArray(n))for(let i=0;i<n.length;i++){let r=n[i];eI(r,e,t)}else eI(n,e,t)}})};let eT=null;function eE(){eC.stop()}function eL(){eC.start()}let eC=new r2;function eP(e,t,n){let r=!0===t.isScene?t.overrideMaterial:null;for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.object,u=o.geometry,h=null===r?o.material:r,c=o.group;if(n.isArrayCamera){let d=n.cameras;for(let p=0,f=d.length;p<f;p++){let m=d[p];l.layers.test(m.layers)&&(i.viewport(X.copy(m.viewport)),F.setupLightsView(m),eD(l,t,m,u,h,c))}}else eD(l,t,n,u,h,c)}}function eD(e,t,n,r,a,s){if(e.onBeforeRender(U,t,n,r,a,s),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){let o=eF(n,t,a,e);i.setMaterial(a),T.reset(),function(e,t){e.render(function(e){U.renderBufferImmediate(e,t)})}(e,o)}else!0===a.transparent&&a.side===b?(a.side=_,a.needsUpdate=!0,U.renderBufferDirect(n,t,r,a,e,s),a.side=x,a.needsUpdate=!0,U.renderBufferDirect(n,t,r,a,e,s),a.side=b):U.renderBufferDirect(n,t,r,a,e,s);e.onAfterRender(U,t,n,r,a,s)}function eI(e,t,n){!0!==t.isScene&&(t=ed);let i=a.get(e),r=F.state.lights,s=F.state.shadowsArray,l=r.state.version,u=c.getParameters(e,r.state,s,t,n),h=c.getProgramCacheKey(u),d=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=o.get(e.envMap||i.environment),void 0===d&&(e.addEventListener("dispose",eS),d=new Map,i.programs=d);let p=d.get(h);if(void 0!==p){if(i.currentProgram===p&&i.lightsStateVersion===l)return eN(e,u),p}else u.uniforms=c.getUniforms(e),e.onBuild(u,U),e.onBeforeCompile(u,U),p=c.acquireProgram(u,h),d.set(h,p),i.uniforms=u.uniforms;let f=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(f.clippingPlanes=m.uniform),eN(e,u),i.needsLights=e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,i.lightsStateVersion=l,i.needsLights&&(f.ambientLightColor.value=r.state.ambient,f.lightProbe.value=r.state.probe,f.directionalLights.value=r.state.directional,f.directionalLightShadows.value=r.state.directionalShadow,f.spotLights.value=r.state.spot,f.spotLightShadows.value=r.state.spotShadow,f.rectAreaLights.value=r.state.rectArea,f.ltc_1.value=r.state.rectAreaLTC1,f.ltc_2.value=r.state.rectAreaLTC2,f.pointLights.value=r.state.point,f.pointLightShadows.value=r.state.pointShadow,f.hemisphereLights.value=r.state.hemi,f.directionalShadowMap.value=r.state.directionalShadowMap,f.directionalShadowMatrix.value=r.state.directionalShadowMatrix,f.spotShadowMap.value=r.state.spotShadowMap,f.spotShadowMatrix.value=r.state.spotShadowMatrix,f.pointShadowMap.value=r.state.pointShadowMap,f.pointShadowMatrix.value=r.state.pointShadowMatrix);let g=p.getUniforms(),v=sa.seqWithValue(g.seq,f);return i.currentProgram=p,i.uniformsList=v,p}function eN(e,t){let n=a.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas}function eF(e,t,r,l){var u,h;!0!==t.isScene&&(t=ed),s.resetTextureUnits();let c=t.fog,p=r.isMeshStandardMaterial?t.environment:null,f=null===W?U.outputEncoding:W.texture.encoding,g=o.get(r.envMap||p),v=!0===r.vertexColors&&l.geometry&&l.geometry.attributes.color&&4===l.geometry.attributes.color.itemSize,y=a.get(r),x=F.state.lights;if(!0===eo&&(!0===el||e!==q)){let _=e===q&&r.id===j;m.setState(r,e,_)}let b=!1;r.version===y.__version?y.needsLights&&y.lightsStateVersion!==x.state.version?b=!0:y.outputEncoding!==f?b=!0:l.isInstancedMesh&&!1===y.instancing?b=!0:l.isInstancedMesh||!0!==y.instancing?l.isSkinnedMesh&&!1===y.skinning?b=!0:l.isSkinnedMesh||!0!==y.skinning?y.envMap!==g?b=!0:r.fog&&y.fog!==c?b=!0:void 0!==y.numClippingPlanes&&(y.numClippingPlanes!==m.numPlanes||y.numIntersection!==m.numIntersection)?b=!0:y.vertexAlphas!==v&&(b=!0):b=!0:b=!0:(b=!0,y.__version=r.version);let M=y.currentProgram;!0===b&&(M=eI(r,t,l));let w=!1,S=!1,T=!1,E=M.getUniforms(),A=y.uniforms;if(i.useProgram(M.program)&&(w=!0,S=!0,T=!0),r.id!==j&&(j=r.id,S=!0),w||q!==e){if(E.setValue(ef,"projectionMatrix",e.projectionMatrix),n.logarithmicDepthBuffer&&E.setValue(ef,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),q!==e&&(q=e,S=!0,T=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){let L=E.map.cameraPosition;void 0!==L&&L.setValue(ef,ec.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&E.setValue(ef,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||l.isSkinnedMesh)&&E.setValue(ef,"viewMatrix",e.matrixWorldInverse)}if(l.isSkinnedMesh){E.setOptional(ef,l,"bindMatrix"),E.setOptional(ef,l,"bindMatrixInverse");let R=l.skeleton;R&&(n.floatVertexTextures?(null===R.boneTexture&&R.computeBoneTexture(),E.setValue(ef,"boneTexture",R.boneTexture,s),E.setValue(ef,"boneTextureSize",R.boneTextureSize)):E.setOptional(ef,R,"boneMatrices"))}return(S||y.receiveShadow!==l.receiveShadow)&&(y.receiveShadow=l.receiveShadow,E.setValue(ef,"receiveShadow",l.receiveShadow)),S&&(E.setValue(ef,"toneMappingExposure",U.toneMappingExposure),y.needsLights&&(u=A,h=T,u.ambientLightColor.needsUpdate=h,u.lightProbe.needsUpdate=h,u.directionalLights.needsUpdate=h,u.directionalLightShadows.needsUpdate=h,u.pointLights.needsUpdate=h,u.pointLightShadows.needsUpdate=h,u.spotLights.needsUpdate=h,u.spotLightShadows.needsUpdate=h,u.rectAreaLights.needsUpdate=h,u.hemisphereLights.needsUpdate=h),c&&r.fog&&d.refreshFogUniforms(A,c),d.refreshMaterialUniforms(A,r,K,Q,eu),sa.upload(ef,y.uniformsList,A,s)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(sa.upload(ef,y.uniformsList,A,s),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&E.setValue(ef,"center",l.center),E.setValue(ef,"modelViewMatrix",l.modelViewMatrix),E.setValue(ef,"normalMatrix",l.normalMatrix),E.setValue(ef,"modelMatrix",l.matrixWorld),M}eC.setAnimationLoop(function(e){eT&&eT(e)}),"undefined"!=typeof window&&eC.setContext(window),this.setAnimationLoop=function(e){eT=e,eb.setAnimationLoop(e),null===e?eC.stop():eC.start()},eb.addEventListener("sessionstart",eE),eb.addEventListener("sessionend",eL),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===G)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===eb.enabled&&!0===eb.isPresenting&&(!0===eb.cameraAutoUpdate&&eb.updateCamera(t),t=eb.getCamera()),!0===e.isScene&&e.onBeforeRender(U,e,t,W),(F=f.get(e,H.length)).init(),H.push(F),eh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),es.setFromProjectionMatrix(eh),el=this.localClippingEnabled,eo=m.init(this.clippingPlanes,el,t),(z=p.get(e,O.length)).init(),O.push(z),function e(t,n,i,a){if(!1===t.visible)return;let s=t.layers.test(n.layers);if(s){if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(n);else if(t.isLight)F.pushLight(t),t.castShadow&&F.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||es.intersectsSprite(t)){a&&ec.setFromMatrixPosition(t.matrixWorld).applyMatrix4(eh);let o=h.update(t),l=t.material;l.visible&&z.push(t,o,l,i,ec.z,null)}}else if(t.isImmediateRenderObject)a&&ec.setFromMatrixPosition(t.matrixWorld).applyMatrix4(eh),z.push(t,null,t.material,i,ec.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==r.render.frame&&(t.skeleton.update(),t.skeleton.frame=r.render.frame),!t.frustumCulled||es.intersectsObject(t))){a&&ec.setFromMatrixPosition(t.matrixWorld).applyMatrix4(eh);let u=h.update(t),c=t.material;if(Array.isArray(c)){let d=u.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p],g=c[m.materialIndex];g&&g.visible&&z.push(t,u,g,i,ec.z,m)}}else c.visible&&z.push(t,u,c,i,ec.z,null)}}let v=t.children;for(let y=0,x=v.length;y<x;y++)e(v[y],n,i,a)}(e,t,0,U.sortObjects),z.finish(),!0===U.sortObjects&&z.sort($,ee),!0===eo&&m.beginShadows();let a=F.state.shadowsArray;g.render(a,e,t),F.setupLights(),F.setupLightsView(t),!0===eo&&m.endShadows(),!0===this.info.autoReset&&this.info.reset(),v.render(z,e);let o=z.opaque,l=z.transmissive,u=z.transparent;o.length>0&&eP(o,e,t),l.length>0&&function(e,t,i,r){if(null===eu){let a=!0===P&&!0===n.isWebGL2,o=a?nV:nG;eu=new o(1024,1024,{generateMipmaps:!0,type:null!==S.convert(ez)?ez:eR,minFilter:eA,magFilter:ex,wrapS:ev,wrapT:ev})}let l=U.getRenderTarget();U.setRenderTarget(eu),U.clear();let u=U.toneMapping;U.toneMapping=ei,eP(e,i,r),U.toneMapping=u,s.updateMultisampleRenderTarget(eu),s.updateRenderTargetMipmap(eu),U.setRenderTarget(l),eP(t,i,r)}(o,l,e,t),u.length>0&&eP(u,e,t),null!==W&&(s.updateMultisampleRenderTarget(W),s.updateRenderTargetMipmap(W)),!0===e.isScene&&e.onAfterRender(U,e,t),i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),i.setPolygonOffset(!1),T.resetDefaultState(),j=-1,q=null,H.pop(),F=H.length>0?H[H.length-1]:null,O.pop(),z=O.length>0?O[O.length-1]:null},this.getActiveCubeFace=function(){return k},this.getActiveMipmapLevel=function(){return V},this.getRenderTarget=function(){return W},this.setRenderTarget=function(e,r=0,o=0){W=e,k=r,V=o,e&&void 0===a.get(e).__webglFramebuffer&&s.setupRenderTarget(e);let l=null,u=!1,h=!1;if(e){let c=e.texture;(c.isDataTexture3D||c.isDataTexture2DArray)&&(h=!0);let d=a.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(l=d[r],u=!0):l=e.isWebGLMultisampleRenderTarget?a.get(e).__webglMultisampledFramebuffer:d,X.copy(e.viewport),Y.copy(e.scissor),J=e.scissorTest}else X.copy(et).multiplyScalar(K).floor(),Y.copy(en).multiplyScalar(K).floor(),J=er;let p=i.bindFramebuffer(36160,l);if(p&&n.drawBuffers){let f=!1;if(e){if(e.isWebGLMultipleRenderTargets){let m=e.texture;if(ea.length!==m.length||36064!==ea[0]){for(let g=0,v=m.length;g<v;g++)ea[g]=36064+g;ea.length=m.length,f=!0}}else(1!==ea.length||36064!==ea[0])&&(ea[0]=36064,ea.length=1,f=!0)}else(1!==ea.length||1029!==ea[0])&&(ea[0]=1029,ea.length=1,f=!0);f&&(n.isWebGL2?ef.drawBuffers(ea):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(ea))}if(i.viewport(X),i.scissor(Y),i.setScissorTest(J),u){let y=a.get(e.texture);ef.framebufferTexture2D(36160,36064,34069+r,y.__webglTexture,o)}else if(h){let x=a.get(e.texture);ef.framebufferTextureLayer(36160,36064,x.__webglTexture,o||0,r||0)}},this.readRenderTargetPixels=function(e,r,s,o,l,u,h){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let c=a.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==h&&(c=c[h]),c){i.bindFramebuffer(36160,c);try{let d=e.texture,p=d.format,f=d.type;if(p!==eV&&S.convert(p)!==ef.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let m=f===ez&&(t.has("EXT_color_buffer_half_float")||n.isWebGL2&&t.has("EXT_color_buffer_float"));if(f!==eR&&S.convert(f)!==ef.getParameter(35738)&&!(f===eB&&(n.isWebGL2||t.has("OES_texture_float")||t.has("WEBGL_color_buffer_float")))&&!m){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}36053===ef.checkFramebufferStatus(36160)?r>=0&&r<=e.width-o&&s>=0&&s<=e.height-l&&ef.readPixels(r,s,o,l,S.convert(p),S.convert(f),u):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{let g=null!==W?a.get(W).__webglFramebuffer:null;i.bindFramebuffer(36160,g)}}},this.copyFramebufferToTexture=function(e,t,r=0){let a=Math.pow(2,-r),o=Math.floor(t.image.width*a),l=Math.floor(t.image.height*a),u=S.convert(t.format);n.isWebGL2&&(6407===u&&(u=32849),6408===u&&(u=32856)),s.setTexture2D(t,0),ef.copyTexImage2D(3553,r,u,e.x,e.y,o,l,0),i.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){let a=t.image.width,o=t.image.height,l=S.convert(n.format),u=S.convert(n.type);s.setTexture2D(n,0),ef.pixelStorei(37440,n.flipY),ef.pixelStorei(37441,n.premultiplyAlpha),ef.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?ef.texSubImage2D(3553,r,e.x,e.y,a,o,l,u,t.image.data):t.isCompressedTexture?ef.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,l,t.mipmaps[0].data):ef.texSubImage2D(3553,r,e.x,e.y,l,u,t.image),0===r&&n.generateMipmaps&&ef.generateMipmap(3553),i.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,a=0){let o;if(U.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let l=e.max.x-e.min.x+1,u=e.max.y-e.min.y+1,h=e.max.z-e.min.z+1,c=S.convert(r.format),d=S.convert(r.type);if(r.isDataTexture3D)s.setTexture3D(r,0),o=32879;else if(r.isDataTexture2DArray)s.setTexture2DArray(r,0),o=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}ef.pixelStorei(37440,r.flipY),ef.pixelStorei(37441,r.premultiplyAlpha),ef.pixelStorei(3317,r.unpackAlignment);let p=ef.getParameter(3314),f=ef.getParameter(32878),m=ef.getParameter(3316),g=ef.getParameter(3315),v=ef.getParameter(32877),y=n.isCompressedTexture?n.mipmaps[0]:n.image;ef.pixelStorei(3314,y.width),ef.pixelStorei(32878,y.height),ef.pixelStorei(3316,e.min.x),ef.pixelStorei(3315,e.min.y),ef.pixelStorei(32877,e.min.z),n.isDataTexture||n.isDataTexture3D?ef.texSubImage3D(o,a,t.x,t.y,t.z,l,u,h,c,d,y.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ef.compressedTexSubImage3D(o,a,t.x,t.y,t.z,l,u,h,c,y.data)):ef.texSubImage3D(o,a,t.x,t.y,t.z,l,u,h,c,d,y),ef.pixelStorei(3314,p),ef.pixelStorei(32878,f),ef.pixelStorei(3316,m),ef.pixelStorei(3315,g),ef.pixelStorei(32877,v),0===a&&r.generateMipmaps&&ef.generateMipmap(o),i.unbindTexture()},this.initTexture=function(e){s.setTexture2D(e,0),i.unbindTexture()},this.resetState=function(){k=0,V=0,W=null,i.reset(),T.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class sJ extends sY{}sJ.prototype.isWebGL1Renderer=!0;class sZ{constructor(e,t=25e-5){this.name="",this.color=new i5(e),this.density=t}clone(){return new sZ(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}sZ.prototype.isFogExp2=!0;class sQ{constructor(e,t=1,n=1e3){this.name="",this.color=new i5(e),this.near=t,this.far=n}clone(){return new sQ(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}sQ.prototype.isFog=!0;class sK extends iH{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}sK.prototype.isScene=!0;class s${constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=nu,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=nE()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=nE()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=nE()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}s$.prototype.isInterleavedBuffer=!0;let s0=new nj;class s1{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)s0.x=this.getX(t),s0.y=this.getY(t),s0.z=this.getZ(t),s0.applyMatrix4(e),this.setXYZ(t,s0.x,s0.y,s0.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)s0.x=this.getX(t),s0.y=this.getY(t),s0.z=this.getZ(t),s0.applyNormalMatrix(e),this.setXYZ(t,s0.x,s0.y,s0.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)s0.x=this.getX(t),s0.y=this.getY(t),s0.z=this.getZ(t),s0.transformDirection(e),this.setXYZ(t,s0.x,s0.y,s0.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new s1(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let n=0;n<this.count;n++){let i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new i9(new this.array.constructor(t),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let n=0;n<this.count;n++){let i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}}s1.prototype.isInterleavedBufferAttribute=!0;class s3 extends iK{constructor(e){super(),this.type="SpriteMaterial",this.color=new i5(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}s3.prototype.isSpriteMaterial=!0;let s2=new nj,s4=new nj,s5=new nj,s6=new nN,s7=new nN,s8=new ip,s9=new nj,oe=new nj,ot=new nj,on=new nN,oi=new nN,or=new nN;class oa extends iH{constructor(e){if(super(),this.type="Sprite",void 0===r){r=new r_;let t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new s$(t,5);r.setIndex([0,1,2,0,2,3]),r.setAttribute("position",new s1(n,3,0,!1)),r.setAttribute("uv",new s1(n,2,3,!1))}this.geometry=r,this.material=void 0!==e?e:new s3,this.center=new nN(.5,.5)}raycast(e,t){let n,i;null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),s4.setFromMatrixScale(this.matrixWorld),s8.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),s5.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&s4.multiplyScalar(-s5.z);let r=this.material.rotation;0!==r&&(i=Math.cos(r),n=Math.sin(r));let a=this.center;os(s9.set(-.5,-.5,0),s5,a,s4,n,i),os(oe.set(.5,-.5,0),s5,a,s4,n,i),os(ot.set(.5,.5,0),s5,a,s4,n,i),on.set(0,0),oi.set(1,0),or.set(1,1);let s=e.ray.intersectTriangle(s9,oe,ot,!1,s2);if(null===s&&(os(oe.set(-.5,.5,0),s5,a,s4,n,i),oi.set(0,1),null===(s=e.ray.intersectTriangle(s9,ot,oe,!1,s2))))return;let o=e.ray.origin.distanceTo(s2);o<e.near||o>e.far||t.push({distance:o,point:s2.clone(),uv:iZ.getUV(s2,s9,oe,ot,on,oi,or,new nN),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function os(e,t,n,i,r,a){s6.subVectors(e,n).addScalar(.5).multiply(i),void 0!==r?(s7.x=a*s6.x-r*s6.y,s7.y=r*s6.x+a*s6.y):s7.copy(s6),e.copy(t),e.x+=s7.x,e.y+=s7.y,e.applyMatrix4(s8)}oa.prototype.isSprite=!0;let oo=new nj,ol=new nj;class ou extends iH{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let n=0,i=t.length;n<i;n++){let r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){let n;t=Math.abs(t);let i=this.levels;for(n=0;n<i.length&&!(t<i[n].distance);n++);return i.splice(n,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){let n=this.levels;if(n.length>0){oo.setFromMatrixPosition(this.matrixWorld);let i=e.ray.origin.distanceTo(oo);this.getObjectForDistance(i).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){let n,i;oo.setFromMatrixPosition(e.matrixWorld),ol.setFromMatrixPosition(this.matrixWorld);let r=oo.distanceTo(ol)/e.zoom;for(n=1,t[0].object.visible=!0,i=t.length;n<i;n++)if(r>=t[n].distance)t[n-1].object.visible=!1,t[n].object.visible=!0;else break;for(this._currentLevel=n-1;n<i;n++)t[n].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let n=this.levels;for(let i=0,r=n.length;i<r;i++){let a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}let oh=new nj,oc=new nU,od=new nU,op=new nj,of=new ip;class om extends rO{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ip,this.bindMatrixInverse=new ip}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new nU,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);let r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){let n=this.skeleton,i=this.geometry;oc.fromBufferAttribute(i.attributes.skinIndex,e),od.fromBufferAttribute(i.attributes.skinWeight,e),oh.fromBufferAttribute(i.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){let a=od.getComponent(r);if(0!==a){let s=oc.getComponent(r);of.multiplyMatrices(n.bones[s].matrixWorld,n.boneInverses[s]),t.addScaledVector(op.copy(oh).applyMatrix4(of),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}om.prototype.isSkinnedMesh=!0;class og extends iH{constructor(){super(),this.type="Bone"}}og.prototype.isBone=!0;class ov extends nO{constructor(e=null,t=1,n=1,i,r,a,s,o,l=ex,u=ex,h,c){super(null,a,s,o,l,u,i,r,h,c),this.image={data:e,width:t,height:n},this.magFilter=l,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ov.prototype.isDataTexture=!0;let oy=new ip,ox=new ip;class o_{constructor(e=[],t=[]){this.uuid=nE(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ip)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let n=new ip;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let i=0,r=this.bones.length;i<r;i++){let a=this.bones[i];a&&(a.parent&&a.parent.isBone?(a.matrix.copy(a.parent.matrixWorld).invert(),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))}}update(){let e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){let s=e[r]?e[r].matrixWorld:ox;oy.multiplyMatrices(s,t[r]),oy.toArray(n,16*r)}null!==i&&(i.needsUpdate=!0)}clone(){return new o_(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Math.max(e=nP(e),4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let n=new ov(t,e,e,eV,eB);return this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){let i=this.bones[t];if(i.name===e)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){let r=e.bones[n],a=t[r];void 0===a&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new og),this.bones.push(a),this.boneInverses.push(new ip().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){let e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){let a=t[i];e.bones.push(a.uuid);let s=n[i];e.boneInverses.push(s.toArray())}return e}}let ob=new ip,oM=new ip,ow=[],oS=new rO;class oT extends rO{constructor(e,t,n){super(e,t),this.instanceMatrix=new i9(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let n=this.matrixWorld,i=this.count;if(oS.geometry=this.geometry,oS.material=this.material,void 0!==oS.material)for(let r=0;r<i;r++){this.getMatrixAt(r,ob),oM.multiplyMatrices(n,ob),oS.matrixWorld=oM,oS.raycast(e,ow);for(let a=0,s=ow.length;a<s;a++){let o=ow[a];o.instanceId=r,o.object=this,t.push(o)}ow.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new i9(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}oT.prototype.isInstancedMesh=!0;class oE extends iK{constructor(e){super(),this.type="LineBasicMaterial",this.color=new i5(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}oE.prototype.isLineBasicMaterial=!0;let oA=new nj,oL=new nj,oR=new ip,oC=new id,oP=new ir;class oD extends iH{constructor(e=new r_,t=new oE){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)oA.fromBufferAttribute(t,i-1),oL.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=oA.distanceTo(oL);e.setAttribute("lineDistance",new rl(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){let n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),oP.copy(n.boundingSphere),oP.applyMatrix4(i),oP.radius+=r,!1===e.ray.intersectsSphere(oP))return;oR.copy(i).invert(),oC.copy(e.ray).applyMatrix4(oR);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new nj,u=new nj,h=new nj,c=new nj,d=this.isLineSegments?2:1;if(n.isBufferGeometry){let p=n.index,f=n.attributes,m=f.position;if(null!==p){let g=Math.max(0,a.start),v=Math.min(p.count,a.start+a.count);for(let y=g,x=v-1;y<x;y+=d){let _=p.getX(y),b=p.getX(y+1);l.fromBufferAttribute(m,_),u.fromBufferAttribute(m,b);let M=oC.distanceSqToSegment(l,u,c,h);if(M>o)continue;c.applyMatrix4(this.matrixWorld);let w=e.ray.origin.distanceTo(c);w<e.near||w>e.far||t.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{let S=Math.max(0,a.start),T=Math.min(m.count,a.start+a.count);for(let E=S,A=T-1;E<A;E+=d){l.fromBufferAttribute(m,E),u.fromBufferAttribute(m,E+1);let L=oC.distanceSqToSegment(l,u,c,h);if(L>o)continue;c.applyMatrix4(this.matrixWorld);let R=e.ray.origin.distanceTo(c);R<e.near||R>e.far||t.push({distance:R,point:h.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){let s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}oD.prototype.isLine=!0;let oI=new nj,oN=new nj;class oB extends oD{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)oI.fromBufferAttribute(t,i),oN.fromBufferAttribute(t,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+oI.distanceTo(oN);e.setAttribute("lineDistance",new rl(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}oB.prototype.isLineSegments=!0;class oz extends oD{constructor(e,t){super(e,t),this.type="LineLoop"}}oz.prototype.isLineLoop=!0;class oF extends iK{constructor(e){super(),this.type="PointsMaterial",this.color=new i5(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}oF.prototype.isPointsMaterial=!0;let oO=new ip,oH=new id,oU=new ir,oG=new nj;class ok extends iH{constructor(e=new r_,t=new oF){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),oU.copy(n.boundingSphere),oU.applyMatrix4(i),oU.radius+=r,!1===e.ray.intersectsSphere(oU))return;oO.copy(i).invert(),oH.copy(e.ray).applyMatrix4(oO);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){let l=n.index,u=n.attributes,h=u.position;if(null!==l){let c=Math.max(0,a.start),d=Math.min(l.count,a.start+a.count);for(let p=c;p<d;p++){let f=l.getX(p);oG.fromBufferAttribute(h,f),oV(oG,f,o,i,e,t,this)}}else{let m=Math.max(0,a.start),g=Math.min(h.count,a.start+a.count);for(let v=m;v<g;v++)oG.fromBufferAttribute(h,v),oV(oG,v,o,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){let s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function oV(e,t,n,i,r,a,s){let o=oH.distanceSqToPoint(e);if(o<n){let l=new nj;oH.closestPointToPoint(e,l),l.applyMatrix4(i);let u=r.ray.origin.distanceTo(l);if(u<r.near||u>r.far)return;a.push({distance:u,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}ok.prototype.isPoints=!0;class oW extends nO{constructor(e,t,n,i,r,a,s,o,l){super(e,t,n,i,r,a,s,o,l),this.format=void 0!==s?s:ek,this.minFilter=void 0!==a?a:eS,this.magFilter=void 0!==r?r:eS,this.generateMipmaps=!1;let u=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function t(){u.needsUpdate=!0,e.requestVideoFrameCallback(t)})}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}oW.prototype.isVideoTexture=!0;class oj extends nO{constructor(e,t,n,i,r,a,s,o,l,u,h,c){super(null,a,s,o,l,u,i,r,h,c),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}oj.prototype.isCompressedTexture=!0;class oq extends nO{constructor(e,t,n,i,r,a,s,o,l){super(e,t,n,i,r,a,s,o,l),this.needsUpdate=!0}}oq.prototype.isCanvasTexture=!0;class oX extends nO{constructor(e,t,n,i,r,a,s,o,l,u){if((u=void 0!==u?u:eX)!==eX&&u!==eY)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===eX&&(n=eD),void 0===n&&u===eY&&(n=eU),super(null,i,r,a,s,o,u,n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:ex,this.minFilter=void 0!==o?o:ex,this.flipY=!1,this.generateMipmaps=!1}}oX.prototype.isDepthTexture=!0;class oY extends r_{constructor(e=1,t=8,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);let r=[],a=[],s=[],o=[],l=new nj,u=new nN;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let h=0,c=3;h<=t;h++,c+=3){let d=n+h/t*i;l.x=e*Math.cos(d),l.y=e*Math.sin(d),a.push(l.x,l.y,l.z),s.push(0,0,1),u.x=(a[c]/e+1)/2,u.y=(a[c+1]/e+1)/2,o.push(u.x,u.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new rl(a,3)),this.setAttribute("normal",new rl(s,3)),this.setAttribute("uv",new rl(o,2))}static fromJSON(e){return new oY(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class oJ extends r_{constructor(e=1,t=1,n=1,i=8,r=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o};let l=this;i=Math.floor(i),r=Math.floor(r);let u=[],h=[],c=[],d=[],p=0,f=[],m=n/2,g=0;function v(n){let r=p,a=new nN,f=new nj,v=0,y=!0===n?e:t,x=!0===n?1:-1;for(let _=1;_<=i;_++)h.push(0,m*x,0),c.push(0,x,0),d.push(.5,.5),p++;let b=p;for(let M=0;M<=i;M++){let w=M/i,S=w*o+s,T=Math.cos(S),E=Math.sin(S);f.x=y*E,f.y=m*x,f.z=y*T,h.push(f.x,f.y,f.z),c.push(0,x,0),a.x=.5*T+.5,a.y=.5*E*x+.5,d.push(a.x,a.y),p++}for(let A=0;A<i;A++){let L=r+A,R=b+A;!0===n?u.push(R,R+1,L):u.push(R+1,R,L),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}(function(){let a=new nj,v=new nj,y=0,x=(t-e)/n;for(let _=0;_<=r;_++){let b=[],M=_/r,w=M*(t-e)+e;for(let S=0;S<=i;S++){let T=S/i,E=T*o+s,A=Math.sin(E),L=Math.cos(E);v.x=w*A,v.y=-M*n+m,v.z=w*L,h.push(v.x,v.y,v.z),a.set(A,x,L).normalize(),c.push(a.x,a.y,a.z),d.push(T,1-M),b.push(p++)}f.push(b)}for(let R=0;R<i;R++)for(let C=0;C<r;C++){let P=f[C][R],D=f[C+1][R],I=f[C+1][R+1],N=f[C][R+1];u.push(P,D,N),u.push(D,I,N),y+=6}l.addGroup(g,y,0),g+=y})(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(u),this.setAttribute("position",new rl(h,3)),this.setAttribute("normal",new rl(c,3)),this.setAttribute("uv",new rl(d,2))}static fromJSON(e){return new oJ(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class oZ extends oJ{constructor(e=1,t=1,n=8,i=1,r=!1,a=0,s=2*Math.PI){super(0,e,t,n,i,r,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:s}}static fromJSON(e){return new oZ(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class oQ extends r_{constructor(e,t,n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};let r=[],a=[];function s(e){r.push(e.x,e.y,e.z)}function o(t,n){let i=3*t;n.x=e[i+0],n.y=e[i+1],n.z=e[i+2]}function l(e,t,n,i){i<0&&1===e.x&&(a[t]=e.x-1),0===n.x&&0===n.z&&(a[t]=i/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}(function(e){let n=new nj,i=new nj,r=new nj;for(let a=0;a<t.length;a+=3)o(t[a+0],n),o(t[a+1],i),o(t[a+2],r),function(e,t,n,i){let r=i+1,a=[];for(let o=0;o<=r;o++){a[o]=[];let l=e.clone().lerp(n,o/r),u=t.clone().lerp(n,o/r),h=r-o;for(let c=0;c<=h;c++)0===c&&o===r?a[o][c]=l:a[o][c]=l.clone().lerp(u,c/h)}for(let d=0;d<r;d++)for(let p=0;p<2*(r-d)-1;p++){let f=Math.floor(p/2);p%2==0?(s(a[d][f+1]),s(a[d+1][f]),s(a[d][f])):(s(a[d][f+1]),s(a[d+1][f+1]),s(a[d+1][f]))}}(n,i,r,e)})(i),function(e){let t=new nj;for(let n=0;n<r.length;n+=3)t.x=r[n+0],t.y=r[n+1],t.z=r[n+2],t.normalize().multiplyScalar(e),r[n+0]=t.x,r[n+1]=t.y,r[n+2]=t.z}(n),function(){let e=new nj;for(let t=0;t<r.length;t+=3){e.x=r[t+0],e.y=r[t+1],e.z=r[t+2];let n=u(e)/2/Math.PI+.5,i=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;a.push(n,1-i)}(function(){let e=new nj,t=new nj,n=new nj,i=new nj,s=new nN,o=new nN,h=new nN;for(let c=0,d=0;c<r.length;c+=9,d+=6){e.set(r[c+0],r[c+1],r[c+2]),t.set(r[c+3],r[c+4],r[c+5]),n.set(r[c+6],r[c+7],r[c+8]),s.set(a[d+0],a[d+1]),o.set(a[d+2],a[d+3]),h.set(a[d+4],a[d+5]),i.copy(e).add(t).add(n).divideScalar(3);let p=u(i);l(s,d+0,e,p),l(o,d+2,t,p),l(h,d+4,n,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],n=a[e+2],i=a[e+4],r=Math.max(t,n,i),s=Math.min(t,n,i);r>.9&&s<.1&&(t<.2&&(a[e+0]+=1),n<.2&&(a[e+2]+=1),i<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new rl(r,3)),this.setAttribute("normal",new rl(r.slice(),3)),this.setAttribute("uv",new rl(a,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new oQ(e.vertices,e.indices,e.radius,e.details)}}class oK extends oQ{constructor(e=1,t=0){let n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oK(e.radius,e.detail)}}let o$=new nj,o0=new nj,o1=new nj,o3=new iZ;class o2 extends r_{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0===e.isGeometry){console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}let n=Math.cos(nS*t),i=e.getIndex(),r=e.getAttribute("position"),a=i?i.count:r.count,s=[0,0,0],o=["a","b","c"],l=[,,,],u={},h=[];for(let c=0;c<a;c+=3){i?(s[0]=i.getX(c),s[1]=i.getX(c+1),s[2]=i.getX(c+2)):(s[0]=c,s[1]=c+1,s[2]=c+2);let{a:d,b:p,c:f}=o3;if(d.fromBufferAttribute(r,s[0]),p.fromBufferAttribute(r,s[1]),f.fromBufferAttribute(r,s[2]),o3.getNormal(o1),l[0]=`${Math.round(1e4*d.x)},${Math.round(1e4*d.y)},${Math.round(1e4*d.z)}`,l[1]=`${Math.round(1e4*p.x)},${Math.round(1e4*p.y)},${Math.round(1e4*p.z)}`,l[2]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let m=0;m<3;m++){let g=(m+1)%3,v=l[m],y=l[g],x=o3[o[m]],_=o3[o[g]],b=`${v}_${y}`,M=`${y}_${v}`;M in u&&u[M]?(o1.dot(u[M].normal)<=n&&(h.push(x.x,x.y,x.z),h.push(_.x,_.y,_.z)),u[M]=null):b in u||(u[b]={index0:s[m],index1:s[g],normal:o1.clone()})}}for(let w in u)if(u[w]){let{index0:S,index1:T}=u[w];o$.fromBufferAttribute(r,S),o0.fromBufferAttribute(r,T),h.push(o$.x,o$.y,o$.z),h.push(o0.x,o0.y,o0.z)}this.setAttribute("position",new rl(h,3))}}class o4{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)t.push(r+=(n=this.getPoint(a/e)).distanceTo(i)),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let n;let i=this.getLengths(),r=0,a=i.length;n=t||e*i[a-1];let s=0,o=a-1,l;for(;s<=o;)if((l=i[r=Math.floor(s+(o-s)/2)]-n)<0)s=r+1;else if(l>0)o=r-1;else{o=r;break}if(i[r=o]===n)return r/(a-1);let u=i[r],h=i[r+1],c=(r+(n-u)/(h-u))/(a-1);return c}getTangent(e,t){let n=e-1e-4,i=e+1e-4;n<0&&(n=0),i>1&&(i=1);let r=this.getPoint(n),a=this.getPoint(i),s=t||(r.isVector2?new nN:new nj);return s.copy(a).sub(r).normalize(),s}getTangentAt(e,t){let n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){let n=new nj,i=[],r=[],a=[],s=new nj,o=new ip;for(let l=0;l<=e;l++){let u=l/e;i[l]=this.getTangentAt(u,new nj),i[l].normalize()}r[0]=new nj,a[0]=new nj;let h=Number.MAX_VALUE,c=Math.abs(i[0].x),d=Math.abs(i[0].y),p=Math.abs(i[0].z);c<=h&&(h=c,n.set(1,0,0)),d<=h&&(h=d,n.set(0,1,0)),p<=h&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),a[f]=a[f-1].clone(),s.crossVectors(i[f-1],i[f]),s.length()>Number.EPSILON){s.normalize();let m=Math.acos(nA(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(o.makeRotationAxis(s,m))}a[f].crossVectors(i[f],r[f])}if(!0===t){let g=Math.acos(nA(r[0].dot(r[e]),-1,1));g/=e,i[0].dot(s.crossVectors(r[0],r[e]))>0&&(g=-g);for(let v=1;v<=e;v++)r[v].applyMatrix4(o.makeRotationAxis(i[v],g*v)),a[v].crossVectors(i[v],r[v])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class o5 extends o4{constructor(e=0,t=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){let n=t||new nN,i=2*Math.PI,r=this.aEndAngle-this.aStartAngle,a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);let s=this.aStartAngle+e*r,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),c=o-this.aX,d=l-this.aY;o=c*u-d*h+this.aX,l=c*h+d*u+this.aY}return n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}o5.prototype.isEllipseCurve=!0;class o6 extends o5{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.type="ArcCurve"}}function o7(){let e=0,t=0,n=0,i=0;function r(r,a,s,o){e=r,t=s,n=-3*r+3*a-2*s-o,i=2*r-2*a+s+o}return{initCatmullRom:function(e,t,n,i,a){r(t,n,a*(n-e),a*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,a,s,o){let l=(t-e)/a-(n-e)/(a+s)+(n-t)/s,u=(n-t)/s-(i-t)/(s+o)+(i-n)/o;r(t,n,l*=s,u*=s)},calc:function(r){let a=r*r;return e+t*r+n*a+i*(a*r)}}}o6.prototype.isArcCurve=!0;let o8=new nj,o9=new o7,le=new o7,lt=new o7;class ln extends o4{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new nj){let n,i;let r=this.points,a=r.length,s=(a-(this.closed?0:1))*e,o=Math.floor(s),l=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/a)+1)*a:0===l&&o===a-1&&(o=a-2,l=1),this.closed||o>0?n=r[(o-1)%a]:(o8.subVectors(r[0],r[1]).add(r[0]),n=o8);let u=r[o%a],h=r[(o+1)%a];if(this.closed||o+2<a?i=r[(o+2)%a]:(o8.subVectors(r[a-1],r[a-2]).add(r[a-1]),i=o8),"centripetal"===this.curveType||"chordal"===this.curveType){let c="chordal"===this.curveType?.5:.25,d=Math.pow(n.distanceToSquared(u),c),p=Math.pow(u.distanceToSquared(h),c),f=Math.pow(h.distanceToSquared(i),c);p<1e-4&&(p=1),d<1e-4&&(d=p),f<1e-4&&(f=p),o9.initNonuniformCatmullRom(n.x,u.x,h.x,i.x,d,p,f),le.initNonuniformCatmullRom(n.y,u.y,h.y,i.y,d,p,f),lt.initNonuniformCatmullRom(n.z,u.z,h.z,i.z,d,p,f)}else"catmullrom"===this.curveType&&(o9.initCatmullRom(n.x,u.x,h.x,i.x,this.tension),le.initCatmullRom(n.y,u.y,h.y,i.y,this.tension),lt.initCatmullRom(n.z,u.z,h.z,i.z,this.tension));return t.set(o9.calc(l),le.calc(l),lt.calc(l)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){let i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let i=e.points[t];this.points.push(new nj().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function li(e,t,n,i,r){let a=(i-t)*.5,s=(r-n)*.5,o=e*e;return(2*n-2*i+a+s)*(e*o)+(-3*n+3*i-2*a-s)*o+a*e+n}function lr(e,t,n,i){return function(e,t){let n=1-e;return n*n*t}(e,t)+2*(1-e)*e*n+e*e*i}function la(e,t,n,i,r){return function(e,t){let n=1-e;return n*n*n*t}(e,t)+function(e,t){let n=1-e;return 3*n*n*e*t}(e,n)+3*(1-e)*e*e*i+e*e*e*r}ln.prototype.isCatmullRomCurve3=!0;class ls extends o4{constructor(e=new nN,t=new nN,n=new nN,i=new nN){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new nN){let n=this.v0,i=this.v1,r=this.v2,a=this.v3;return t.set(la(e,n.x,i.x,r.x,a.x),la(e,n.y,i.y,r.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ls.prototype.isCubicBezierCurve=!0;class lo extends o4{constructor(e=new nj,t=new nj,n=new nj,i=new nj){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new nj){let n=this.v0,i=this.v1,r=this.v2,a=this.v3;return t.set(la(e,n.x,i.x,r.x,a.x),la(e,n.y,i.y,r.y,a.y),la(e,n.z,i.z,r.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}lo.prototype.isCubicBezierCurve3=!0;class ll extends o4{constructor(e=new nN,t=new nN){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new nN){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){let n=t||new nN;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ll.prototype.isLineCurve=!0;class lu extends o4{constructor(e=new nj,t=new nj){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new nj){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lh extends o4{constructor(e=new nN,t=new nN,n=new nN){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new nN){let n=this.v0,i=this.v1,r=this.v2;return t.set(lr(e,n.x,i.x,r.x),lr(e,n.y,i.y,r.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}lh.prototype.isQuadraticBezierCurve=!0;class lc extends o4{constructor(e=new nj,t=new nj,n=new nj){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new nj){let n=this.v0,i=this.v1,r=this.v2;return t.set(lr(e,n.x,i.x,r.x),lr(e,n.y,i.y,r.y),lr(e,n.z,i.z,r.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}lc.prototype.isQuadraticBezierCurve3=!0;class ld extends o4{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new nN){let n=this.points,i=(n.length-1)*e,r=Math.floor(i),a=i-r,s=n[0===r?r:r-1],o=n[r],l=n[r>n.length-2?n.length-1:r+1],u=n[r>n.length-3?n.length-1:r+2];return t.set(li(a,s.x,o.x,l.x,u.x),li(a,s.y,o.y,l.y,u.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let i=e.points[t];this.points.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){let i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let i=e.points[t];this.points.push(new nN().fromArray(i))}return this}}ld.prototype.isSplineCurve=!0;var lp=Object.freeze({__proto__:null,ArcCurve:o6,CatmullRomCurve3:ln,CubicBezierCurve:ls,CubicBezierCurve3:lo,EllipseCurve:o5,LineCurve:ll,LineCurve3:lu,QuadraticBezierCurve:lh,QuadraticBezierCurve3:lc,SplineCurve:ld});let lf={triangulate:function(e,t,n=2){let i,r,a,s,o,l,u;let h=t&&t.length,c=h?t[0]*n:e.length,d=lm(e,0,c,n,!0),p=[];if(!d||d.next===d.prev)return p;if(h&&(d=function(e,t,n,i){let r,a,s,o,l;let u=[];for(r=0,a=t.length;r<a;r++)s=t[r]*i,o=r<a-1?t[r+1]*i:e.length,(l=lm(e,s,o,i,!1))===l.next&&(l.steiner=!0),u.push(function(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}(l));for(u.sort(lv),r=0;r<u.length;r++)(function(e,t){if(t=function(e,t){let n=t,i=e.x,r=e.y,a=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){let o=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=i&&o>a){if(a=o,o===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!s)return null;if(i===a)return s;let l=s,u=s.x,h=s.y,c=1/0,d;n=s;do{var p,f;i>=n.x&&n.x>=u&&i!==n.x&&lx(r<h?i:a,r,u,h,r<h?a:i,r,n.x,n.y)&&(d=Math.abs(r-n.y)/(i-n.x),lT(n,e)&&(d<c||d===c&&(n.x>s.x||n.x===s.x&&(p=s,f=n,0>l_(p.prev,p,f.prev)&&0>l_(f.next,p,p.next))))&&(s=n,c=d)),n=n.next}while(n!==l);return s}(e,t)){let n=lE(t,e);lg(t,t.next),lg(n,n.next)}})(u[r],n),n=lg(n,n.next);return n}(e,t,d,n)),e.length>80*n){i=a=e[0],r=s=e[1];for(let f=n;f<c;f+=n)o=e[f],l=e[f+1],o<i&&(i=o),l<r&&(r=l),o>a&&(a=o),l>s&&(s=l);u=0!==(u=Math.max(a-i,s-r))?1/u:0}return function e(t,n,i,r,a,s,o){if(!t)return;!o&&s&&function(e,t,n,i){let r=e;do null===r.z&&(r.z=ly(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,n,i,r,a,s,o,l,u=1;do{for(n=e,e=null,a=null,s=0;n;){for(s++,i=n,o=0,t=0;t<u&&(o++,i=i.nextZ);t++);for(l=u;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;n=i}a.nextZ=null,u*=2}while(s>1)}(r)}(t,r,a,s);let l=t,u,h;for(;t.prev!==t.next;){if(u=t.prev,h=t.next,s?function(e,t,n,i){let r=e.prev,a=e.next;if(l_(r,e,a)>=0)return!1;let s=r.x<e.x?r.x<a.x?r.x:a.x:e.x<a.x?e.x:a.x,o=r.y<e.y?r.y<a.y?r.y:a.y:e.y<a.y?e.y:a.y,l=r.x>e.x?r.x>a.x?r.x:a.x:e.x>a.x?e.x:a.x,u=r.y>e.y?r.y>a.y?r.y:a.y:e.y>a.y?e.y:a.y,h=ly(s,o,t,n,i),c=ly(l,u,t,n,i),d=e.prevZ,p=e.nextZ;for(;d&&d.z>=h&&p&&p.z<=c;){if(d!==e.prev&&d!==e.next&&lx(r.x,r.y,e.x,e.y,a.x,a.y,d.x,d.y)&&l_(d.prev,d,d.next)>=0||(d=d.prevZ,p!==e.prev&&p!==e.next&&lx(r.x,r.y,e.x,e.y,a.x,a.y,p.x,p.y)&&l_(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==e.prev&&d!==e.next&&lx(r.x,r.y,e.x,e.y,a.x,a.y,d.x,d.y)&&l_(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=c;){if(p!==e.prev&&p!==e.next&&lx(r.x,r.y,e.x,e.y,a.x,a.y,p.x,p.y)&&l_(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}(t,r,a,s):function(e){let t=e.prev,n=e.next;if(l_(t,e,n)>=0)return!1;let i=e.next.next;for(;i!==e.prev;){if(lx(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)&&l_(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}(t)){n.push(u.i/i),n.push(t.i/i),n.push(h.i/i),lL(t),t=h.next,l=h.next;continue}if((t=h)===l){o?1===o?e(t=function(e,t,n){let i=e;do{let r=i.prev,a=i.next.next;!lb(r,a)&&lM(r,i,i.next,a)&&lT(r,a)&&lT(a,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(a.i/n),lL(i),lL(i.next),i=e=a),i=i.next}while(i!==e);return lg(i)}(lg(t),n,i),n,i,r,a,s,2):2===o&&function(t,n,i,r,a,s){let o=t;do{let l=o.next.next;for(;l!==o.prev;){var u,h;if(o.i!==l.i&&(u=o,h=l,u.next.i!==h.i&&u.prev.i!==h.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&lM(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(u,h)&&(lT(u,h)&&lT(h,u)&&function(e,t){let n=e,i=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==e);return i}(u,h)&&(l_(u.prev,u,h.prev)||l_(u,h.prev,h))||lb(u,h)&&l_(u.prev,u,u.next)>0&&l_(h.prev,h,h.next)>0))){let c=lE(o,l);o=lg(o,o.next),c=lg(c,c.next),e(o,n,i,r,a,s),e(c,n,i,r,a,s);return}l=l.next}o=o.next}while(o!==t)}(t,n,i,r,a,s):e(lg(t),n,i,r,a,s,1);break}}}(d,p,n,i,r,u),p}};function lm(e,t,n,i,r){let a,s;if(r===function(e,t,n,i){let r=0;for(let a=t,s=n-i;a<n;a+=i)r+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return r}(e,t,n,i)>0)for(a=t;a<n;a+=i)s=lA(a,e[a],e[a+1],s);else for(a=n-i;a>=t;a-=i)s=lA(a,e[a],e[a+1],s);return s&&lb(s,s.next)&&(lL(s),s=s.next),s}function lg(e,t){if(!e)return e;t||(t=e);let n=e,i;do if(i=!1,!n.steiner&&(lb(n,n.next)||0===l_(n.prev,n,n.next))){if(lL(n),(n=t=n.prev)===n.next)break;i=!0}else n=n.next;while(i||n!==t);return t}function lv(e,t){return e.x-t.x}function ly(e,t,n,i,r){return(e=((e=((e=((e=((e=32767*(e-n)*r)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=32767*(t-i)*r)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function lx(e,t,n,i,r,a,s,o){return(r-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(i-o)-(n-s)*(t-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function l_(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function lb(e,t){return e.x===t.x&&e.y===t.y}function lM(e,t,n,i){let r=lS(l_(e,t,n)),a=lS(l_(e,t,i)),s=lS(l_(n,i,e)),o=lS(l_(n,i,t));return!!(r!==a&&s!==o||0===r&&lw(e,n,t)||0===a&&lw(e,i,t)||0===s&&lw(n,e,i)||0===o&&lw(n,t,i))}function lw(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function lS(e){return e>0?1:e<0?-1:0}function lT(e,t){return 0>l_(e.prev,e,e.next)?l_(e,t,e.next)>=0&&l_(e,e.prev,t)>=0:0>l_(e,t,e.prev)||0>l_(e,e.next,t)}function lE(e,t){let n=new lR(e.i,e.x,e.y),i=new lR(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function lA(e,t,n,i){let r=new lR(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function lL(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function lR(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class lC{static area(e){let t=e.length,n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return .5*n}static isClockWise(e){return 0>lC.area(e)}static triangulateShape(e,t){let n=[],i=[],r=[];lP(e),lD(n,e);let a=e.length;t.forEach(lP);for(let s=0;s<t.length;s++)i.push(a),a+=t[s].length,lD(n,t[s]);let o=lf.triangulate(n,i);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function lP(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function lD(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class lI extends r_{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let n=this,i=[],r=[];for(let a=0,s=e.length;a<s;a++){let o=e[a];!function(e){let a,s,o,l;let u=[],h=void 0!==t.curveSegments?t.curveSegments:12,c=void 0!==t.steps?t.steps:1,d=void 0!==t.depth?t.depth:100,p=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:6,m=void 0!==t.bevelSize?t.bevelSize:f-2,g=void 0!==t.bevelOffset?t.bevelOffset:0,v=void 0!==t.bevelSegments?t.bevelSegments:3,y=t.extrudePath,x=void 0!==t.UVGenerator?t.UVGenerator:lN;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=t.amount);let _,b=!1;y&&(_=y.getSpacedPoints(c),b=!0,p=!1,a=y.computeFrenetFrames(c,!1),s=new nj,o=new nj,l=new nj),p||(v=0,f=0,m=0,g=0);let M=e.extractPoints(h),w=M.shape,S=M.holes,T=!lC.isClockWise(w);if(T){w=w.reverse();for(let E=0,A=S.length;E<A;E++){let L=S[E];lC.isClockWise(L)&&(S[E]=L.reverse())}}let R=lC.triangulateShape(w,S),C=w;for(let P=0,D=S.length;P<D;P++){let I=S[P];w=w.concat(I)}function N(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}let B=w.length,z=R.length;function F(e,t,n){let i,r,a;let s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,u=n.y-e.y,h=s*s+o*o;if(Math.abs(s*u-o*l)>Number.EPSILON){let c=Math.sqrt(h),d=Math.sqrt(l*l+u*u),p=t.x-o/c,f=t.y+s/c,m=n.x-u/d,g=n.y+l/d,v=((m-p)*u-(g-f)*l)/(s*u-o*l);i=p+s*v-e.x,r=f+o*v-e.y;let y=i*i+r*r;if(y<=2)return new nN(i,r);a=Math.sqrt(y/2)}else{let x=!1;s>Number.EPSILON?l>Number.EPSILON&&(x=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(x=!0):Math.sign(o)===Math.sign(u)&&(x=!0),x?(i=-o,r=s,a=Math.sqrt(h)):(i=s,r=o,a=Math.sqrt(h/2))}return new nN(i/a,r/a)}let O=[];for(let H=0,U=C.length,G=U-1,k=H+1;H<U;H++,G++,k++)G===U&&(G=0),k===U&&(k=0),O[H]=F(C[H],C[G],C[k]);let V=[],W,j=O.concat();for(let q=0,X=S.length;q<X;q++){let Y=S[q];W=[];for(let J=0,Z=Y.length,Q=Z-1,K=J+1;J<Z;J++,Q++,K++)Q===Z&&(Q=0),K===Z&&(K=0),W[J]=F(Y[J],Y[Q],Y[K]);V.push(W),j=j.concat(W)}for(let $=0;$<v;$++){let ee=$/v,et=f*Math.cos(ee*Math.PI/2),en=m*Math.sin(ee*Math.PI/2)+g;for(let ei=0,er=C.length;ei<er;ei++){let ea=N(C[ei],O[ei],en);eD(ea.x,ea.y,-et)}for(let es=0,eo=S.length;es<eo;es++){let el=S[es];W=V[es];for(let eu=0,eh=el.length;eu<eh;eu++){let ec=N(el[eu],W[eu],en);eD(ec.x,ec.y,-et)}}}let ed=m+g;for(let ep=0;ep<B;ep++){let ef=p?N(w[ep],j[ep],ed):w[ep];b?(o.copy(a.normals[0]).multiplyScalar(ef.x),s.copy(a.binormals[0]).multiplyScalar(ef.y),l.copy(_[0]).add(o).add(s),eD(l.x,l.y,l.z)):eD(ef.x,ef.y,0)}for(let em=1;em<=c;em++)for(let eg=0;eg<B;eg++){let ev=p?N(w[eg],j[eg],ed):w[eg];b?(o.copy(a.normals[em]).multiplyScalar(ev.x),s.copy(a.binormals[em]).multiplyScalar(ev.y),l.copy(_[em]).add(o).add(s),eD(l.x,l.y,l.z)):eD(ev.x,ev.y,d/c*em)}for(let ey=v-1;ey>=0;ey--){let ex=ey/v,e_=f*Math.cos(ex*Math.PI/2),eb=m*Math.sin(ex*Math.PI/2)+g;for(let eM=0,ew=C.length;eM<ew;eM++){let eS=N(C[eM],O[eM],eb);eD(eS.x,eS.y,d+e_)}for(let eT=0,eE=S.length;eT<eE;eT++){let eA=S[eT];W=V[eT];for(let eL=0,eR=eA.length;eL<eR;eL++){let eC=N(eA[eL],W[eL],eb);b?eD(eC.x,eC.y+_[c-1].y,_[c-1].x+e_):eD(eC.x,eC.y,d+e_)}}}function eP(e,t){let r=e.length;for(;--r>=0;){let a=r,s=r-1;s<0&&(s=e.length-1);for(let o=0,l=c+2*v;o<l;o++){let u=B*o,h=B*(o+1),d=t+a+u,p=t+s+u,f=t+s+h,m=t+a+h;!function(e,t,r,a){eN(e),eN(t),eN(a),eN(t),eN(r),eN(a);let s=i.length/3,o=x.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);eB(o[0]),eB(o[1]),eB(o[3]),eB(o[1]),eB(o[2]),eB(o[3])}(d,p,f,m)}}}function eD(e,t,n){u.push(e),u.push(t),u.push(n)}function eI(e,t,r){eN(e),eN(t),eN(r);let a=i.length/3,s=x.generateTopUV(n,i,a-3,a-2,a-1);eB(s[0]),eB(s[1]),eB(s[2])}function eN(e){i.push(u[3*e+0]),i.push(u[3*e+1]),i.push(u[3*e+2])}function eB(e){r.push(e.x),r.push(e.y)}(function(){let e=i.length/3;if(p){let t=0*B;for(let r=0;r<z;r++){let a=R[r];eI(a[2]+t,a[1]+t,a[0]+t)}t=B*(c+2*v);for(let s=0;s<z;s++){let o=R[s];eI(o[0]+t,o[1]+t,o[2]+t)}}else{for(let l=0;l<z;l++){let u=R[l];eI(u[2],u[1],u[0])}for(let h=0;h<z;h++){let d=R[h];eI(d[0]+B*c,d[1]+B*c,d[2]+B*c)}}n.addGroup(e,i.length/3-e,0)})(),function(){let e=i.length/3,t=0;eP(C,0),t+=C.length;for(let r=0,a=S.length;r<a;r++){let s=S[r];eP(s,t),t+=s.length}n.addGroup(e,i.length/3-e,1)}()}(o)}this.setAttribute("position",new rl(i,3)),this.setAttribute("uv",new rl(r,2)),this.computeVertexNormals()}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){let a=e[i];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(t,n,e)}static fromJSON(e,t){let n=[];for(let i=0,r=e.shapes.length;i<r;i++){let a=t[e.shapes[i]];n.push(a)}let s=e.options.extrudePath;return void 0!==s&&(e.options.extrudePath=new lp[s.type]().fromJSON(s)),new lI(n,e.options)}}let lN={generateTopUV:function(e,t,n,i,r){let a=t[3*n],s=t[3*n+1],o=t[3*i],l=t[3*i+1],u=t[3*r],h=t[3*r+1];return[new nN(a,s),new nN(o,l),new nN(u,h)]},generateSideWallUV:function(e,t,n,i,r,a){let s=t[3*n],o=t[3*n+1],l=t[3*n+2],u=t[3*i],h=t[3*i+1],c=t[3*i+2],d=t[3*r],p=t[3*r+1],f=t[3*r+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(o-h)<Math.abs(s-u)?[new nN(s,1-l),new nN(u,1-c),new nN(d,1-f),new nN(m,1-v)]:[new nN(o,1-l),new nN(h,1-c),new nN(p,1-f),new nN(g,1-v)]}};class lB extends oQ{constructor(e=1,t=0){let n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lB(e.radius,e.detail)}}class lz extends r_{constructor(e,t=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=nA(i,0,2*Math.PI);let r=[],a=[],s=[],o=1/t,l=new nj,u=new nN;for(let h=0;h<=t;h++){let c=n+h*o*i,d=Math.sin(c),p=Math.cos(c);for(let f=0;f<=e.length-1;f++)l.x=e[f].x*d,l.y=e[f].y,l.z=e[f].x*p,a.push(l.x,l.y,l.z),u.x=h/t,u.y=f/(e.length-1),s.push(u.x,u.y)}for(let m=0;m<t;m++)for(let g=0;g<e.length-1;g++){let v=g+m*e.length,y=v+e.length,x=v+e.length+1,_=v+1;r.push(v,y,_),r.push(y,x,_)}if(this.setIndex(r),this.setAttribute("position",new rl(a,3)),this.setAttribute("uv",new rl(s,2)),this.computeVertexNormals(),i===2*Math.PI){let b=this.attributes.normal.array,M=new nj,w=new nj,S=new nj,T=t*e.length*3;for(let E=0,A=0;E<e.length;E++,A+=3)M.x=b[A+0],M.y=b[A+1],M.z=b[A+2],w.x=b[T+A+0],w.y=b[T+A+1],w.z=b[T+A+2],S.addVectors(M,w).normalize(),b[A+0]=b[T+A+0]=S.x,b[A+1]=b[T+A+1]=S.y,b[A+2]=b[T+A+2]=S.z}}static fromJSON(e){return new lz(e.points,e.segments,e.phiStart,e.phiLength)}}class lF extends oQ{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lF(e.radius,e.detail)}}class lO extends r_{constructor(e,t,n){super(),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n};let i=[],r=[],a=[],s=[],o=new nj,l=new nj,u=new nj,h=new nj,c=new nj;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");let d=t+1;for(let p=0;p<=n;p++){let f=p/n;for(let m=0;m<=t;m++){let g=m/t;e(g,f,l),r.push(l.x,l.y,l.z),g-1e-5>=0?(e(g-1e-5,f,u),h.subVectors(l,u)):(e(g+1e-5,f,u),h.subVectors(u,l)),f-1e-5>=0?(e(g,f-1e-5,u),c.subVectors(l,u)):(e(g,f+1e-5,u),c.subVectors(u,l)),o.crossVectors(h,c).normalize(),a.push(o.x,o.y,o.z),s.push(g,f)}}for(let v=0;v<n;v++)for(let y=0;y<t;y++){let x=v*d+y,_=v*d+y+1,b=(v+1)*d+y+1,M=(v+1)*d+y;i.push(x,_,M),i.push(_,b,M)}this.setIndex(i),this.setAttribute("position",new rl(r,3)),this.setAttribute("normal",new rl(a,3)),this.setAttribute("uv",new rl(s,2))}}class lH extends r_{constructor(e=.5,t=1,n=8,i=1,r=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);let s=[],o=[],l=[],u=[],h=e,c=(t-e)/i,d=new nj,p=new nN;for(let f=0;f<=i;f++){for(let m=0;m<=n;m++){let g=r+m/n*a;d.x=h*Math.cos(g),d.y=h*Math.sin(g),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=c}for(let v=0;v<i;v++){let y=v*(n+1);for(let x=0;x<n;x++){let _=x+y,b=_+n+1,M=_+n+2,w=_+1;s.push(_,b,w),s.push(b,M,w)}}this.setIndex(s),this.setAttribute("position",new rl(o,3)),this.setAttribute("normal",new rl(l,3)),this.setAttribute("uv",new rl(u,2))}static fromJSON(e){return new lH(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class lU extends r_{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let n=[],i=[],r=[],a=[],s=0,o=0;if(!1===Array.isArray(e))u(e);else for(let l=0;l<e.length;l++)u(e[l]),this.addGroup(s,o,l),s+=o,o=0;function u(e){let s=i.length/3,l=e.extractPoints(t),u=l.shape,h=l.holes;!1===lC.isClockWise(u)&&(u=u.reverse());for(let c=0,d=h.length;c<d;c++){let p=h[c];!0===lC.isClockWise(p)&&(h[c]=p.reverse())}let f=lC.triangulateShape(u,h);for(let m=0,g=h.length;m<g;m++){let v=h[m];u=u.concat(v)}for(let y=0,x=u.length;y<x;y++){let _=u[y];i.push(_.x,_.y,0),r.push(0,0,1),a.push(_.x,_.y)}for(let b=0,M=f.length;b<M;b++){let w=f[b],S=w[0]+s,T=w[1]+s,E=w[2]+s;n.push(S,T,E),o+=3}}this.setIndex(n),this.setAttribute("position",new rl(i,3)),this.setAttribute("normal",new rl(r,3)),this.setAttribute("uv",new rl(a,2))}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){let r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(t,e)}static fromJSON(e,t){let n=[];for(let i=0,r=e.shapes.length;i<r;i++){let a=t[e.shapes[i]];n.push(a)}return new lU(n,e.curveSegments)}}class lG extends r_{constructor(e=1,t=8,n=6,i=0,r=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));let o=Math.min(a+s,Math.PI),l=0,u=[],h=new nj,c=new nj,d=[],p=[],f=[],m=[];for(let g=0;g<=n;g++){let v=[],y=g/n,x=0;0==g&&0==a?x=.5/t:g==n&&o==Math.PI&&(x=-.5/t);for(let _=0;_<=t;_++){let b=_/t;h.x=-e*Math.cos(i+b*r)*Math.sin(a+y*s),h.y=e*Math.cos(a+y*s),h.z=e*Math.sin(i+b*r)*Math.sin(a+y*s),p.push(h.x,h.y,h.z),c.copy(h).normalize(),f.push(c.x,c.y,c.z),m.push(b+x,1-y),v.push(l++)}u.push(v)}for(let M=0;M<n;M++)for(let w=0;w<t;w++){let S=u[M][w+1],T=u[M][w],E=u[M+1][w],A=u[M+1][w+1];(0!==M||a>0)&&d.push(S,T,A),(M!==n-1||o<Math.PI)&&d.push(T,E,A)}this.setIndex(d),this.setAttribute("position",new rl(p,3)),this.setAttribute("normal",new rl(f,3)),this.setAttribute("uv",new rl(m,2))}static fromJSON(e){return new lG(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class lk extends oQ{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lk(e.radius,e.detail)}}class lV extends lI{constructor(e,t={}){let n=t.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new r_;let i=n.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(i,t),this.type="TextGeometry"}}class lW extends r_{constructor(e=1,t=.4,n=8,i=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);let a=[],s=[],o=[],l=[],u=new nj,h=new nj,c=new nj;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){let f=p/i*r,m=d/n*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(f),h.y=(e+t*Math.cos(m))*Math.sin(f),h.z=t*Math.sin(m),s.push(h.x,h.y,h.z),u.x=e*Math.cos(f),u.y=e*Math.sin(f),c.subVectors(h,u).normalize(),o.push(c.x,c.y,c.z),l.push(p/i),l.push(d/n)}for(let g=1;g<=n;g++)for(let v=1;v<=i;v++){let y=(i+1)*g+v-1,x=(i+1)*(g-1)+v-1,_=(i+1)*(g-1)+v,b=(i+1)*g+v;a.push(y,x,b),a.push(x,_,b)}this.setIndex(a),this.setAttribute("position",new rl(s,3)),this.setAttribute("normal",new rl(o,3)),this.setAttribute("uv",new rl(l,2))}static fromJSON(e){return new lW(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class lj extends r_{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);let s=[],o=[],l=[],u=[],h=new nj,c=new nj,d=new nj,p=new nj,f=new nj,m=new nj,g=new nj;for(let v=0;v<=n;++v){let y=v/n*r*Math.PI*2;R(y,r,a,e,d),R(y+.01,r,a,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let x=0;x<=i;++x){let _=x/i*Math.PI*2,b=-t*Math.cos(_),M=t*Math.sin(_);h.x=d.x+(b*g.x+M*f.x),h.y=d.y+(b*g.y+M*f.y),h.z=d.z+(b*g.z+M*f.z),o.push(h.x,h.y,h.z),c.subVectors(h,d).normalize(),l.push(c.x,c.y,c.z),u.push(v/n),u.push(x/i)}}for(let w=1;w<=n;w++)for(let S=1;S<=i;S++){let T=(i+1)*(w-1)+(S-1),E=(i+1)*w+(S-1),A=(i+1)*w+S,L=(i+1)*(w-1)+S;s.push(T,E,L),s.push(E,A,L)}function R(e,t,n,i,r){let a=n/t*e,s=Math.cos(a);r.x=i*(2+s)*.5*Math.cos(e),r.y=i*(2+s)*Math.sin(e)*.5,r.z=i*Math.sin(a)*.5}this.setIndex(s),this.setAttribute("position",new rl(o,3)),this.setAttribute("normal",new rl(l,3)),this.setAttribute("uv",new rl(u,2))}static fromJSON(e){return new lj(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class lq extends r_{constructor(e,t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};let a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new nj,o=new nj,l=new nN,u=new nj,h=[],c=[],d=[],p=[];function f(r){u=e.getPointAt(r/t,u);let l=a.normals[r],d=a.binormals[r];for(let p=0;p<=i;p++){let f=p/i*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);o.x=g*l.x+m*d.x,o.y=g*l.y+m*d.y,o.z=g*l.z+m*d.z,o.normalize(),c.push(o.x,o.y,o.z),s.x=u.x+n*o.x,s.y=u.y+n*o.y,s.z=u.z+n*o.z,h.push(s.x,s.y,s.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let n=0;n<=i;n++)l.x=e/t,l.y=n/i,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let n=1;n<=i;n++){let r=(i+1)*(e-1)+(n-1),a=(i+1)*e+(n-1),s=(i+1)*e+n,o=(i+1)*(e-1)+n;p.push(r,a,o),p.push(a,s,o)}}()})(),this.setIndex(p),this.setAttribute("position",new rl(h,3)),this.setAttribute("normal",new rl(c,3)),this.setAttribute("uv",new rl(d,2))}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new lq(new lp[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class lX extends r_{constructor(e){if(super(),this.type="WireframeGeometry",!0===e.isGeometry){console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}let t=[],n=[0,0],i={},r=new nj;if(null!==e.index){let a=e.attributes.position,s=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let l=0,u=o.length;l<u;++l){let h=o[l],c=h.start,d=h.count;for(let p=c,f=c+d;p<f;p+=3)for(let m=0;m<3;m++){let g=s.getX(p+m),v=s.getX(p+(m+1)%3);n[0]=Math.min(g,v),n[1]=Math.max(g,v);let y=n[0]+","+n[1];void 0===i[y]&&(i[y]={index1:n[0],index2:n[1]})}}for(let x in i){let _=i[x];r.fromBufferAttribute(a,_.index1),t.push(r.x,r.y,r.z),r.fromBufferAttribute(a,_.index2),t.push(r.x,r.y,r.z)}}else{let b=e.attributes.position;for(let M=0,w=b.count/3;M<w;M++)for(let S=0;S<3;S++){let T=3*M+S;r.fromBufferAttribute(b,T),t.push(r.x,r.y,r.z);let E=3*M+(S+1)%3;r.fromBufferAttribute(b,E),t.push(r.x,r.y,r.z)}}this.setAttribute("position",new rl(t,3))}}var lY=Object.freeze({__proto__:null,BoxGeometry:rU,BoxBufferGeometry:rU,CircleGeometry:oY,CircleBufferGeometry:oY,ConeGeometry:oZ,ConeBufferGeometry:oZ,CylinderGeometry:oJ,CylinderBufferGeometry:oJ,DodecahedronGeometry:oK,DodecahedronBufferGeometry:oK,EdgesGeometry:o2,ExtrudeGeometry:lI,ExtrudeBufferGeometry:lI,IcosahedronGeometry:lB,IcosahedronBufferGeometry:lB,LatheGeometry:lz,LatheBufferGeometry:lz,OctahedronGeometry:lF,OctahedronBufferGeometry:lF,ParametricGeometry:lO,ParametricBufferGeometry:lO,PlaneGeometry:r5,PlaneBufferGeometry:r5,PolyhedronGeometry:oQ,PolyhedronBufferGeometry:oQ,RingGeometry:lH,RingBufferGeometry:lH,ShapeGeometry:lU,ShapeBufferGeometry:lU,SphereGeometry:lG,SphereBufferGeometry:lG,TetrahedronGeometry:lk,TetrahedronBufferGeometry:lk,TextGeometry:lV,TextBufferGeometry:lV,TorusGeometry:lW,TorusBufferGeometry:lW,TorusKnotGeometry:lj,TorusKnotBufferGeometry:lj,TubeGeometry:lq,TubeBufferGeometry:lq,WireframeGeometry:lX});class lJ extends iK{constructor(e){super(),this.type="ShadowMaterial",this.color=new i5(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}lJ.prototype.isShadowMaterial=!0;class lZ extends rW{constructor(e){super(e),this.type="RawShaderMaterial"}}lZ.prototype.isRawShaderMaterial=!0;class lQ extends iK{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new i5(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new i5(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t1,this.normalScale=new nN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}lQ.prototype.isMeshStandardMaterial=!0;class lK extends lQ{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new nN(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=nA(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new i5(1,1,1),this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new i5).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this}}lK.prototype.isMeshPhysicalMaterial=!0;class l$ extends iK{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new i5(16777215),this.specular=new i5(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new i5(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t1,this.normalScale=new nN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ee,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}l$.prototype.isMeshPhongMaterial=!0;class l0 extends iK{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new i5(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new i5(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t1,this.normalScale=new nN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}l0.prototype.isMeshToonMaterial=!0;class l1 extends iK{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t1,this.normalScale=new nN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}l1.prototype.isMeshNormalMaterial=!0;class l3 extends iK{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new i5(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new i5(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ee,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}l3.prototype.isMeshLambertMaterial=!0;class l2 extends iK{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new i5(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=t1,this.normalScale=new nN(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}l2.prototype.isMeshMatcapMaterial=!0;class l4 extends oE{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}l4.prototype.isLineDashedMaterial=!0;var l5=Object.freeze({__proto__:null,ShadowMaterial:lJ,SpriteMaterial:s3,RawShaderMaterial:lZ,ShaderMaterial:rW,PointsMaterial:oF,MeshPhysicalMaterial:lK,MeshStandardMaterial:lQ,MeshPhongMaterial:l$,MeshToonMaterial:l0,MeshNormalMaterial:l1,MeshLambertMaterial:l3,MeshDepthMaterial:sz,MeshDistanceMaterial:sF,MeshBasicMaterial:i6,MeshMatcapMaterial:l2,LineDashedMaterial:l4,LineBasicMaterial:oE,Material:iK});let l6={arraySlice:function(e,t,n){return l6.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return e&&(n||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){let t=e.length,n=Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(function(t,n){return e[t]-e[n]}),n},sortedArray:function(e,t,n){let i=e.length,r=new e.constructor(i);for(let a=0,s=0;s!==i;++a){let o=n[a]*t;for(let l=0;l!==t;++l)r[s++]=e[o+l]}return r},flattenJSON:function(e,t,n,i){let r=1,a=e[0];for(;void 0!==a&&void 0===a[i];)a=e[r++];if(void 0===a)return;let s=a[i];if(void 0!==s){if(Array.isArray(s))do void 0!==(s=a[i])&&(t.push(a.time),n.push.apply(n,s)),a=e[r++];while(void 0!==a);else if(void 0!==s.toArray)do void 0!==(s=a[i])&&(t.push(a.time),s.toArray(n,n.length)),a=e[r++];while(void 0!==a);else do void 0!==(s=a[i])&&(t.push(a.time),n.push(s)),a=e[r++];while(void 0!==a)}},subclip:function(e,t,n,i,r=30){let a=e.clone();a.name=t;let s=[];for(let o=0;o<a.tracks.length;++o){let l=a.tracks[o],u=l.getValueSize(),h=[],c=[];for(let d=0;d<l.times.length;++d){let p=l.times[d]*r;if(!(p<n)&&!(p>=i)){h.push(l.times[d]);for(let f=0;f<u;++f)c.push(l.values[d*u+f])}}0!==h.length&&(l.times=l6.convertArray(h,l.times.constructor),l.values=l6.convertArray(c,l.values.constructor),s.push(l))}a.tracks=s;let m=1/0;for(let g=0;g<a.tracks.length;++g)m>a.tracks[g].times[0]&&(m=a.tracks[g].times[0]);for(let v=0;v<a.tracks.length;++v)a.tracks[v].shift(-1*m);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,n=e,i=30){i<=0&&(i=30);let r=n.tracks.length,a=t/i;for(let s=0;s<r;++s){let o;let l=n.tracks[s],u=l.ValueTypeName;if("bool"===u||"string"===u)continue;let h=e.tracks.find(function(e){return e.name===l.name&&e.ValueTypeName===u});if(void 0===h)continue;let c=0,d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=d/3);let p=0,f=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=f/3);let m=l.times.length-1;if(a<=l.times[0]){let g=c,v=d-c;o=l6.arraySlice(l.values,g,v)}else if(a>=l.times[m]){let y=m*d+c,x=y+d-c;o=l6.arraySlice(l.values,y,x)}else{let _=l.createInterpolant(),b=c,M=d-c;_.evaluate(a),o=l6.arraySlice(_.resultBuffer,b,M)}if("quaternion"===u){let w=new nW().fromArray(o).normalize().conjugate();w.toArray(o)}let S=h.times.length;for(let T=0;T<S;++T){let E=T*f+p;if("quaternion"===u)nW.multiplyQuaternionsFlat(h.values,E,o,0,h.values,E);else{let A=f-2*p;for(let L=0;L<A;++L)h.values[E+L]-=o[L]}}}return e.blendMode=tG,e}};class l7{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let s=n+2;;){if(void 0===i){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===s)break;if(r=i,e<(i=t[++n]))break t}a=t.length;break n}if(!(e>=r)){let o=t[1];e<o&&(n=2,r=o);for(let l=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===l)break;if(i=r,e>=(r=t[--n-1]))break t}a=n,n=0;break n}break e}for(;n<a;){let u=n+a>>>1;e<t[u]?a=u:n=u+1}if(i=t[n],void 0===(r=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,i);if(void 0===i)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}l7.prototype.beforeStart_=l7.prototype.copySampleValue_,l7.prototype.afterEnd_=l7.prototype.copySampleValue_;class l8 extends l7{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:tF,endingEnd:tF}}intervalChanged_(e,t,n){let i=this.parameterPositions,r=e-2,a=e+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case tO:r=e,s=2*t-n;break;case tH:s=t+i[r=i.length-2]-i[r+1];break;default:r=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case tO:a=e,o=2*n-t;break;case tH:a=1,o=n+i[1]-i[0];break;default:a=e-1,o=t}let l=(n-t)*.5,u=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=r*u,this._offsetNext=a*u}interpolate_(e,t,n,i){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,u=this._offsetPrev,h=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,v=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let _=0;_!==s;++_)r[_]=g*a[u+_]+v*a[l+_]+y*a[o+_]+x*a[h+_];return r}}class l9 extends l7{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,u=(n-t)/(i-t),h=1-u;for(let c=0;c!==s;++c)r[c]=a[l+c]*h+a[o+c]*u;return r}}class ue extends l7{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ut{constructor(e,t,n,i){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=l6.convertArray(t,this.TimeBufferType),this.values=l6.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){let t;let n=e.constructor;if(n.toJSON!==this.toJSON)t=n.toJSON(e);else{t={name:e.name,times:l6.convertArray(e.times,Array),values:l6.convertArray(e.values,Array)};let i=e.getInterpolation();i!==e.DefaultInterpolation&&(t.interpolation=i)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new ue(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new l9(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new l8(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case tN:t=this.InterpolantFactoryMethodDiscrete;break;case tB:t=this.InterpolantFactoryMethodLinear;break;case tz:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(n)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return tN;case this.InterpolantFactoryMethodLinear:return tB;case this.InterpolantFactoryMethodSmooth:return tz}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){let n=this.times,i=n.length,r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==r||a!==i){r>=a&&(r=(a=Math.max(a,1))-1);let s=this.getValueSize();this.times=l6.arraySlice(n,r,a),this.values=l6.arraySlice(this.values,r*s,a*s)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let s=0;s!==r;s++){let o=n[s];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,o),e=!1;break}if(null!==a&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,o,a),e=!1;break}a=o}if(void 0!==i&&l6.isTypedArray(i))for(let l=0,u=i.length;l!==u;++l){let h=i[l];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,h),e=!1;break}}return e}optimize(){let e=l6.arraySlice(this.times),t=l6.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===tz,r=e.length-1,a=1;for(let s=1;s<r;++s){let o=!1,l=e[s],u=e[s+1];if(l!==u&&(1!==s||l!==e[0])){if(i)o=!0;else{let h=s*n,c=h-n,d=h+n;for(let p=0;p!==n;++p){let f=t[h+p];if(f!==t[c+p]||f!==t[d+p]){o=!0;break}}}}if(o){if(s!==a){e[a]=e[s];let m=s*n,g=a*n;for(let v=0;v!==n;++v)t[g+v]=t[m+v]}++a}}if(r>0){e[a]=e[r];for(let y=r*n,x=a*n,_=0;_!==n;++_)t[x+_]=t[y+_];++a}return a!==e.length?(this.times=l6.arraySlice(e,0,a),this.values=l6.arraySlice(t,0,a*n)):(this.times=e,this.values=t),this}clone(){let e=l6.arraySlice(this.times,0),t=l6.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}ut.prototype.TimeBufferType=Float32Array,ut.prototype.ValueBufferType=Float32Array,ut.prototype.DefaultInterpolation=tB;class un extends ut{}un.prototype.ValueTypeName="bool",un.prototype.ValueBufferType=Array,un.prototype.DefaultInterpolation=tN,un.prototype.InterpolantFactoryMethodLinear=void 0,un.prototype.InterpolantFactoryMethodSmooth=void 0;class ui extends ut{}ui.prototype.ValueTypeName="color";class ur extends ut{}ur.prototype.ValueTypeName="number";class ua extends l7{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(i-t),l=e*s;for(let u=l+s;l!==u;l+=4)nW.slerpFlat(r,0,a,l-s,a,l,o);return r}}class us extends ut{InterpolantFactoryMethodLinear(e){return new ua(this.times,this.values,this.getValueSize(),e)}}us.prototype.ValueTypeName="quaternion",us.prototype.DefaultInterpolation=tB,us.prototype.InterpolantFactoryMethodSmooth=void 0;class uo extends ut{}uo.prototype.ValueTypeName="string",uo.prototype.ValueBufferType=Array,uo.prototype.DefaultInterpolation=tN,uo.prototype.InterpolantFactoryMethodLinear=void 0,uo.prototype.InterpolantFactoryMethodSmooth=void 0;class ul extends ut{}ul.prototype.ValueTypeName="vector";class uu{constructor(e,t=-1,n,i=tU){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=nE(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,a=n.length;r!==a;++r)t.push((function(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ur;case"vector":case"vector2":case"vector3":case"vector4":return ul;case"color":return ui;case"quaternion":return us;case"bool":case"boolean":return un;case"string":return uo}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let n=[],i=[];l6.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)})(n[r]).scale(i));let s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){let t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(ut.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){let r=t.length,a=[];for(let s=0;s<r;s++){let o=[],l=[];o.push((s+r-1)%r,s,(s+1)%r),l.push(0,1,0);let u=l6.getKeyframeOrder(o);o=l6.sortedArray(o,1,u),l=l6.sortedArray(l,1,u),i||0!==o[0]||(o.push(r),l.push(l[0])),a.push(new ur(".morphTargetInfluences["+t[s].name+"]",o,l).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;Array.isArray(e)||(n=e.geometry&&e.geometry.animations||e.animations);for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){let i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.name.match(r);if(l&&l.length>1){let u=l[1],h=i[u];h||(i[u]=h=[]),h.push(o)}}let c=[];for(let d in i)c.push(this.CreateFromMorphTargetSequence(d,i[d],t,n));return c}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let n=function(e,t,n,i,r){if(0!==n.length){let a=[],s=[];l6.flattenJSON(n,a,s,i),0!==a.length&&r.push(new e(t,a,s))}},i=[],r=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let u=0;u<l.length;u++){let h=l[u].keys;if(h&&0!==h.length){if(h[0].morphTargets){let c;let d={};for(c=0;c<h.length;c++)if(h[c].morphTargets)for(let p=0;p<h[c].morphTargets.length;p++)d[h[c].morphTargets[p]]=-1;for(let f in d){let m=[],g=[];for(let v=0;v!==h[c].morphTargets.length;++v){let y=h[c];m.push(y.time),g.push(y.morphTarget===f?1:0)}i.push(new ur(".morphTargetInfluence["+f+"]",m,g))}o=d.length*(a||1)}else{let x=".bones["+t[u].name+"]";n(ul,x+".position",h,"pos",i),n(us,x+".quaternion",h,"rot",i),n(ul,x+".scale",h,"scl",i)}}}if(0===i.length)return null;let _=new this(r,o,i,s);return _}resetDuration(){let e=this.tracks,t=0;for(let n=0,i=e.length;n!==i;++n){let r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}let uh={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class uc{constructor(e,t,n){let i;let r=this,a=!1,s=0,o=0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===a&&void 0!==r.onStart&&r.onStart(e,s,o),a=!0},this.itemEnd=function(e){s++,void 0!==r.onProgress&&r.onProgress(e,s,o),s===o&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){let i=l[t],r=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return r}return null}}}let ud=new uc;class up{constructor(e){this.manager=void 0!==e?e:ud,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}let uf={};class um extends up{constructor(e){super(e)}load(e,t,n,i){let r;void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let a=this,s=uh.get(e);if(void 0!==s)return a.manager.itemStart(e),setTimeout(function(){t&&t(s),a.manager.itemEnd(e)},0),s;if(void 0!==uf[e]){uf[e].push({onLoad:t,onProgress:n,onError:i});return}let o=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){let l=o[1],u=!!o[2],h=o[3];h=decodeURIComponent(h),u&&(h=atob(h));try{let c;let d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":let p=new Uint8Array(h.length);for(let f=0;f<h.length;f++)p[f]=h.charCodeAt(f);c="blob"===d?new Blob([p.buffer],{type:l}):p.buffer;break;case"document":let m=new DOMParser;c=m.parseFromString(h,l);break;case"json":c=JSON.parse(h);break;default:c=h}setTimeout(function(){t&&t(c),a.manager.itemEnd(e)},0)}catch(g){setTimeout(function(){i&&i(g),a.manager.itemError(e),a.manager.itemEnd(e)},0)}}else{for(let v in uf[e]=[],uf[e].push({onLoad:t,onProgress:n,onError:i}),(r=new XMLHttpRequest).open("GET",e,!0),r.addEventListener("load",function(t){let n=this.response,i=uf[e];if(delete uf[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),uh.add(e,n);for(let r=0,s=i.length;r<s;r++){let o=i[r];o.onLoad&&o.onLoad(n)}a.manager.itemEnd(e)}else{for(let l=0,u=i.length;l<u;l++){let h=i[l];h.onError&&h.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)}},!1),r.addEventListener("progress",function(t){let n=uf[e];for(let i=0,r=n.length;i<r;i++){let a=n[i];a.onProgress&&a.onProgress(t)}},!1),r.addEventListener("error",function(t){let n=uf[e];delete uf[e];for(let i=0,r=n.length;i<r;i++){let s=n[i];s.onError&&s.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)},!1),r.addEventListener("abort",function(t){let n=uf[e];delete uf[e];for(let i=0,r=n.length;i<r;i++){let s=n[i];s.onError&&s.onError(t)}a.manager.itemError(e),a.manager.itemEnd(e)},!1),void 0!==this.responseType&&(r.responseType=this.responseType),void 0!==this.withCredentials&&(r.withCredentials=this.withCredentials),r.overrideMimeType&&r.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)r.setRequestHeader(v,this.requestHeader[v]);r.send(null)}return a.manager.itemStart(e),r}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ug extends up{constructor(e){super(e)}load(e,t,n,i){let r=this,a=new um(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}parse(e){let t=[];for(let n=0;n<e.length;n++){let i=uu.parse(e[n]);t.push(i)}return t}}class uv extends up{constructor(e){super(e)}load(e,t,n,i){let r=this,a=[],s=new oj,o=new um(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;if(Array.isArray(e))for(let u=0,h=e.length;u<h;++u)!function(u){o.load(e[u],function(e){let n=r.parse(e,!0);a[u]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(l+=1)&&(1===n.mipmapCount&&(s.minFilter=eS),s.image=a,s.format=n.format,s.needsUpdate=!0,t&&t(s))},n,i)}(u);else o.load(e,function(e){let n=r.parse(e,!0);if(n.isCubemap){let i=n.mipmaps.length/n.mipmapCount;for(let o=0;o<i;o++){a[o]={mipmaps:[]};for(let l=0;l<n.mipmapCount;l++)a[o].mipmaps.push(n.mipmaps[o*n.mipmapCount+l]),a[o].format=n.format,a[o].width=n.width,a[o].height=n.height}s.image=a}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=eS),s.format=n.format,s.needsUpdate=!0,t&&t(s)},n,i);return s}}class uy extends up{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=uh.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),uh.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(e),s.src=e,s}}class ux extends up{constructor(e){super(e)}load(e,t,n,i){let r=new rY,a=new uy(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;for(let o=0;o<e.length;++o)!function(n){a.load(e[n],function(e){r.images[n]=e,6==++s&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}(o);return r}}class u_ extends up{constructor(e){super(e)}load(e,t,n,i){let r=this,a=new ov,s=new um(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(r.withCredentials),s.load(e,function(e){let n=r.parse(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:ev,a.wrapT=void 0!==n.wrapT?n.wrapT:ev,a.magFilter=void 0!==n.magFilter?n.magFilter:eS,a.minFilter=void 0!==n.minFilter?n.minFilter:eS,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(a.encoding=n.encoding),void 0!==n.flipY&&(a.flipY=n.flipY),void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps,a.minFilter=eA),1===n.mipmapCount&&(a.minFilter=eS),void 0!==n.generateMipmaps&&(a.generateMipmaps=n.generateMipmaps),a.needsUpdate=!0,t&&t(a,n))},n,i),a}}class ub extends up{constructor(e){super(e)}load(e,t,n,i){let r=new nO,a=new uy(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(n){r.image=n;let i=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);r.format=i?ek:eV,r.needsUpdate=!0,void 0!==t&&t(r)},n,i),r}}class uM extends o4{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ll(t,e))}getPoint(e){let t=e*this.getLength(),n=this.getCurveLengths(),i=0;for(;i<n.length;){if(n[i]>=t){let r=n[i]-t,a=this.curves[i],s=a.getLength(),o=0===s?0:1-r/s;return a.getPointAt(o)}i++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let n=0,i=this.curves.length;n<i;n++)e.push(t+=this.curves[n].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t;let n=[];for(let i=0,r=this.curves;i<r.length;i++){let a=r[i],s=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let l=0;l<o.length;l++){let u=o[l];t&&t.equals(u)||(n.push(u),t=u)}}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){let i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){let i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){let i=e.curves[t];this.curves.push(new lp[i.type]().fromJSON(i))}return this}}class uw extends uM{constructor(e){super(),this.type="Path",this.currentPoint=new nN,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let n=new ll(this.currentPoint.clone(),new nN(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){let r=new lh(this.currentPoint.clone(),new nN(e,t),new nN(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){let s=new ls(this.currentPoint.clone(),new nN(e,t),new nN(n,i),new nN(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),n=new ld(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,s,o){let l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,i,r,a,s,o),this}absellipse(e,t,n,i,r,a,s,o){let l=new o5(e,t,n,i,r,a,s,o);if(this.curves.length>0){let u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class uS extends uw{constructor(e){super(e),this.uuid=nE(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){let i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){let i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){let i=e.holes[t];this.holes.push(new uw().fromJSON(i))}return this}}class uT extends iH{constructor(e,t=1){super(),this.type="Light",this.color=new i5(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}uT.prototype.isLight=!0;class uE extends uT{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(iH.DefaultUp),this.updateMatrix(),this.groundColor=new i5(t)}copy(e){return uT.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}uE.prototype.isHemisphereLight=!0;let uA=new ip,uL=new nj,uR=new nj;class uC{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new nN(512,512),this.map=null,this.mapPass=null,this.matrix=new ip,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new r3,this._frameExtents=new nN(1,1),this._viewportCount=1,this._viewports=[new nU(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,n=this.matrix;uL.setFromMatrixPosition(e.matrixWorld),t.position.copy(uL),uR.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(uR),t.updateMatrixWorld(),uA.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(uA),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class uP extends uC{constructor(){super(new rq(50,1,.5,500)),this.focus=1}updateMatrices(e){let t=this.camera,n=2*nT*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}uP.prototype.isSpotLightShadow=!0;class uD extends uT{constructor(e,t,n=0,i=Math.PI/3,r=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(iH.DefaultUp),this.updateMatrix(),this.target=new iH,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.shadow=new uP}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}uD.prototype.isSpotLight=!0;let uI=new ip,uN=new nj,uB=new nj;class uz extends uC{constructor(){super(new rq(90,1,.5,500)),this._frameExtents=new nN(4,2),this._viewportCount=6,this._viewports=[new nU(2,1,1,1),new nU(0,1,1,1),new nU(3,1,1,1),new nU(1,1,1,1),new nU(3,0,1,1),new nU(1,0,1,1)],this._cubeDirections=[new nj(1,0,0),new nj(-1,0,0),new nj(0,0,1),new nj(0,0,-1),new nj(0,1,0),new nj(0,-1,0)],this._cubeUps=[new nj(0,1,0),new nj(0,1,0),new nj(0,1,0),new nj(0,1,0),new nj(0,0,1),new nj(0,0,-1)]}updateMatrices(e,t=0){let n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),uN.setFromMatrixPosition(e.matrixWorld),n.position.copy(uN),uB.copy(n.position),uB.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(uB),n.updateMatrixWorld(),i.makeTranslation(-uN.x,-uN.y,-uN.z),uI.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(uI)}}uz.prototype.isPointLightShadow=!0;class uF extends uT{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new uz}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}uF.prototype.isPointLight=!0;class uO extends rj{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-e,a=n+e,s=i+t,o=i-t;if(null!==this.view&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,s-=u*this.view.offsetY,o=s-u*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}uO.prototype.isOrthographicCamera=!0;class uH extends uC{constructor(){super(new uO(-5,5,5,-5,.5,500))}}uH.prototype.isDirectionalLightShadow=!0;class uU extends uT{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(iH.DefaultUp),this.updateMatrix(),this.target=new iH,this.shadow=new uH}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}uU.prototype.isDirectionalLight=!0;class uG extends uT{constructor(e,t){super(e,t),this.type="AmbientLight"}}uG.prototype.isAmbientLight=!0;class uk extends uT{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}uk.prototype.isRectAreaLight=!0;class uV{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new nj)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){let n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*i),t.addScaledVector(a[2],1.023328*r),t.addScaledVector(a[3],1.023328*n),t.addScaledVector(a[4],.858086*n*i),t.addScaledVector(a[5],.858086*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],.858086*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+3*i);return this}toArray(e=[],t=0){let n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+3*i);return e}static getBasisAt(e,t){let n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}uV.prototype.isSphericalHarmonics3=!0;class uW extends uT{constructor(e=new uV,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}uW.prototype.isLightProbe=!0;class uj extends up{constructor(e){super(e),this.textures={}}load(e,t,n,i){let r=this,a=new um(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}parse(e){let t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let i=new l5[e.type];if(void 0!==e.uuid&&(i.uuid=e.uuid),void 0!==e.name&&(i.name=e.name),void 0!==e.color&&void 0!==i.color&&i.color.setHex(e.color),void 0!==e.roughness&&(i.roughness=e.roughness),void 0!==e.metalness&&(i.metalness=e.metalness),void 0!==e.sheen&&(i.sheen=new i5().setHex(e.sheen)),void 0!==e.emissive&&void 0!==i.emissive&&i.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==i.specular&&i.specular.setHex(e.specular),void 0!==e.shininess&&(i.shininess=e.shininess),void 0!==e.clearcoat&&(i.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(i.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.transmission&&(i.transmission=e.transmission),void 0!==e.thickness&&(i.thickness=e.thickness),void 0!==e.attenuationDistance&&(i.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(i.fog=e.fog),void 0!==e.flatShading&&(i.flatShading=e.flatShading),void 0!==e.blending&&(i.blending=e.blending),void 0!==e.combine&&(i.combine=e.combine),void 0!==e.side&&(i.side=e.side),void 0!==e.shadowSide&&(i.shadowSide=e.shadowSide),void 0!==e.opacity&&(i.opacity=e.opacity),void 0!==e.transparent&&(i.transparent=e.transparent),void 0!==e.alphaTest&&(i.alphaTest=e.alphaTest),void 0!==e.depthTest&&(i.depthTest=e.depthTest),void 0!==e.depthWrite&&(i.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(i.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(i.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(i.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(i.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(i.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(i.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(i.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(i.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(i.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(i.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(i.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(i.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(i.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(i.rotation=e.rotation),1!==e.linewidth&&(i.linewidth=e.linewidth),void 0!==e.dashSize&&(i.dashSize=e.dashSize),void 0!==e.gapSize&&(i.gapSize=e.gapSize),void 0!==e.scale&&(i.scale=e.scale),void 0!==e.polygonOffset&&(i.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(i.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(i.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.morphTargets&&(i.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(i.morphNormals=e.morphNormals),void 0!==e.dithering&&(i.dithering=e.dithering),void 0!==e.alphaToCoverage&&(i.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(i.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.vertexTangents&&(i.vertexTangents=e.vertexTangents),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.toneMapped&&(i.toneMapped=e.toneMapped),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let r in e.uniforms){let a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new i5().setHex(a.value);break;case"v2":i.uniforms[r].value=new nN().fromArray(a.value);break;case"v3":i.uniforms[r].value=new nj().fromArray(a.value);break;case"v4":i.uniforms[r].value=new nU().fromArray(a.value);break;case"m3":i.uniforms[r].value=new nB().fromArray(a.value);break;case"m4":i.uniforms[r].value=new ip().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(void 0!==e.defines&&(i.defines=e.defines),void 0!==e.vertexShader&&(i.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(i.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(let s in e.extensions)i.extensions[s]=e.extensions[s];if(void 0!==e.shading&&(i.flatShading=1===e.shading),void 0!==e.size&&(i.size=e.size),void 0!==e.sizeAttenuation&&(i.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(i.map=n(e.map)),void 0!==e.matcap&&(i.matcap=n(e.matcap)),void 0!==e.alphaMap&&(i.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(i.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(i.bumpScale=e.bumpScale),void 0!==e.normalMap&&(i.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(i.normalMapType=e.normalMapType),void 0!==e.normalScale){let o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),i.normalScale=new nN().fromArray(o)}return void 0!==e.displacementMap&&(i.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(i.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(i.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(i.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(i.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(i.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(i.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(i.specularMap=n(e.specularMap)),void 0!==e.envMap&&(i.envMap=n(e.envMap)),void 0!==e.envMapIntensity&&(i.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(i.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(i.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(i.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(i.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(i.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(i.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(i.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(i.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(i.clearcoatNormalScale=new nN().fromArray(e.clearcoatNormalScale)),void 0!==e.transmissionMap&&(i.transmissionMap=n(e.transmissionMap)),void 0!==e.thicknessMap&&(i.thicknessMap=n(e.thicknessMap)),i}setTextures(e){return this.textures=e,this}}class uq{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(r){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.substr(0,t+1)}}class uX extends r_{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}uX.prototype.isInstancedBufferGeometry=!0;class uY extends i9{constructor(e,t,n,i=1){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}uY.prototype.isInstancedBufferAttribute=!0;class uJ extends up{constructor(e){super(e)}load(e,t,n,i){let r=this,a=new um(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}parse(e){let t={},n={};function i(e,i){if(void 0!==t[i])return t[i];let r=e.interleavedBuffers,a=r[i],s=function(e,t){if(void 0!==n[t])return n[t];let i=e.arrayBuffers,r=i[t],a=new Uint32Array(r).buffer;return n[t]=a,a}(e,a.buffer),o=rd(a.type,s),l=new s$(o,a.stride);return l.uuid=a.uuid,t[i]=l,l}let r=e.isInstancedBufferGeometry?new uX:new r_,a=e.data.index;if(void 0!==a){let s=rd(a.type,a.array);r.setIndex(new i9(s,1))}let o=e.data.attributes;for(let l in o){let u;let h=o[l];if(h.isInterleavedBufferAttribute){let c=i(e.data,h.data);u=new s1(c,h.itemSize,h.offset,h.normalized)}else{let d=rd(h.type,h.array),p=h.isInstancedBufferAttribute?uY:i9;u=new p(d,h.itemSize,h.normalized)}void 0!==h.name&&(u.name=h.name),void 0!==h.usage&&u.setUsage(h.usage),void 0!==h.updateRange&&(u.updateRange.offset=h.updateRange.offset,u.updateRange.count=h.updateRange.count),r.setAttribute(l,u)}let f=e.data.morphAttributes;if(f)for(let m in f){let g=f[m],v=[];for(let y=0,x=g.length;y<x;y++){let _;let b=g[y];if(b.isInterleavedBufferAttribute){let M=i(e.data,b.data);_=new s1(M,b.itemSize,b.offset,b.normalized)}else{let w=rd(b.type,b.array);_=new i9(w,b.itemSize,b.normalized)}void 0!==b.name&&(_.name=b.name),v.push(_)}r.morphAttributes[m]=v}let S=e.data.morphTargetsRelative;S&&(r.morphTargetsRelative=!0);let T=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==T)for(let E=0,A=T.length;E!==A;++E){let L=T[E];r.addGroup(L.start,L.count,L.materialIndex)}let R=e.data.boundingSphere;if(void 0!==R){let C=new nj;void 0!==R.center&&C.fromArray(R.center),r.boundingSphere=new ir(C,R.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class uZ extends up{constructor(e){super(e)}load(e,t,n,i){let r=this,a=""===this.path?uq.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;let s=new um(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(n){let a=null;try{a=JSON.parse(n)}catch(s){void 0!==i&&i(s),console.error("THREE:ObjectLoader: Can't parse "+e+".",s.message);return}let o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(a,t)},n,i)}async loadAsync(e,t){let n=""===this.path?uq.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;let i=new um(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);let r=await i.loadAsync(e,t),a=JSON.parse(r),s=a.metadata;if(void 0===s||void 0===s.type||"geometry"===s.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(a)}parse(e,t){let n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){void 0!==t&&t(l)}),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,r,o,s,n),u=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,u),void 0!==t){let h=!1;for(let c in a)if(a[c]instanceof HTMLImageElement){h=!0;break}!1===h&&t(l)}return l}async parseAsync(e){let t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),s=this.parseMaterials(e.materials,a),o=this.parseObject(e.object,i,s,a,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){let t={};if(void 0!==e)for(let n=0,i=e.length;n<i;n++){let r=new uS().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){let n={},i={};if(t.traverse(function(e){e.isBone&&(i[e.uuid]=e)}),void 0!==e)for(let r=0,a=e.length;r<a;r++){let s=new o_().fromJSON(e[r],i);n[s.uuid]=s}return n}parseGeometries(e,t){let n={};if(void 0!==e){let i=new uJ;for(let r=0,a=e.length;r<a;r++){let s;let o=e[r];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":s=i.parse(o);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:o.type in lY?s=lY[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),!0===s.isBufferGeometry&&void 0!==o.userData&&(s.userData=o.userData),n[o.uuid]=s}}return n}parseMaterials(e,t){let n={},i={};if(void 0!==e){let r=new uj;r.setTextures(t);for(let a=0,s=e.length;a<s;a++){let o=e[a];if("MultiMaterial"===o.type){let l=[];for(let u=0;u<o.materials.length;u++){let h=o.materials[u];void 0===n[h.uuid]&&(n[h.uuid]=r.parse(h)),l.push(n[h.uuid])}i[o.uuid]=l}else void 0===n[o.uuid]&&(n[o.uuid]=r.parse(o)),i[o.uuid]=n[o.uuid]}}return i}parseAnimations(e){let t={};if(void 0!==e)for(let n=0;n<e.length;n++){let i=e[n],r=uu.parse(i);t[r.uuid]=r}return t}parseImages(e,t){let n;let i=this,r={};function a(e){if("string"==typeof e){let t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:i.resourcePath+e;return i.manager.itemStart(t),n.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemError(t),i.manager.itemEnd(t)})}return e.data?{data:rd(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){let s=new uc(t);(n=new uy(s)).setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){let u=e[o],h=u.url;if(Array.isArray(h)){r[u.uuid]=[];for(let c=0,d=h.length;c<d;c++){let p=h[c],f=a(p);null!==f&&(f instanceof HTMLImageElement?r[u.uuid].push(f):r[u.uuid].push(new ov(f.data,f.width,f.height)))}}else{let m=a(u.url);null!==m&&(r[u.uuid]=m)}}}return r}async parseImagesAsync(e){let t;let n=this,i={};async function r(e){if("string"==typeof e){let i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e;return await t.loadAsync(i)}return e.data?{data:rd(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(t=new uy(this.manager)).setCrossOrigin(this.crossOrigin);for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.url;if(Array.isArray(l)){i[o.uuid]=[];for(let u=0,h=l.length;u<h;u++){let c=l[u],d=await r(c);null!==d&&(d instanceof HTMLImageElement?i[o.uuid].push(d):i[o.uuid].push(new ov(d.data,d.width,d.height)))}}else{let p=await r(o.url);null!==p&&(i[o.uuid]=p)}}}return i}parseTextures(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let i={};if(void 0!==e)for(let r=0,a=e.length;r<a;r++){let s;let o=e[r];void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===t[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);let l=t[o.image];Array.isArray(l)?(s=new rY(l),6===l.length&&(s.needsUpdate=!0)):(s=l&&l.data?new ov(l.data,l.width,l.height):new nO(l),l&&(s.needsUpdate=!0)),s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),void 0!==o.mapping&&(s.mapping=n(o.mapping,uQ)),void 0!==o.offset&&s.offset.fromArray(o.offset),void 0!==o.repeat&&s.repeat.fromArray(o.repeat),void 0!==o.center&&s.center.fromArray(o.center),void 0!==o.rotation&&(s.rotation=o.rotation),void 0!==o.wrap&&(s.wrapS=n(o.wrap[0],uK),s.wrapT=n(o.wrap[1],uK)),void 0!==o.format&&(s.format=o.format),void 0!==o.type&&(s.type=o.type),void 0!==o.encoding&&(s.encoding=o.encoding),void 0!==o.minFilter&&(s.minFilter=n(o.minFilter,u$)),void 0!==o.magFilter&&(s.magFilter=n(o.magFilter,u$)),void 0!==o.anisotropy&&(s.anisotropy=o.anisotropy),void 0!==o.flipY&&(s.flipY=o.flipY),void 0!==o.premultiplyAlpha&&(s.premultiplyAlpha=o.premultiplyAlpha),void 0!==o.unpackAlignment&&(s.unpackAlignment=o.unpackAlignment),i[o.uuid]=s}return i}parseObject(e,t,n,i,r){let a,s,o;function l(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function u(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let i=0,r=e.length;i<r;i++){let a=e[i];void 0===n[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(n[a])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}function h(e){return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),i[e]}switch(e.type){case"Scene":a=new sK,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new i5(e.background):a.background=h(e.background)),void 0!==e.environment&&(a.environment=h(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new sQ(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new sZ(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new rq(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new uO(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new uG(e.color,e.intensity);break;case"DirectionalLight":a=new uU(e.color,e.intensity);break;case"PointLight":a=new uF(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new uk(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new uD(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new uE(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new uW().fromJSON(e);break;case"SkinnedMesh":s=l(e.geometry),o=u(e.material),a=new om(s,o),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":s=l(e.geometry),o=u(e.material),a=new rO(s,o);break;case"InstancedMesh":s=l(e.geometry),o=u(e.material);let c=e.count,d=e.instanceMatrix,p=e.instanceColor;(a=new oT(s,o,c)).instanceMatrix=new i9(new Float32Array(d.array),16),void 0!==p&&(a.instanceColor=new i9(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new ou;break;case"Line":a=new oD(l(e.geometry),u(e.material));break;case"LineLoop":a=new oz(l(e.geometry),u(e.material));break;case"LineSegments":a=new oB(l(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new ok(l(e.geometry),u(e.material));break;case"Sprite":a=new oa(u(e.material));break;case"Group":a=new sV;break;case"Bone":a=new og;break;default:a=new iH}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){let f=e.children;for(let m=0;m<f.length;m++)a.add(this.parseObject(f[m],t,n,i,r))}if(void 0!==e.animations){let g=e.animations;for(let v=0;v<g.length;v++){let y=g[v];a.animations.push(r[y])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);let x=e.levels;for(let _=0;_<x.length;_++){let b=x[_],M=a.getObjectByProperty("uuid",b.object);void 0!==M&&a.addLevel(M,b.distance)}}return a}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}let uQ={UVMapping:eu,CubeReflectionMapping:eh,CubeRefractionMapping:ec,EquirectangularReflectionMapping:ed,EquirectangularRefractionMapping:ep,CubeUVReflectionMapping:ef,CubeUVRefractionMapping:em},uK={RepeatWrapping:eg,ClampToEdgeWrapping:ev,MirroredRepeatWrapping:ey},u$={NearestFilter:ex,NearestMipmapNearestFilter:e_,NearestMipmapLinearFilter:eM,LinearFilter:eS,LinearMipmapNearestFilter:eT,LinearMipmapLinearFilter:eA};class u0 extends up{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=uh.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(e,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(n){uh.add(e,n),t&&t(n),r.manager.itemEnd(e)}).catch(function(t){i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}u0.prototype.isImageBitmapLoader=!0;class u1{constructor(){this.type="ShapePath",this.color=new i5,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new uw,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){let n,i,r,a,s;function o(e){let t=[];for(let n=0,i=e.length;n<i;n++){let r=e[n],a=new uS;a.curves=r.curves,t.push(a)}return t}let l=lC.isClockWise,u=this.subPaths;if(0===u.length)return[];if(!0===t)return o(u);let h=[];if(1===u.length)return i=u[0],(r=new uS).curves=i.curves,h.push(r),h;let c=!l(u[0].getPoints());c=e?!c:c;let d=[],p=[],f=[],m=0;p[0]=void 0,f[m]=[];for(let g=0,v=u.length;g<v;g++)n=l(a=(i=u[g]).getPoints()),(n=e?!n:n)?(!c&&p[m]&&m++,p[m]={s:new uS,p:a},p[m].s.curves=i.curves,c&&m++,f[m]=[]):f[m].push({h:i,p:a[0]});if(!p[0])return o(u);if(p.length>1){let y=!1,x=[];for(let _=0,b=p.length;_<b;_++)d[_]=[];for(let M=0,w=p.length;M<w;M++){let S=f[M];for(let T=0;T<S.length;T++){let E=S[T],A=!0;for(let L=0;L<p.length;L++)(function(e,t){let n=t.length,i=!1;for(let r=n-1,a=0;a<n;r=a++){let s=t[r],o=t[a],l=o.x-s.x,u=o.y-s.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(s=t[a],l=-l,o=t[r],u=-u),e.y<s.y||e.y>o.y)continue;if(e.y===s.y){if(e.x===s.x)return!0}else{let h=u*(e.x-s.x)-l*(e.y-s.y);if(0===h)return!0;if(h<0)continue;i=!i}}else{if(e.y!==s.y)continue;if(o.x<=e.x&&e.x<=s.x||s.x<=e.x&&e.x<=o.x)return!0}}return i})(E.p,p[L].p)&&(M!==L&&x.push({froms:M,tos:L,hole:T}),A?(A=!1,d[L].push(E)):y=!0);A&&d[M].push(E)}}x.length>0&&!y&&(f=d)}for(let R=0,C=p.length;R<C;R++){r=p[R].s,h.push(r),s=f[R];for(let P=0,D=s.length;P<D;P++)r.holes.push(s[P].h)}return h}}class u3{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){let n=[],i=function(e,t,n){let i=Array.from(e),r=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[],o=0,l=0;for(let u=0;u<i.length;u++){let h=i[u];if("\n"===h)o=0,l-=a;else{let c=function(e,t,n,i,r){let a,s,o,l,u,h,c,d;let p=r.glyphs[e]||r.glyphs["?"];if(!p){console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");return}let f=new u1;if(p.o){let m=p._cachedOutline||(p._cachedOutline=p.o.split(" "));for(let g=0,v=m.length;g<v;){let y=m[g++];switch(y){case"m":a=m[g++]*t+n,s=m[g++]*t+i,f.moveTo(a,s);break;case"l":a=m[g++]*t+n,s=m[g++]*t+i,f.lineTo(a,s);break;case"q":o=m[g++]*t+n,l=m[g++]*t+i,u=m[g++]*t+n,h=m[g++]*t+i,f.quadraticCurveTo(u,h,o,l);break;case"b":o=m[g++]*t+n,l=m[g++]*t+i,u=m[g++]*t+n,h=m[g++]*t+i,c=m[g++]*t+n,d=m[g++]*t+i,f.bezierCurveTo(u,h,c,d,o,l)}}}return{offsetX:p.ha*t,path:f}}(h,r,o,l,n);o+=c.offsetX,s.push(c.path)}}return s}(e,t,this.data);for(let r=0,a=i.length;r<a;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}}u3.prototype.isFont=!0;class u2 extends up{constructor(e){super(e)}load(e,t,n,i){let r=this,a=new um(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(e){let n;try{n=JSON.parse(e)}catch(i){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}let a=r.parse(n);t&&t(a)},n,i)}parse(e){return new u3(e)}}let u4={getContext:function(){return void 0===a&&(a=new(window.AudioContext||window.webkitAudioContext)),a},setContext:function(e){a=e}};class u5 extends up{constructor(e){super(e)}load(e,t,n,i){let r=this,a=new um(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(n){try{let a=n.slice(0),s=u4.getContext();s.decodeAudioData(a,function(e){t(e)})}catch(o){i?i(o):console.error(o),r.manager.itemError(e)}},n,i)}}class u6 extends uW{constructor(e,t,n=1){super(void 0,n);let i=new i5().set(e),r=new i5().set(t),a=new nj(i.r,i.g,i.b),s=new nj(r.r,r.g,r.b),o=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(o*Math.sqrt(.75))}}u6.prototype.isHemisphereLightProbe=!0;class u7 extends uW{constructor(e,t=1){super(void 0,t);let n=new i5().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}u7.prototype.isAmbientLightProbe=!0;let u8=new ip,u9=new ip;class he{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new rq,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new rq,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache,n=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(n){let i,r;t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;let a=e.projectionMatrix.clone(),s=t.eyeSep/2,o=s*t.near/t.focus,l=t.near*Math.tan(nS*t.fov*.5)/t.zoom;u9.elements[12]=-s,u8.elements[12]=s,i=-l*t.aspect+o,r=l*t.aspect+o,a.elements[0]=2*t.near/(r-i),a.elements[8]=(r+i)/(r-i),this.cameraL.projectionMatrix.copy(a),i=-l*t.aspect-o,r=l*t.aspect-o,a.elements[0]=2*t.near/(r-i),a.elements[8]=(r+i)/(r-i),this.cameraR.projectionMatrix.copy(a)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(u9),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(u8)}}class ht{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=hn(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=hn();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function hn(){return("undefined"==typeof performance?Date:performance).now()}let hi=new nj,hr=new nW,ha=new nj,hs=new nj;class ho extends iH{constructor(){super(),this.type="AudioListener",this.context=u4.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ht}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(hi,hr,ha),hs.set(0,0,-1).applyQuaternion(hr),t.positionX){let i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(hi.x,i),t.positionY.linearRampToValueAtTime(hi.y,i),t.positionZ.linearRampToValueAtTime(hi.z,i),t.forwardX.linearRampToValueAtTime(hs.x,i),t.forwardY.linearRampToValueAtTime(hs.y,i),t.forwardZ.linearRampToValueAtTime(hs.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(hi.x,hi.y,hi.z),t.setOrientation(hs.x,hs.y,hs.z,n.x,n.y,n.z)}}class hl extends iH{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}let hu=new nj,hh=new nW,hc=new nj,hd=new nj;class hp extends hl{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(hu,hh,hc),hd.set(0,0,1).applyQuaternion(hh);let t=this.panner;if(t.positionX){let n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(hu.x,n),t.positionY.linearRampToValueAtTime(hu.y,n),t.positionZ.linearRampToValueAtTime(hu.z,n),t.orientationX.linearRampToValueAtTime(hd.x,n),t.orientationY.linearRampToValueAtTime(hd.y,n),t.orientationZ.linearRampToValueAtTime(hd.z,n)}else t.setPosition(hu.x,hu.y,hu.z),t.setOrientation(hd.x,hd.y,hd.z)}}class hf{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class hm{constructor(e,t,n){let i,r,a;switch(this.binding=e,this.valueSize=n,t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let n=this.buffer,i=this.valueSize,r=e*i+i,a=this.cumulativeWeight;if(0===a){for(let s=0;s!==i;++s)n[r+s]=n[s];a=t}else{a+=t;let o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){let t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){let o=t*this._origIndex;this._mixBufferRegion(n,i,o,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,u=t+t;l!==u;++l)if(n[l]!==n[l+t]){s.setValue(n,i);break}}saveOriginalState(){let e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n;r!==i;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){nW.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){let a=this._workIndex*r;nW.multiplyQuaternionsFlat(e,a,e,t,e,n),nW.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){let a=1-i;for(let s=0;s!==r;++s){let o=t+s;e[o]=e[o]*a+e[n+s]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){let s=t+a;e[s]=e[s]+e[n+a]*i}}}let hg="\\[\\]\\.:\\/",hv=RegExp("["+hg+"]","g"),hy="[^"+hg+"]",hx="[^"+hg.replace("\\.","")+"]",h_=/((?:WC+[\/:])*)/.source.replace("WC",hy),hb=/(WCOD+)?/.source.replace("WCOD",hx),hM=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hy),hw=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hy),hS=RegExp("^"+h_+hb+hM+hw+"$"),hT=["material","materials","bones"];class hE{constructor(e,t,n){this.path=t,this.parsedPath=n||hE.parseTrackName(t),this.node=hE.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new hE.Composite(e,t,n):new hE(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(hv,"")}static parseTrackName(e){let t=hS.exec(e);if(!t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){let r=n.nodeName.substring(i+1);-1!==hT.indexOf(r)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(null===n.propertyName||0===n.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){let i=function(e){for(let n=0;n<e.length;n++){let r=e[n];if(r.name===t||r.uuid===t)return r;let a=i(r.children);if(a)return a}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.node[this.propertyName]}_getValue_array(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,n=t.objectName,i=t.propertyName,r=t.propertyIndex;if(e||(e=hE.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let a=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let s=0;s<e.length;s++)if(e[s].name===a){a=s;break}break;default:if(void 0===e[n]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(void 0!==a){if(void 0===e[a]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[a]}}let o=e[i];if(void 0===o){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let u=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?u=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(u=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}h=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(h=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][u]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}hE.Composite=class{constructor(e,t,n){let i=n||hE.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();let n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){let n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},hE.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},hE.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},hE.prototype.GetterByBindingType=[hE.prototype._getValue_direct,hE.prototype._getValue_array,hE.prototype._getValue_arrayElement,hE.prototype._getValue_toArray],hE.prototype.SetterByBindingTypeAndVersioning=[[hE.prototype._setValue_direct,hE.prototype._setValue_direct_setNeedsUpdate,hE.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[hE.prototype._setValue_array,hE.prototype._setValue_array_setNeedsUpdate,hE.prototype._setValue_array_setMatrixWorldNeedsUpdate],[hE.prototype._setValue_arrayElement,hE.prototype._setValue_arrayElement_setNeedsUpdate,hE.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[hE.prototype._setValue_fromArray,hE.prototype._setValue_fromArray_setNeedsUpdate,hE.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class hA{constructor(){this.uuid=nE(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};let i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length,s,o=e.length,l=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){let c=arguments[u],d=c.uuid,p=t[d];if(void 0===p){p=o++,t[d]=p,e.push(c);for(let f=0;f!==a;++f)r[f].push(new hE(c,n[f],i[f]))}else if(p<l){s=e[p];let m=--l,g=e[m];t[g.uuid]=p,e[p]=g,t[d]=m,e[m]=c;for(let v=0;v!==a;++v){let y=r[v],x=y[m],_=y[p];y[p]=x,void 0===_&&(_=new hE(c,n[v],i[v])),y[m]=_}}else e[p]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length,r=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){let o=arguments[a],l=o.uuid,u=t[l];if(void 0!==u&&u>=r){let h=r++,c=e[h];t[c.uuid]=u,e[u]=c,t[l]=h,e[h]=o;for(let d=0;d!==i;++d){let p=n[d],f=p[h],m=p[u];p[u]=f,p[h]=m}}}this.nCachedObjects_=r}uncache(){let e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length,r=this.nCachedObjects_,a=e.length;for(let s=0,o=arguments.length;s!==o;++s){let l=arguments[s],u=l.uuid,h=t[u];if(void 0!==h){if(delete t[u],h<r){let c=--r,d=e[c],p=--a,f=e[p];t[d.uuid]=h,e[h]=d,t[f.uuid]=c,e[c]=f,e.pop();for(let m=0;m!==i;++m){let g=n[m],v=g[c],y=g[p];g[h]=v,g[c]=y,g.pop()}}else{let x=--a,_=e[x];x>0&&(t[_.uuid]=h),e[h]=_,e.pop();for(let b=0;b!==i;++b){let M=n[b];M[h]=M[x],M.pop()}}}}this.nCachedObjects_=r}subscribe_(e,t){let n=this._bindingsIndicesByPath,i=n[e],r=this._bindings;if(void 0!==i)return r[i];let a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,h=Array(l);i=r.length,n[e]=i,a.push(e),s.push(t),r.push(h);for(let c=u,d=o.length;c!==d;++c){let p=o[c];h[c]=new hE(p,e,t)}return h}unsubscribe_(e){let t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){let i=this._paths,r=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=n,a[n]=o,a.pop(),r[n]=r[s],r.pop(),i[n]=i[s],i.pop()}}}hA.prototype.isAnimationObjectGroup=!0;class hL{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;let r=t.tracks,a=r.length,s=Array(a),o={endingStart:tF,endingEnd:tF};for(let l=0;l!==a;++l){let u=r[l].createInterpolant(null);s[l]=u,u.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=tD,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){let i=this._clip.duration,r=e._clip.duration;e.warp(1,r/i,t),this.warp(i/r,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){let i=this._mixer,r=i.time,a=this.timeScale,s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);let o=s.parameterPositions,l=s.sampleValues;return o[0]=r,o[1]=r+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}let r=this._startTime;if(null!==r){let a=(e-r)*n;if(a<0||0===n)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);let s=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,u=this._propertyBindings;if(this.blendMode===tG)for(let h=0,c=l.length;h!==c;++h)l[h].evaluate(s),u[h].accumulateAdditive(o);else for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(s),u[d].accumulate(i,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let n=this._weightInterpolant;if(null!==n){let i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let n=this._timeScaleInterpolant;if(null!==n){let i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,n=this.loop,i=this.time+e,r=this._loopCount,a=n===tI;if(0===e)return -1===r?i:a&&(1&r)==1?t-i:i;if(n===tP){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));r:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break r}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),i>=t||i<0){let s=Math.floor(i/t);i-=t*s,r+=Math.abs(s);let o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){let l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=i;if(a&&(1&r)==1)return t-i}return i}_setEndings(e,t,n){let i=this._interpolantSettings;n?(i.endingStart=tO,i.endingEnd=tO):(e?i.endingStart=this.zeroSlopeAtStart?tO:tF:i.endingStart=tH,t?i.endingEnd=this.zeroSlopeAtEnd?tO:tF:i.endingEnd=tH)}_scheduleFading(e,t,n){let i=this._mixer,r=i.time,a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);let s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=t,s[1]=r+e,o[1]=n,this}}class hR extends n_{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,s=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName,u=l[o];void 0===u&&(u={},l[o]=u);for(let h=0;h!==r;++h){let c=i[h],d=c.name,p=u[d];if(void 0!==p)a[h]=p;else{if(void 0!==(p=a[h])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}let f=t&&t._propertyBindings[h].binding.parsedPath;p=new hm(hE.create(n,d,f),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,o,d),a[h]=p}s[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n];this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,n,t)}let r=e._propertyBindings;for(let a=0,s=r.length;a!==s;++a){let o=r[a];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){let r=t[n];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;let e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){let i=this._actions,r=this._actionsByClip,a=r[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{let s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){let t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;let r=e._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,l=o[o.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),e._byClipCacheIndex=null;let h=s.actionByRoot,c=(e._localRoot||this._root).uuid;delete h[c],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){let r=t[n];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){let t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){let t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){let i=this._bindingsByRootAndName,r=this._bindings,a=i[t];void 0===a&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){let t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,s=a[i],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[r],0===Object.keys(s).length&&delete a[i]}_lendBinding(e){let t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){let t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&((n=new l9(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){let t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){let i=t||this._root,r=i.uuid,a="string"==typeof e?uu.findByName(i,e):e,s=null!==a?a.uuid:e,o=this._actionsByClip[s],l=null;if(void 0===n&&(n=null!==a?a.blendMode:tU),void 0!==o){let u=o.actionByRoot[r];if(void 0!==u&&u.blendMode===n)return u;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;let h=new hL(this,a,t,n);return this._bindAction(h,l),this._addInactiveAction(h,s,r),h}existingAction(e,t){let n=t||this._root,i=n.uuid,r="string"==typeof e?uu.findByName(n,e):e,a=r?r.uuid:e,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[i]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;let t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==n;++s){let o=t[s];o._update(i,e,r,a)}let l=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)l[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){let a=r.knownActions;for(let s=0,o=a.length;s!==o;++s){let l=a[s];this._deactivateAction(l);let u=l._cacheIndex,h=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}}uncacheRoot(e){let t=e.uuid,n=this._actionsByClip;for(let i in n){let r=n[i].actionByRoot,a=r[t];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}let s=this._bindingsByRootAndName,o=s[t];if(void 0!==o)for(let l in o){let u=o[l];u.restoreOriginalState(),this._removeInactiveBinding(u)}}uncacheAction(e,t){let n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}hR.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class hC{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new hC(void 0===this.value.clone?this.value:this.value.clone())}}class hP extends s${constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}hP.prototype.isInstancedInterleavedBuffer=!0;class hD{constructor(e,t,n,i,r){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}hD.prototype.isGLBufferAttribute=!0;class hI{constructor(e,t,n=0,i=1/0){this.ray=new id(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new iT,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!1,n=[]){return hB(e,this,n,t),n.sort(hN),n}intersectObjects(e,t=!1,n=[]){for(let i=0,r=e.length;i<r;i++)hB(e[i],this,n,t);return n.sort(hN),n}}function hN(e,t){return e.distance-t.distance}function hB(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===i){let r=e.children;for(let a=0,s=r.length;a<s;a++)hB(r[a],t,n,!0)}}class hz{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(nA(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class hF{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}let hO=new nN;class hH{constructor(e=new nN(Infinity,Infinity),t=new nN(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=hO.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=hO.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}hH.prototype.isBox2=!0;let hU=new nj,hG=new nj;class hk{constructor(e=new nj,t=new nj){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){hU.subVectors(e,this.start),hG.subVectors(this.end,this.start);let n=hG.dot(hG),i=hG.dot(hU),r=i/n;return t&&(r=nA(r,0,1)),r}closestPointToPoint(e,t,n){let i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class hV extends iH{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}hV.prototype.isImmediateRenderObject=!0;let hW=new nj;class hj extends iH{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;let n=new r_,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,a=1;r<32;r++,a++){let s=r/32*Math.PI*2,o=a/32*Math.PI*2;i.push(Math.cos(s),Math.sin(s),1,Math.cos(o),Math.sin(o),1)}n.setAttribute("position",new rl(i,3));let l=new oE({fog:!1,toneMapped:!1});this.cone=new oB(n,l),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),hW.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(hW),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let hq=new nj,hX=new ip,hY=new ip;class hJ extends oB{constructor(e){let t=function e(t){let n=[];t&&t.isBone&&n.push(t);for(let i=0;i<t.children.length;i++)n.push.apply(n,e(t.children[i]));return n}(e),n=new r_,i=[],r=[],a=new i5(0,0,1),s=new i5(0,1,0);for(let o=0;o<t.length;o++){let l=t[o];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new rl(i,3)),n.setAttribute("color",new rl(r,3));let u=new oE({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,n=this.geometry,i=n.getAttribute("position");hY.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){let s=t[r];s.parent&&s.parent.isBone&&(hX.multiplyMatrices(hY,s.matrixWorld),hq.setFromMatrixPosition(hX),i.setXYZ(a,hq.x,hq.y,hq.z),hX.multiplyMatrices(hY,s.parent.matrixWorld),hq.setFromMatrixPosition(hX),i.setXYZ(a+1,hq.x,hq.y,hq.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class hZ extends rO{constructor(e,t,n){let i=new lG(t,4,2),r=new i6({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let hQ=new nj,hK=new i5,h$=new i5;class h0 extends iH{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;let i=new lF(t);i.rotateY(.5*Math.PI),this.material=new i6({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let r=i.getAttribute("position"),a=new Float32Array(3*r.count);i.setAttribute("color",new i9(a,3)),this.add(new rO(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");hK.copy(this.light.color),h$.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){let r=n<i/2?hK:h$;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(hQ.setFromMatrixPosition(this.light.matrixWorld).negate())}}class h1 extends oB{constructor(e=10,t=10,n=4473924,i=8947848){n=new i5(n),i=new i5(i);let r=t/2,a=e/t,s=e/2,o=[],l=[];for(let u=0,h=0,c=-s;u<=t;u++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);let d=u===r?n:i;d.toArray(l,h),h+=3,d.toArray(l,h),h+=3,d.toArray(l,h),h+=3,d.toArray(l,h),h+=3}let p=new r_;p.setAttribute("position",new rl(o,3)),p.setAttribute("color",new rl(l,3));let f=new oE({vertexColors:!0,toneMapped:!1});super(p,f),this.type="GridHelper"}}class h3 extends oB{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new i5(r),a=new i5(a);let s=[],o=[];for(let l=0;l<=t;l++){let u=l/t*(2*Math.PI),h=Math.sin(u)*e,c=Math.cos(u)*e;s.push(0,0,0),s.push(h,0,c);let d=1&l?r:a;o.push(d.r,d.g,d.b),o.push(d.r,d.g,d.b)}for(let p=0;p<=n;p++){let f=1&p?r:a,m=e-e/n*p;for(let g=0;g<i;g++){let v=g/i*(2*Math.PI),y=Math.sin(v)*m,x=Math.cos(v)*m;s.push(y,0,x),o.push(f.r,f.g,f.b),y=Math.sin(v=(g+1)/i*(2*Math.PI))*m,x=Math.cos(v)*m,s.push(y,0,x),o.push(f.r,f.g,f.b)}}let _=new r_;_.setAttribute("position",new rl(s,3)),_.setAttribute("color",new rl(o,3));let b=new oE({vertexColors:!0,toneMapped:!1});super(_,b),this.type="PolarGridHelper"}}let h2=new nj,h4=new nj,h5=new nj;class h6 extends iH{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let i=new r_;i.setAttribute("position",new rl([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let r=new oE({fog:!1,toneMapped:!1});this.lightPlane=new oD(i,r),this.add(this.lightPlane),(i=new r_).setAttribute("position",new rl([0,0,0,0,0,1],3)),this.targetLine=new oD(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){h2.setFromMatrixPosition(this.light.matrixWorld),h4.setFromMatrixPosition(this.light.target.matrixWorld),h5.subVectors(h4,h2),this.lightPlane.lookAt(h4),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(h4),this.targetLine.scale.z=h5.length()}}let h7=new nj,h8=new rj;class h9 extends oB{constructor(e){let t=new r_,n=new oE({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={},s=new i5(16755200),o=new i5(16711680),l=new i5(43775),u=new i5(16777215),h=new i5(3355443);function c(e,t,n){d(e,n),d(t,n)}function d(e,t){i.push(0,0,0),r.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(i.length/3-1)}c("n1","n2",s),c("n2","n4",s),c("n4","n3",s),c("n3","n1",s),c("f1","f2",s),c("f2","f4",s),c("f4","f3",s),c("f3","f1",s),c("n1","f1",s),c("n2","f2",s),c("n3","f3",s),c("n4","f4",s),c("p","n1",o),c("p","n2",o),c("p","n3",o),c("p","n4",o),c("u1","u2",l),c("u2","u3",l),c("u3","u1",l),c("c","t",u),c("p","c",h),c("cn1","cn2",h),c("cn3","cn4",h),c("cf1","cf2",h),c("cf3","cf4",h),t.setAttribute("position",new rl(i,3)),t.setAttribute("color",new rl(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){let e=this.geometry,t=this.pointMap;h8.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),ce("c",t,e,h8,0,0,-1),ce("t",t,e,h8,0,0,1),ce("n1",t,e,h8,-1,-1,-1),ce("n2",t,e,h8,1,-1,-1),ce("n3",t,e,h8,-1,1,-1),ce("n4",t,e,h8,1,1,-1),ce("f1",t,e,h8,-1,-1,1),ce("f2",t,e,h8,1,-1,1),ce("f3",t,e,h8,-1,1,1),ce("f4",t,e,h8,1,1,1),ce("u1",t,e,h8,.7,1.1,-1),ce("u2",t,e,h8,-.7,1.1,-1),ce("u3",t,e,h8,0,2,-1),ce("cf1",t,e,h8,-1,0,1),ce("cf2",t,e,h8,1,0,1),ce("cf3",t,e,h8,0,-1,1),ce("cf4",t,e,h8,0,1,1),ce("cn1",t,e,h8,-1,0,-1),ce("cn2",t,e,h8,1,0,-1),ce("cn3",t,e,h8,0,-1,-1),ce("cn4",t,e,h8,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function ce(e,t,n,i,r,a,s){h7.set(r,a,s).unproject(i);let o=t[e];if(void 0!==o){let l=n.getAttribute("position");for(let u=0,h=o.length;u<h;u++)l.setXYZ(o[u],h7.x,h7.y,h7.z)}}let ct=new nY;class cn extends oB{constructor(e,t=16776960){let n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new r_;r.setIndex(new i9(n,1)),r.setAttribute("position",new i9(i,3)),super(r,new oE({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&ct.setFromObject(this.object),ct.isEmpty())return;let t=ct.min,n=ct.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return oB.prototype.copy.call(this,e),this.object=e.object,this}}class ci extends oB{constructor(e,t=16776960){let n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new r_;i.setIndex(new i9(n,1)),i.setAttribute("position",new rl([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new oE({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class cr extends oD{constructor(e,t=1,n=16776960){let i=new r_;i.setAttribute("position",new rl([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new oE({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let r=new r_;r.setAttribute("position",new rl([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),r.computeBoundingSphere(),this.add(new rO(r,new i6({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;1e-8>Math.abs(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?_:x,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}let ca=new nj;class cs extends iH{constructor(e=new nj(0,0,1),t=new nj(0,0,0),n=1,i=16776960,r=.2*n,a=.2*r){super(),this.type="ArrowHelper",void 0===s&&((s=new r_).setAttribute("position",new rl([0,0,0,0,1,0],3)),(o=new oJ(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new oD(s,new oE({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new rO(o,new i6({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{ca.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(ca,t)}}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class co extends oB{constructor(e=1){let t=new r_;t.setAttribute("position",new rl([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new rl([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let n=new oE({vertexColors:!0,toneMapped:!1});super(t,n),this.type="AxesHelper"}setColors(e,t,n){let i=new i5,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}let cl=new Float32Array(1),cu=new Int32Array(cl.buffer);class ch{static toHalfFloat(e){cl[0]=e;let t=cu[0],n=t>>16&32768,i=t>>12&2047,r=t>>23&255;return r<103?n:r>142?(n|=31744,n|=(255==r?0:1)&&8388607&t):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1)):(n|=r-112<<10|i>>1,n+=1&i)}}let cc=[.125,.215,.35,.446,.526,.582],cd=5+cc.length,cp={[tj]:0,[tq]:1,[tY]:2,[tZ]:3,[tQ]:4,[tK]:5,[tX]:6},cf=new i6({side:_,depthWrite:!1,depthTest:!1}),cm=new rO(new rU,cf),cg=new uO,{_lodPlanes:cv,_sizeLods:cy,_sigmas:cx}=function(){let e=[],t=[],n=[],i=8;for(let r=0;r<cd;r++){let a=Math.pow(2,i);t.push(a);let s=1/a;r>4?s=cc[r-8+4-1]:0==r&&(s=0),n.push(s);let o=1/(a-1),l=-o/2,u=1+o/2,h=[l,l,u,l,u,u,l,l,u,u,l,u],c=new Float32Array(108),d=new Float32Array(72),p=new Float32Array(36);for(let f=0;f<6;f++){let m=f%3*2/3-1,g=f>2?0:-1,v=[m,g,0,m+2/3,g,0,m+2/3,g+1,0,m,g,0,m+2/3,g+1,0,m,g+1,0];c.set(v,18*f),d.set(h,12*f);let y=[f,f,f,f,f,f];p.set(y,6*f)}let x=new r_;x.setAttribute("position",new i9(c,3)),x.setAttribute("uv",new i9(d,2)),x.setAttribute("faceIndex",new i9(p,1)),e.push(x),i>4&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}(),c_=new i5,cb=null,cM=(1+Math.sqrt(5))/2,cw=1/cM,cS=[new nj(1,1,1),new nj(-1,1,1),new nj(1,1,-1),new nj(-1,1,-1),new nj(0,cM,cw),new nj(0,cM,-cw),new nj(cw,0,cM),new nj(-cw,0,cM),new nj(cM,cw,0),new nj(-cM,cw,0)];function cT(e){let t=Math.max(e.r,e.g,e.b),n=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);return e.multiplyScalar(Math.pow(2,-n)),(n+128)/255}class cE{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function(e){let t=new Float32Array(e),n=new nj(0,1,0),i=new lZ({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:cp[tj]},outputEncoding:{value:cp[tj]}},vertexShader:cP(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${cD()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:S,depthTest:!1,depthWrite:!1});return i}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){cb=this._renderer.getRenderTarget();let r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=cC(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=cR(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<cv.length;e++)cv[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(cb),e.scissorTest=!1,cL(e,0,0,e.width,e.height)}_fromTexture(e){cb=this._renderer.getRenderTarget();let t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){let t={magFilter:ex,minFilter:ex,generateMipmaps:!1,type:eR,format:eq,encoding:void 0!==e&&e.type===eR&&(e.encoding===tj||e.encoding===tq||e.encoding===tX)?e.encoding:tY,depthBuffer:!1},n=cA(t);return n.depthBuffer=!e,this._pingPongRenderTarget=cA(t),n}_compileMaterial(e){let t=new rO(cv[0],e);this._renderer.compile(t,cg)}_sceneToCubeUV(e,t,n,i){let r=new rq(90,1,t,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.outputEncoding,h=o.toneMapping;o.getClearColor(c_),o.toneMapping=ei,o.outputEncoding=tj,o.autoClear=!1;let c=!1,d=e.background;if(d){if(d.isColor){cf.color.copy(d).convertSRGBToLinear(),e.background=null;let p=cT(cf.color);cf.opacity=p,c=!0}}else{cf.color.copy(c_).convertSRGBToLinear();let f=cT(cf.color);cf.opacity=f,c=!0}for(let m=0;m<6;m++){let g=m%3;0==g?(r.up.set(0,a[m],0),r.lookAt(s[m],0,0)):1==g?(r.up.set(0,0,a[m]),r.lookAt(0,s[m],0)):(r.up.set(0,a[m],0),r.lookAt(0,0,s[m])),cL(i,256*g,m>2?256:0,256,256),o.setRenderTarget(i),c&&o.render(cm,r),o.render(e,r)}o.toneMapping=h,o.outputEncoding=u,o.autoClear=l}_textureToCubeUV(e,t){let n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=cC()):null==this._equirectShader&&(this._equirectShader=cR());let i=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new rO(cv[0],i),a=i.uniforms;a.envMap.value=e,e.isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=cp[e.encoding],a.outputEncoding.value=cp[t.texture.encoding],cL(t,0,0,768,512),n.setRenderTarget(t),n.render(r,cg)}_applyPMREM(e){let t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<cd;i++){let r=Math.sqrt(cx[i]*cx[i]-cx[i-1]*cx[i-1]),a=cS[(i-1)%cS.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let u=new rO(cv[i],l),h=l.uniforms,c=cy[n]-1,d=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let v=0;v<20;++v){let y=v/p,x=Math.exp(-y*y/2);m.push(x),0==v?g+=x:v<f&&(g+=2*x)}for(let _=0;_<m.length;_++)m[_]=m[_]/g;h.envMap.value=e.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s),h.dTheta.value=d,h.mipInt.value=8-n,h.inputEncoding.value=cp[e.texture.encoding],h.outputEncoding.value=cp[e.texture.encoding];let b=cy[i];cL(t,3*Math.max(0,256-2*b),(0===i?0:512)+2*b*(i>4?i-8+4:0),3*b,2*b),o.setRenderTarget(t),o.render(u,cg)}}function cA(e){let t=new nG(768,768,e);return t.texture.mapping=ef,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function cL(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function cR(){let e=new nN(1,1),t=new lZ({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:cp[tj]},outputEncoding:{value:cp[tj]}},vertexShader:cP(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${cD()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:S,depthTest:!1,depthWrite:!1});return t}function cC(){let e=new lZ({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:cp[tj]},outputEncoding:{value:cp[tj]}},vertexShader:cP(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${cD()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:S,depthTest:!1,depthWrite:!1});return e}function cP(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function cD(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}let cI=0,cN=1,cB=0,cz=1,cF=2;function cO(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function cH(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function cU(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ok(e,t)}function cG(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new oa(e)}function ck(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ok(e,t)}function cV(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new oF(e)}function cW(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new oF(e)}function cj(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new oF(e)}function cq(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new nj(e,t,n)}function cX(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new i9(e,t).setUsage(nh)}function cY(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new re(e,t)}function cJ(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new rt(e,t)}function cZ(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new rn(e,t)}function cQ(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new ri(e,t)}function cK(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new rr(e,t)}function c$(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new ra(e,t)}function c0(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new rs(e,t)}function c1(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new rl(e,t)}function c3(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new ru(e,t)}function c2(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new co(e)}function c4(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new cn(e,t)}function c5(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new oB(new o2(e.geometry),new oE({color:void 0!==t?t:16777215}))}function c6(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new oB(new lX(e.geometry),new oE({color:void 0!==t?t:16777215}))}function c7(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new um(e)}function c8(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new u_(e)}function c9(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new rJ(e,n)}function de(){console.error("THREE.CanvasRenderer has been removed")}function dt(){console.error("THREE.JSONLoader has been removed.")}o4.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(o4.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},uw.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},h1.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},hJ.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},up.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),uq.extractUrlBase(e)},up.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},hH.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},hH.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},hH.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},hH.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},nY.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},nY.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},nY.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},nY.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},nY.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},ir.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},r3.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},hk.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},nB.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},nB.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},nB.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},nB.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},nB.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},nB.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ip.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},ip.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ip.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new nj().setFromMatrixColumn(this,3)},ip.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},ip.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ip.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ip.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ip.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ip.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},ip.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ip.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ip.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ip.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ip.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ip.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ip.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ip.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ip.prototype.makeFrustum=function(e,t,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,a)},ip.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},r$.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},nW.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},nW.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},id.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},id.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},id.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},iZ.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},iZ.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},iZ.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},iZ.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},iZ.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},iZ.barycoordFromPoint=function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),iZ.getBarycoord(e,t,n,i,r)},iZ.normal=function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),iZ.getNormal(e,t,n,i)},uS.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},uS.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new lI(this,e)},uS.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new lU(this,e)},nN.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nN.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},nN.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},nj.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},nj.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},nj.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},nj.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},nj.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},nj.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},nj.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nj.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},nj.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},nU.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nU.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},iH.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},iH.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},iH.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},iH.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},iH.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(iH.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),rO.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(rO.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),tk},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),om.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},rq.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(uT.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(i9.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===nh},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(nh)}}}),i9.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?nh:nu),this},i9.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},i9.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},r_.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},r_.prototype.addAttribute=function(e,t){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute)?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new i9(arguments[1],arguments[2])))},r_.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},r_.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},r_.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},r_.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},r_.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(r_.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),s$.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?nh:nu),this},s$.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},lI.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},lI.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},lI.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},sK.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},hC.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(iK.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new i5}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===M}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(rW.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),sY.prototype.clearTarget=function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},sY.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},sY.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},sY.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},sY.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},sY.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},sY.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},sY.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},sY.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},sY.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},sY.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},sY.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},sY.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},sY.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},sY.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},sY.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},sY.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},sY.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},sY.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},sY.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},sY.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},sY.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},sY.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},sY.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},sY.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(sY.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?tq:tj}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(sO.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(nG.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),hl.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let t=this,n=new u5;return n.load(e,function(e){t.setBuffer(e)}),this},hf.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},rX.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},rX.prototype.clear=function(e,t,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,i)},nz.crossOrigin=void 0,nz.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let r=new ub;r.setCrossOrigin(this.crossOrigin);let a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},nz.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let r=new ux;r.setCrossOrigin(this.crossOrigin);let a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},nz.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},nz.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};let dn={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function di(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:l}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=l)}}]);